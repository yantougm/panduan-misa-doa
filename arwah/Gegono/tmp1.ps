%!PS-Adobe-2.0
%%Creator: dvips(k) 5.98 Copyright 2009 Radical Eye Software
%%Title: dua-tahun-gegono-2.dvi
%%CreationDate: Fri Mar  4 12:51:03 2011
%%Pages: 8 0
%%PageOrder: Ascend
%%BoundingBox: 0 0 420 596
%%DocumentFonts: Palatino-BoldItalic CMR12 CMSSBX10 CMTI12
%%DocumentPaperSizes: a5
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o dua-tahun-gegono-2.ps dua-tahun-gegono-2.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2011.03.04:1250
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 90 2009-01-30 10:58:51Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.06, 2009/01/30
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionaray
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
/Rand { rand 4294967295 div } def		% a real random number
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/PenroseFill {%	 on stack: scaling factor
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
  pop pop 
} def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
%/NArray { 
%   aload length 2 div dup dup cvi eq not { exch pop } if /n exch
%   cvi def 
%} def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  showpoints { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED /c ED /n ED 
  cvi dup 1 lt { pop 1 } if 
  /s ED 
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if
  /dx ED dy div round dy mul 
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput { 
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
} def
%
/BeginOL { 
  dup (all) eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 26 2008-06-14 11:50:02Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.01, 2008/01/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.12
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower IsEndingFactor { pop exit } if} loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
end

% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 26 2008-06-14 11:50:02Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2008/04/18
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def

end
/PSTricksDotFont exch definefont pop

%% end

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% PostScript header file pst-text.pro
% Version 1.0, 2005-11-29 (hv)
% For distribution, see pstricks.tex.

/tx@TextPathDict 40 dict def
tx@TextPathDict begin

% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def

/movetoproc { continue { @movetoproc } { pop pop } ifelse } def

/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def

/linetoproc { continue { @linetoproc } { pop pop } ifelse } def

/@linetoproc {
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def

/TextPathShow { 
  /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def

% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def

/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def

/ShowChar { 
  /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def

%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint

    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def
%
end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: pst-grad.pro 0 0
%!
% PostScript prologue for pst-grad.tex.
% Version 1.05, 2006/11/04 
% prepared by Herbert Voss
% For copying restrictions, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).%
% Syntax:% D.G. modification begin - Apr.  9, %1998
%%%%%% R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill
%   ifGradientCircle GradientScale %GradientPosX GradientPosY
%     R0 G0 B0 R1 G1 B1 NumLines MidPoint %Angle GradientFill
% D.G. modification end
%
/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
 /ifCMYK exch def   % do we have rgb or cmyk? hv 1.06
 rotate
 /MidPoint ED
 /NumLines ED
 ifCMYK {
    /LastBlack ED	% 1.06
    /LastYellow ED	% 1.06
    /LastMagenta ED	% 1.06
    /LastCyan ED	% 1.06
    /FirstBlack ED	% 1.06
    /FirstYellow ED	% 1.06
    /FirstMagenta ED	% 1.06
    /FirstCyan ED	% 1.06
 }{ /LastBlue ED
    /LastGreen ED
    /LastRed ED
    /FirstBlue ED
    /FirstGreen ED
    /FirstRed ED
 } ifelse
 /GradientPosY ED
 /GradientPosX ED
 /GradientScale ED
 /ifGradientCircle ED
 % This avoids gaps due to rounding errors:
 clip
 pathbbox           %leave llx,lly,urx,ury on stack
 4 copy /ury ED /urx ED /lly ED /llx ED
 /y ED /x ED
 ifGradientCircle
   { 0 GradientPosX eq { 0 GradientPosX eq {2 copy translate} if } if }
   {2 copy translate} ifelse
 y sub neg /y ED
 x sub neg /x ED  % This avoids gaps due to rounding errors:
 ifCMYK {				% 1.06
    LastCyan FirstCyan add 2 div	% 1.06
    LastMagenta FirstMagenta add 2 div	% 1.06
    LastYellow FirstYellow add 2 div	% 1.06
    LastBlack FirstBlack add 2 div	% 1.06
    setcmykcolor			% 1.06
  }{
    LastRed FirstRed add 2 div
    LastGreen FirstGreen add 2 div
    LastBlue FirstBlue add 2 div
    setrgbcolor
  } ifelse
 ifGradientCircle
   { /YSizePerLine y NumLines div def
     /CurrentY y 2 div def
     /MidLine NumLines 2 div 1 MidPoint sub mul abs cvi def
   }{
     fill
     /YSizePerLine y NumLines div def
     /CurrentY 0 def
     /MidLine NumLines 1 MidPoint sub mul abs cvi def
   } ifelse
 MidLine NumLines 2 sub gt 
   { /MidLine NumLines def }
   { MidLine 2 lt { /MidLine 0 def } if } ifelse
 MidLine 0 gt {
  ifCMYK {
    /Cyan FirstCyan def
    /Magenta FirstMagenta def
    /Yellow FirstYellow def
    /Black FirstBlack def
    /CyanIncrement LastCyan FirstCyan sub MidLine 1 sub div def
    /MagentaIncrement LastMagenta FirstMagenta sub MidLine 1 sub div def
    /YellowIncrement LastYellow FirstYellow sub MidLine 1 sub div def
    /BlackIncrement LastBlack FirstBlack sub MidLine 1 sub div def
  }{
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
  } ifelse
  MidLine { GradientLoop } repeat
 } if
 MidLine NumLines lt {
  ifCMYK {
    /Cyan LastCyan def
    /Magenta LastMagenta def
    /Yellow LastYellow def
    /Black LastBlack def
    /CyanIncrement FirstCyan LastCyan sub NumLines MidLine sub 1 sub div def
    /MagentaIncrement FirstMagenta LastMagenta sub NumLines MidLine sub 1 sub div def
    /YellowIncrement FirstYellow LastYellow sub NumLines MidLine sub 1 sub div def
    /BlackIncrement FirstBlack LastBlack sub NumLines MidLine sub 1 sub div def
  }{
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
  } ifelse
  NumLines MidLine sub { GradientLoop } repeat  
 } if
} def/GradientLoop {
% D.G. modification begin - Jul. 23, 1997 / Apr.  9, 1998
  ifGradientCircle
   {CurrentY 0 gt {
% The default center used is the center of the bounding box of the object
      0 GradientPosX eq        {0 GradientPosX eq
           {/GradientPosX urx llx sub 2 div def
            /GradientPosY ury lly sub 2 div def} if} if
      GradientPosX GradientPosY CurrentY GradientScale mul 0 360 arc
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill
      /CurrentY CurrentY YSizePerLine sub def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
  } if }   { 0 CurrentY moveto    x 0 rlineto
    0 YSizePerLine rlineto    x neg 0 rlineto    closepath
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill    
      /CurrentY CurrentY YSizePerLine add def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
      } ifelse% D.G. modification end
    }def
%
/GradientFillHSB { %	hv 2006-11-04
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBrightness ED
  /LastSaturation ED
  /LastHue ED
  /FirstBrightness ED
  /FirstSaturation ED
  /FirstHue ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastHue FirstHue add 2 div
  LastSaturation FirstSaturation add 2 div
  LastBrightness FirstBrightness add 2 div
  sethsbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Hue FirstHue def
    /Saturation FirstSaturation def
    /Brightness FirstBrightness def
    /HueIncrement LastHue FirstHue sub MidLine 1 sub div def
    /SaturationIncrement LastSaturation FirstSaturation sub MidLine 1 sub
                         div def
    /BrightnessIncrement LastBrightness FirstBrightness sub MidLine 1 sub
                         div def
    MidLine { GradientLoopHSB } repeat
  } if
  MidLine NumLines lt
  {
    /Hue LastHue def
    /Saturation LastSaturation def
    /Brightness LastBrightness def
    /HueIncrement FirstHue LastHue sub NumLines MidLine sub 1 sub div def
    /SaturationIncrement FirstSaturation LastSaturation sub
                         NumLines MidLine sub 1 sub div def
    /BrightnessIncrement FirstBrightness LastBrightness sub
                         NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoopHSB } repeat
  } if
} def
/GradientLoopHSB {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Hue Saturation Brightness sethsbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Brightness Brightness BrightnessIncrement add def
  /Saturation Saturation SaturationIncrement add def
  /Hue Hue HueIncrement add def
} def
%
end
%
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def
 
@fedspecial end
%%BeginFont: CMTI12
%!PS-AdobeFont-1.0: CMTI12 003.002
%%Title: CMTI12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI12 known{/CMTI12 findfont dup/UniqueID known{dup
/UniqueID get 5000829 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI12 def
/FontBBox {-36 -251 1103 750 }readonly def
/UniqueID 5000829 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI12.) readonly def
/FullName (CMTI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 68 /D put
dup 71 /G put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C5E0311AE44B83C3E
4FBCDB0B74ABB18FDD877252FD3501E05E597A77D142BED9940318B98D508672
4ECF79C43A857674E4DCF2556325CA8CC1C432E54543F706987376A084BF512F
0E4C517917FB1D607C83E479DD094240C3F309A57561CDF8496722F1D3EBF6FA
45CD3D7D810E2C07D39BFE08C0A25FD568DD37C2D182E5D30A7B2855BAD24559
D455B29B1F723BE1C4F827D72B1156DC2C1EEA76C9B27733FBB23ED36F61919B
4A6E8253C8C05F3D4BDC64B99B8494F7C37E9C19DB6A9CA8E9B0F9E7E3346EE0
EF416016CEE932E53A26599DD8CD09D77DF591A9D532AAD3E321CDCB28636809
E61D9EC969F2E27190A475407B90211902429778103D18665A681B0DD51F6E92
58D1288E2AB3FAEF05854938FEFFD3B4F376AAD303ECD28B23649E5D4C3CB85A
5C9CDCD1853BBF3282BCB5CF57720C6CF7AE468048D7AE5BCD2F15DEC1B33B5F
9917BF69BB64261CF101BB47A09E47D6508250374D00ACEC3E3FE8C5330AD9DB
9D9F60CC170F2FD6DEA12DA24CEA846E25ED6683A213E4FFD0BA239894C920B0
EFF562ED994A7A46F8EE2AF98F88317E513A06AB82A629979AAD3ACE316E7074
01EAD920A9E1D54E8FBD623773429C58A2964B498990E8420E5F7A45B3D4342C
1AC109FA67D4BF33C9D1E0E2973BB8B2495DDF5A7F8E306A0C712BD7A7FC98C7
44B26D102D3CD44A320FE89CBA6B3AB39627DA4679A5BB7C27276B34ED66260F
DEB659189A797BC41D05323454CA4600A6D840CA3C1DC31BB7FEE8DE367B8177
3F1546C9EA98FA9F7CD61F177CEC2950526D54A6E7A0038F2B20609E7BE31EFB
51FDB6829852937071FEAAA3A0E51E625D7FBF2F7C224467C7DB77F7AFE006A5
418CF691841AB7A9923506845BFE066769A01A51EA48840E898FC6FF0ED9C2A6
1DB61E8840029ED92A129D38CAFAD4084B17679A84A262D2F9376363D4B5E46B
1C94302E5CD24CBE93A27319A8F79138414B2E94CE6F78C6F06B544D5862C2C6
297EFE524BBEF0CC2C32F63CDCE433E19B52BF0C2C7064E3ACD429E2466BB85A
ED82C6EDC8AF5D75855B43A61504128F75C2DAF7F5C4405BE36C136CB809DF31
A40E0DEE80C10F6E6442CDCEDEF8DD0C01FB2C035A1D136693D366552862A421
81A290080EB8A3C5160FC2CD760A69F8254E8B0EC8E7280EC33802EC2668C149
73CADCFBD4E56A1E7A9CDA3F6A50E00AA536B02B4BBF4CE60B7A791098C3E434
B5A7F17D6E461FEE23C6C8C148C54D14345DECB7A619E56268131F65F86C51B0
E45860D46A1A798134AB3283BC8B73D9B39EC5D0C1241A85AA46B02E51DE6433
60BEAC76351AB35D8DBFD60C6F12F8B32E08C671E0269174E1E142E687B1C558
5668FDA480255261DC29288FF5ED56B50DD8512BD4948F31F14C71CB4F8FEFEC
DD8E4F4EBE9C28312640334BE454634EF26B5FD02A93210D487AA4F3AF284479
303995AD31F4A6DD2C2DCDED3380D50EA1D8743A3C6561CBF4DE91634374DE87
FED0CF17C73B49060648AC6AF2921D19FFE1B7C7E76AA84600078A0160160D5B
BFAA2007AE70640698BBBFEBFA5C11F351610023F563840413AF6934156D93B6
551069D681492EE73D480D648503801A921E37868B4ABBB013B628772DAC3683
3E44C318352E7700094ED0FF624AE560D2A783343B266FB925AE0D990B65F8E4
7A9725F23F0A08EFA08F81616A5D51E5EC31CD1BA229A89AB63ED782A6D716C7
1F00BA66A3158CDEAE3399653D7A29193760AD92F65C066A4DF35F91BDE771B1
74E17E4879428B5692343AA963A349064693B52F14B09C5F4B329C4AF4078998
D3F6C1046538F989C8AE84AE032A112C3E657907EE7A844B14C6A0FA8C9A1CD9
797E195186C478057525CBCCAA0FFB09F67F97E69BC402F6199B6900D9F285E6
47D359B1728728770C95B1A85E22D2132FDE7075F8FA1123F62504E53AB106D7
99B33689D55D0BC0C552745C5129CEF9F874850240FA6BF5F4779E35BF15A8F9
F425ED40480C60FE3ED85173E620320A462092834C0BCF6EFF9F1D5912CEB941
9C18D8EED5CA36CF2C7D3965BB0929EDBF7FC997A9CFE79A9FA9C54A11E1F421
7F3FA4ABB80A3C60E9165DBFB0EA765BD21846FD1260F1AA4644CBE05CEC736E
638311023F9F51F4C0166733A32BC1F615C8D9256E44BE8C2FFEC45B7B612FCB
21C52DB57E87EC8E166498AA8A4528B7C612E3BB8117D6BAF5CA8F9D038C1430
B7EA8699F31ACDC03774AEDDF6B73233944A1A89ECBAED2EFBD30DDF42821846
AF828EC54BEA6E7312B3255A7F55783C5D4AF1D9780A9670C9C7E02A50535A13
6D957F895D53E4E18A4B4263695DF2BD9626E717D5C3B80E908E59EF5D093798
7215550A5613AB86D67C1F89C95FBB0E6ACCAAB397479D483AEE4607E111EF34
2FD92DC7F991B6AE84BC7CB982D819A17022ECFEFFB981A6F678655A6278825F
0EFB5733C5F46529EF1FBB01C6BA7413BA9211251C0A70A470F735A96F6E0D45
DB1342D6B97ABC234790D346C74927F5C910F71918D615CA907984F0229E3F54
4F5F75AFF784C7A470DDCFFC308ADF6EF43979DD3B54C6A8DF3B53DB783B81E3
9C57413C3A317419C190F207720743084DC20288C1AD08B8B0FD4ED805FBA8B5
BB874DCE4AE93AE3B8A117612787DA6C8C7512191BC36F6D8AA38F39099474AE
CD570CB5570BBA932C9C7A63DD386CABF1956FF87C266BF145ED5D27547234BD
943841047FE9A41C24B82FD3D3EA49A56C56840B1B359FB2A3F28E10AB09AECA
2FE2520DEE9B5542591E72ACE610DA4BF31C6E204574DC78033008F019519B2F
E45C99F1B938D212602E824CA1CA020211420C77FF545DF586702451B0923EDA
CA15BFF98CF2F0A56404591E57F7C89CAC6D22E0FEF9094770CF003801E5CC08
110B272A50805F89C0BB5C2966B9385C26F4A5008AAD97A29408A5116BE613CD
5ED9F85D2BCDE96FCF3121D5EE1D455A4CB03BF2AC33493FEEBEB955EF737F7A
EABF96C137DD84B3EA39C61CE95B5967405CEF17D9CF1BDD1199346F95E77CB8
5FA2D38D858DAEF10D0DD660211C8C4C69EF58B60DEDE48DF76300EAB8F0A547
6DBC87BEE8DD4EDFE3020BA56F362503AFA62D8C13BB270C3884560E227AFABB
5D810B2B092531A679485FCFFB88BA8313646B644A35C413053DECCD4B371450
18F54701F610E52E727AE8D25A8093B60093FAF775B6414F66F43F517488B4A4
00AA4F672A34A73531218601904A7F50A045E80CD804D028EAFF506EDA1ED998
ECF16435C6CA8E203F2A813506F4B8CDAC0A3D69F4B704AB80F170EC87B7C732
AEFCBA3BF4050A9CFADB87F7AD4B53BECE197C10A2E84571A640328B90E9A294
73F6CDDE4F4AF9F1F3A257BD130454CF95D390ECA95FC4221D5041E71D65FC21
8323BA5A3335E2E905E33D5BA56BBBC9CC30D25764A066D013B116E693C56762
4F683F112A572C2C04ED041CF7BB4FAB0D899B3F2679B431E8993A650184CB4B
1B391B39929AF803F868245A69C964B560A274B07DFCB88A6508082DD6092E38
80D9187A146B60B225CA22F593AA6B4B7EE1EE41A0D375C4FA69EC6C8E02B54F
B855D385C973A7223DE22465D039D213315C35F0D079E8CD030F62993495B2EB
A0F9BA98565F89D2E09BB60D90B0CFFFF1F0845810ED27CC8F1088F74D48A30D
7FA0728498E78A381B0169B7678520EB5769522BB5838212D32C8C1ED5635753
EAA3C14E6640BC34D43EC162711996E0CABBBDE0932FCB6B2838C22C0E42DCE7
1BC85E372F24C1145655D59CCD50EA6E1A673CB0342BB744A43EA1B9104CF736
324E367D82ED67E01B0608294A91386045C1564E4E417E1A62EFBC148C0B4A56
73A98AE2F2433164740B839F851F9C38124B3C01CD976128DF6A06FEFE14B960
4573E748370D70F9FBFDBF875584852E70264766FA5CE893F74D0D5884889178
078CB149821A743D797E9577A7D27E7ED607349CB2CC6968A7CE402DF9A55069
4A985B517B714C603F993944CC64083DE3D5F969F9C5913C297E8493D310CA42
795C94740A5E5D3415CE7B4A5AA11A940D93992329D8B00213244405BBE73958
37CD65B6AEBCCB2263B937F671FFF3C6314D400983E5AEB6A34709D854FDD0AA
3D27A62BB23E253E6E2CA994294009B857B5F1FFB66E772A0BF9D83F4F72B89F
51B125AC9E495343C9D84A4BB4759DA4D2ADA38A195C7905CE288FD8634ED996
9068F0DC8DD08F3D3A1288A271E7F7EC4AF76EF6A78C47BAD95FA14A3AB690E1
19A13639774593D77FC1610D7F1E25A31AF94C5354B35500B8E57B0F65AC82C2
2A519581B587F5E3C941734A4269842D38F74E89C2AADB8ADB3D16542B0485BF
BD4F1EDB4064E96A330D735F73789614C8D606DC553A0A2409CF4C595AE51505
CF203817971BD7F9B3346C036A18FECA44CE1C2042BA4E7FFA3FFEB6371A06F9
30082F47FE87B207E13A68BCA122968AD74CF6A12EF6767988F0EB0CB64981C9
30D9717F6C7D07F4B37CFDD68EE4480C0CA305AFA4BD21DFE131D6715E839973
E1271BF576F70C2F8C6827B3EF02CCA123EA46A02B2722E06078C3D9B3743CDE
45B43B561743264277D0D1FCACDDA80E5C6185E90F82D1DA4DC076B6BE49D2BE
F03EF513F1861CF66D2B7F8D52C7A5C21DF1276B72CC1CDAAB5A16D20722A95F
8B1EB6E6B605D3878831204A0EFC95CB3C5B588D4F0A540D466D13B8468ECDC1
DB08D36E7FA19709A67A0FA08421053EEC9068ED464D29BB1BEDD0BA88882707
9F41334C3BD3F995321711B6ABDE3C12A8907F930F7AF490D774A05398ED03D6
789D91B4DACEA3D8EE11C2CD850A6EF4128B60EDE9BD37710F43836EF6D53FD2
D8123F81EC6F01A93A8B36FAE49692E7276F7CDCCB09F332ECE359E3E7DB2364
A60B192438FD158B18CB3EB40FD28F74A740367F02D5CB6B53959A0D11BDF388
9AAEE02F0E96AE2F802FF08BF778F26DBBAC8F5AA04CF3AEB180235BFDE493DA
4D0B13E0B61696A8ACE4FF7A09956A1896B2875E5B2BDBA09DA08B9589957E85
51084D76A00FB728E286CCFD2F53088158005599835B18F6F5AAAA6051270AF2
59F7BF641B0AF4E79F4491725189B89E57CD10B442B8EF89345D04EE3E18EC98
217D81FFB1B473B9562605F7B0AC3FA8CFB798A988E5FF20F068A6B2399C71B8
2E3C19E58601B0AD3872170B0AE8FA33F3A50EC5E67EC22C00D3DDDCD7B592E1
0D1CF31DAA48D10F7C6A56CA052A5AE914EE08CEE011FFF20D00B46A7738C434
D70F1040C611168D2C1851DBA89DA526428E6D5DDA244AA267AE3559B0C7DC8F
AAE1687F823CE628AAD59999E74DFFACCF7D3412B466F6C3A315D8AA3350FB18
9EBE417717C42F3201D19E1870A2A3424E96F1A9734F32E85DF220E08C4DDF8A
AE6F3491A3C805578924F36C146CBAF1D38C8C18D18E5A9B38236BD3E6B9E5BA
595F66A2A8DE9F52C9DFE00ABA5B99806A87D2EA39EF2C3A8D94FBFCB0CB5345
9AC36328B89AA13E4BBFAD70314009B0A2588847B7092C9EB938DD069CFA3679
73D9CF01F9756B931B34E70F4A5F1C41FC577515A5CDC49FE2C9A13D62E7E612
2AA5969248241BEAEEA5CAD34154EF5F9153D85ACD6FBD6B7F2834BC65C77E27
5ED803220949B14126BFAAC7728CAE16EF205F408232C5D7B83AFDB9C2191997
38005204EF424640DE1163B577274FB455EC0383BC6CC17F35112AB638743DEF
9954A5B2DF6A50DAA8662967E8E2208A9D1E3506309A9EC4C001CF91896E79A1
F3F6FE998DDF7C7971707CF7DF7415F6D42EE28620C0A225A1B9E389F397F972
552E566F748613EA1FD417CAA7B90A2BEC1AB07F44BB8AB6ED829F2D7F4DD597
989617E6BEF5E701498823382DEFC2D5FD078DF888DDCA99E62890AC0E5BE8BE
0CB662B561A49D2221847151D203457C797A904BCB5A1D68A51EEA20A167047C
36FF0FDD999E46C857864D1CE7568CE9518230418124EE5E51FD96C0FD8EB7BC
2A49F49AD72BB71F849B112147271000A77F41CF476AD687E6BC3DFDDE0CDE1D
ABE816BF31348D25FE0A11FE7F5559BEDFC24A14F91BB73BE7F5FA95DA24D705
3DA96E8D05B84A1E5BFB0F15D7D4638CE4C63B74404128CF56A016180EAA054B
85FEE6937681557D0B5BC3C560947D456F48D7F4CB7A5EED52B103281B152E3F
ADCE8B98497B74B05096AABA261D2A2EF56572904ACE2866C6A081C926BAC3E0
DE02EBB63FA29197B3812809F08A9E3D5ECFFF751E60F7082749F57352040E06
CAF9290336395684E85FA2446FBF1D0223F74B0D3464B06975010B83D0975181
3DB6C0E2967CFBDAFBD555018305184953487AFAE112D36E696DB8A18F3E3A74
C8B123F16D077DBBC85A226A26D406F622858EB7F1646BC0093A7C9711A1DCD2
6302B0611AC20A3870195D8BBA4E8E4F2CC73030B2354308CF8C06D68DD7FA14
87CE9D6FC7A8A356AA2DC356231B4993655A0FF55AF67090E2947C2B7FB9E96C
EAAF52A01ABA6D69B738D6E3D4B2CF1E037D991EB5943BB0E6AB3868138CBF20
A112805F4CC00C65A4BE86D7492C23E34CC0BEEFAA0403E2AC21FD33D7A7FD09
9DCAC0BE550881647B322FE5806735FD993F5ED7C62173AB29095F67A626B9F3
20829E4788786C978B4BC9BAB9B3A750F130F9D4AFDA6EA3A7DF09D7615951D1
0C783A653F0BBFC23902019BA276A6D7944F1A34C1EC7E2710091C0B94CC3938
01C50C5E4A9C19F47D69074023F574D7A7302565EF9920A8E2A5076E6E3DDD2F
409CF1AB8BCE348FE63A136E03A520DDACA32571675AEB94D761B7B625AF1626
8BA9ED761E12A52C511890DAF1F790857C3C9FD3FD033A8330CD8E19266FE888
76AB1F3B3C8BA1FFCF3A6CA570290FC1640B6C4231D8346BD346E647D138B2B7
F7861E2C7C7C4431E3E91E318BA1DF8338AD4EB4AC104EBE7AAD8F5A09E6AB3A
48B9EB51A85277B221E3A22AAF38219B681918DBBB2F77FA8AA27F310159C763
A6E66D93879B592289B919B425FD7A367B7820FF430100E1EAE0877F84326FCF
5F1DD99964BC6BEB63528D2B218CCE41024EA2CE703959071A65EDE99127EFB8
0CC01566E5E52DB32D01512383A7711C7770AE17A71E5D95629642AA79CD5F01
D37FC89696F25C2EE4DD70DBDECEFA4FA2CD5D2F8ACE75937D2B1FEC7A31A893
16D314D800AFD3EA28068983A2ED3A7C75A5570F30A2824A47D6A789AC554C3C
A78C2DE9771B86F73C66EF8E1D0FD046DD4F19A31EEAEE04D5F38B73C623F326
F146C7164C9B18B5EED2113363092ADE0ABF0D7BD4C10BE9766F81C34878B236
1A0FD6D8AB4BC7E3C01F1C880C3A9186E4006210D22EB64CD7690FDA750EAE7E
C87A9D29128D49082578ECC0BC977D91E9CBB1ECC0D3527DC0ACAB39402015F1
B067FC5E7705586D97E81F8911FC2BC8E7C077384AAD4DDDEDBEF65CA4B75F6E
39E41528CF53CADA928537D557B518BB740593A6E4D0100ACBF126FF20888342
A0D3D7C201C4CDE8CBF59A1BA4F924E4EBC3E02883D5FDF2C8249AD8117332E1
BB52D2F621115C0F98037D4962EFAC0FA86B14F3C046A1F7085E40E99C0F2841
8B2C299411F9DC8FA0C8C7E5D7822A10D31D881F6C47B6C47CFA943FF9A9F5E8
D5F1C3E6CCFA324059B942FBA2C6D0E9A3D080DA0CD80D8DF76B0FB6BB706F45
C84054E62F75294ED126A95DBB4FA2D09EF80D1F2C507DF980D3DD2BFA3DBF49
6A99DCC954BE39E51507B12ECDD92C397E82B1E979FBFCE731CDDAE1D9147448
8C312DF818A0E08266A2B60C9C0902AE64276F7A1C6D7BB2EDCCB2E3B7659B13
AEA47A527FB302716624B48AB754218E2E3D99115C606CBC90B5EF73B9F99439
6184472986249C8D8E52A404FE76E17FF814D5BDCA95AC580B44DAE8C593939C
9E7C0ED996B9D2B8118F71BC2F0EBBEA6D7E18FC7CCDC78BF05A034BE39DF9EE
C6BDAE8886C7058B15DABA55E85757137873AE811F25AC7EE3A0CCB8649F6095
7249EDD95E20DF06719DE1E109E5BEFC2A4098E77020110C37A90B5BDBF09775
B4356BF8281F2D2B0016B2B29B3D67C267E732A8DDD131B064946D81D83881AE
AD3F826DDE6135241432641F04D3FE4F25E27C2ABE4AE0125D437EA8BE4B8D62
BE229F35324501AEAD94AA78F850536004C9F6BBE03CC7D10417F50D32956010
1378CC2850D82EE1A2F0509A035AE3749991DE0F357D2060B029C1C80A0AA1A6
E4AC50E58153FE77269E171134E3BFE65431C1536228FCE80FD44B49B8059ACF
E6DABCC6E166951492454C7669C9B96D0089EA127B4A5EB38E31C7FB5DEB9C2C
F422DFFD3B72A16867D56C8B7B4F566F04DA0A5666BF518ABAF1BEB97B385224
4FDEF451E11298201830F4A755D4969254BED67B725E515525C297CB90A606A6
0DEE888C56BA742A2A061F44F5F7421368A230FDAC6A90B4BF5B86C0DA478505
B996CA48EEB9EF955D402CFD5897BFDD86CA4D94AFD9624F9623CD18FFC60A8F
61ADF7D310BCBFEE6A59B9B37A7EB8055260BDA32091B6F33CFB8F6DA0639EE4
25FD2F38815A322A75D9579A1848CCDD7D12EA44C42FC40B79EA8307BBDCD463
DE9C746F60107DD1B4063CA6D2299D0E17529E79052B71F3B5CC3D6D1CA22A78
42F7F411A81BC5C520BFB829663AE498C2039846A450C30EF5F4418508EBC648
125F1CCF350E39A1282D5F846215127F26064CC5DEE76F6CD8745B2BF25CC017
47A01C0CB764FF879CD27C8D3A1E6E516DDA754380C43256B210CC4217A164E3
447AA747DC9395758AFFFC13384B1D934785B844AF25A38D40229D74CF74C1B4
53DF6D943E02E0ED4A9CD4EB890E50828347D2C3A8E4FDE97AEBB35B8A7469D5
AF3750A310933F8FD84DBB516784DCB812EC673DBD4CE6B8227083D3E9FCCCB7
76CEF0C4E005EF209258CEA4C318B3907EE9DEBAA86EA8F72D185318271F80CC
0274508B5461D76E3A6C92B608C178B9CF83F07D85AEA21B745A8BFE75E6F659
08F6EB82902B8DF703C97DBD8232DE4D764754FD4F8AADCD73CB085F22EBBA3C
843C91D8A3B8A295E1CF0099D974C1CDD5AAB3E6624BE0439E4128A52251DB3E
BD6D54F421B1ED1F13BFB569CB6C76E8A29125BBA95B5BD45AF7679CF9BC6337
6D368F9CC0401314D89046E411F31E7B22D8467AE5E6FA14F90E0EEA494EB3B6
040D6B55528AD1F7DE1B778F0FE555B12E03A05ED59A723E540E763880F2CDE0
EA213474B3B69D5448B53F2E8F34CAFBC8C66D9FD8CBD7640FC5FB093D448A2E
35158D6A77FEEA8DB14A74A49E687A9D957543EA161FBEDEB9960FAA59011CC5
3B11F15EB805293DE04CA1F87B17F2B561BD84F63828049C2A7886516E1CA695
D0356292F29C36F330D7644FD5FBCFB9B7B481D05C69088A0EE5AF26BBFC9C01
769D0BF674FC94AFC08F0FF6A78329A55CB5A5FA84F92F8B571A999771956752
8DD7950B5CCEAFC7343086FF29D8B2707548DBB5A0C706C3E942350CF8EA9155
F98E856DE6411A0AC814FEE4A2E114C15978995D6EBCEF3A06A0501C657BAAD0
716372D204EB932216A494CBF47E9ACABDB3FEB3E06628CD766D4CE33CD58B5E
786B0DCC6C5ABDB1B3C417E4AE64A4BE956948C2B17D700F85BD8654F2948E99
6EC7226D1B896BA64439D3A6C40F0D4CBA7EAF8DBAC25A4DFF14070E6C66BF6C
831933097D7701B56B3E7A29CF36F4A2FDD9125B53F958BCFF27584306DB8D60
967276B4C42AC2EBAE579057C60FE6CCD51C501EE9B6F13C7F355C868E22A8F9
773D460A831EBB30B4AFDE182C6FE6E3D519E75E99394D4A41E66D7F16B469C2
4896BF23280046185D0964E4A7D3D99EC7DB31F6B6EE773F21027E2DBC93F055
966FE95AB9ECCD6B87BCB9CB816E9C9F3F17F6209C7F9C11C99FD20B00DC4DA3
CE838F1F0E83E34C74AE530E0BE1A837597190F5270B00A8EF3A82C6CFC56CAD
36882F423965A34E343DF01C390978039BF8FD96865C7AD4F30F4B4EB18F30BA
431AA70981E77AA51A9AA6C249F5B314364850867DC3E56E64E4D8F8100FB3C2
5FFCF4818D3701E506FA52DB074F02FD4258FFA1975783FE34FB28273E91C688
AAD03B4FDD5B40F09B13736B29C511A5E674E993ACCA3FD68BFCD2A172295B6B
24BD9C96B6CFFE38EE44554B108D85CE04FF9EB1895196344930CC532757E3B6
713FE1501049036763BDFF7BFE2286F25611E1A301C1A2F6973673F59950BCD1
60F0D1500F09BA1EA982AB7D7A83977B3C157D1FF71079AEDFA32E85F5F4230D
CD77D26C928AE7E77010BF13371482D7B33CDA023468630AF0595B19264D98E3
8405A80DA7D91B83E5A89BAD598039703D2F64B38E9D1564AE8B45D530289397
B972E6A1AD8BC8870EB33296C1F8114676047A867290DA02D4ABED1D56C33A05
5EDC5B8DFBCB95125869F9F42E81D09E97CF090DA3CCB8131989FB67EC4525A4
B410EAF20AB7D2BAEC6B19D217692CC40BAC7AB2E0EE3A6D00918FCC46F13EC6
FEB51EC42D9C287CB038742A4009D4A07887AFE9A62317194ACA3D3B3A5340A0
802815980DDA8F55E683134255426A417955661E93E0315B938C5FA18B863C7F
F807A1487956DB3372CF25D9E300519E1C9BE5C12DA22409EB19ADAA8A5C5C47
DAE16A52F593D34F8889FD18EF899F69B82D98F1D6C8C137278FB8AA7B38B8F1
3DB0C565AB97BEA42032D916443A4502F5BEB7E4153C951D2A985D86975179FE
0F7B308C1FD8531BCE034DF40557F2425715D9B440E75A03E7FC7C8297C67635
86CD5715C04E1F6234BB0815F34F5B721391709CBDFDAEC55C1551C0C78CF320
B6AF2EE41A1873235548D8C024312CA5529543939D542509881288082BAD0A95
05A39D1DE4D67A577A0DD1ED95C1D760D41C16E4DE6F69118902ADACCABE3D5A
C2F8DCE5673AED80121A37301A1352B9B3E5038DAA6B697203070644873561B5
54295434DFB73470224FBF9AF4294A0FD429DE5DB389CB0CE4E5C3FD689B644E
27ADC092C217C2324E02F60855778ABED3F4E8C26472299222E36DAA22C16975
6BD58E0191E073CA888D6F42BC8D23E2278F1AC33F5BAFF19E9E4FE980D1343B
D05A371B12C11D53B7476B02D712A6BD88768AA6AC4448454956B8F1ED6C838C
13BA9301DAB853D0AF2CC97A97C69A19A7C78B5F270609EC71B62D802283EB7A
AFB0F79FFFBD1EB7103300442EDA290E343483123C6C0838FCFB2A7EB7154268
0E6E85E6104BE4C8A245D3B209002DB69E78D38A8DC2061C7366766D65738478
CCBFBF1686869CF6B68DBFFFEBF9ED316C2C545243A9CA505109E99C7EACAC82
F2DB453CB59601C61F72D08CE3BA7F6297F4BAA700A9C99BF48BF2EF063ECF55
00024F95FF8995277C8FDB732E6FFF29A8F4D5A6FE9A6AF186FD813C673062E7
80C9931C92167DDD5969183BDF8A543C80B9597840E2DF4E1BCD5E3248DD31B2
0CBE3E41C0F02508AEE9524DC4E8D1EEE13695A4A69051A26EC64199F27420ED
B63CFBBFE3DCDD13C11140846188611E976854AB4303B898233F5E1ECE277C92
15C9BDC2FBF12B8434294338F9B6A2584BCDB4BA3953EFF24BFCA4E38FE452C2
4243307D6D3906D9E0A240F7BF9280DF71A73B0B1E316C3DF79584CD177735DD
09265AD8E0AA4A56C71E70DAB9927E954279D4482E74658A15C77366D6FA2072
3DEC3DD07544EF408907D8ED03FFBBA17C93B7AD4F058F947A2111D82E0212A6
F6A60BAC294E4D392E269108E930F1B85E2A5880744815D2FF654C57FE80AD86
849EA1B812E4E7EDA4973B3534EAFA81034D765BECFE87B43654B130A7D6C955
44C86EEA0B0D5AD419655DD8FBBDBC352F1551BA0027A2ECF9029EC54EE742D0
2D0636A4C1C60D1A027FE48E3FCF11E4712BB3A30718C0A68B45FBF1ABA90F02
D522DCEAED2A9E18CBB2A62207D7C1956811963894CDA0DA6A06AD76A13F4B5A
8EBCFB7D9B447C82CA8F62D44F3F4C2509424914183A40F767464667FB7F3073
62E7ABC89C259CCF0E4B747FC86A9E2DE13B0131B627A1F054562E7062D8E8EB
B70628E6115292ED9B19955E8B466EFBA77BB2739060E9FCE77BEF0A96766FDE
6A58AD16073794C8935D47B98FE1D6CC8237AFEF7FC02142B884FB0F51F7ED85
35789CD5861ADC02118DB4C1EEFBC963973A9B80486F792720C616D5F254BE57
556F15C1B54267D46E28B3B3D5EC6E6198EE47A332B340A628C26394215FEAFE
F20D1EA3AD7932B271B954C7C028A86D6FEC02C5B7F3FF393862057F53C92751
65EEBFB9F629EF5CA1B636E4DDD47EE8B3FFF43B904F8ECAC83BCF7184D74B1B
EE3ABB4C07696B8165090C945F88A1754B0FBEB03AEA357806A3D0D706F5873B
0B17E65137E14D3C932E68580DD26D42433D4AF6A37D9C85A5EBF2EC14ED61CE
7068264F530D5FA646978A8DFE6572F2351A1C5E35D0A5EDAA1971DB037DFD69
449D30ED39A0A4E07F27A2125D59E139D0FD7FCAE930750B54B62C35737CD406
53CF50DC7DC3B198E32282720BA40EB908AF5EAC55A0D00D6A89C4998C02C30B
F43790E7AE199DB975EF550ADFC075CC3032787DFCE3E3F966D48C51B30A9D07
B31410D96C98C0E4115A87F5F7AD4EA27693C975DB429FE723BF2967D2705C2C
3DFABD3E2061213AD72AE8812139F0C0A099EE16E12CD09553837153112133BC
3168C7727E70AEB5857190B2D7E53DC6E2A4210D14BAE8CD1D45DE75016F46E0
2F599D0A6F8CDF60884904A6E8DAC363CD4E1FC4E58E92E8FF7F546C3D085FA6
FA1FB365F4ACD84AA22E62DF5E3822F76B0EE9B127E9C5B7F128D856BF86FA16
8BDB4B7DBF9BEAB168F04C1E11D6C627F598AD22F1847B32376F60CA8380423A
E303D7BC23F911DB2D2371EE57552FEBF2759B72C48348F3171B1BD216EE6B70
498F8303F68989D2F319C2FFDD1B123C903015F004E656F659C6948CDE436148
B0C4ED69A9CBF95DD88D55EACA79AA6BCE736C3095A6B9DA70BCB896A5902047
82BFD9355C5AE668FCC4071C2124FE4F0EFE0961BEF2B4CBE36A89337F53C269
E9D9E4BE0F8DD0079AD1DAC7642F4CEF45D0ECB8BBBF01E555334EF6C28A2A01
6036137ACB7DE655127DF597B532892DE2AE66E827A5B67A893431218DE22F8F
6A6389C8C8A704704CA7822E7443A5CE7755FA1D1FFC47D9AE374774C2AD17B3
317F564B0B43AE09F774B3D9457F29ADFFB84F99F997E24378C05E88C068941D
F37927BD91F12123FF7C810A2A79CE467512AD90A59993AD93617A8B4511D679
9A5409D4478A78EB90B7F854F0AA89A94D0CCC4A1E888014333FFEB2650D0378
65577B06C7E5B7ADA3AC36DFBC54564779C0A00E4848A4487D90BD3402CEA61C
C461DCB555B1D083DD40FD0EA8E0249C394DBE4BB391606E206C5E7E49690EAA
180233A94FD5E303A3328C219BECED4B794AB74FF8217D7D35B88A26D81196B6
A498E59AD60DF6413C8AD0DB8D4A989559571ED00423C817F580D678385C10F5
37547C43CE90B2640E9CD1BA7D741CE632ADCAC1EC4087FD8B370EE85008D9D6
34724F83F1B310855BA6E7684C26A081A1C0B817E83DF2BDE9750FFC5C2160D4
5925E15142C035D535FAA314FC36F942B48E5AA09B0F5BF9E989D6A2603A30E5
7A8AB59AD546302A45A4CB1F874FF46D305D501916A819EEFAEAC7E0A9126A41
72DC71345D873FFA32B24CBD18CF8A0954132BB2BCFC7F631BF9EBC9B83D8EE3
6BB501654C041FDD5514924F704B681B213A818C7C8F8984561045C100980F7F
71B6E4982EB0A2DA126A801977ECE25C34B382BC01BB2215E27C19C579FABFF9
E457CE8569C31677578713492C0649351C733A1C1F8B79B4C23832CD6D0E95B6
43494A76DD63329698F51AECC933AEB82ECA2CE3FEDBE5676D2FA75486C25D47
6CA462ABDD7CA3D590838A05839AF167485AF83B3370D4DA5F1A66A9A2CE5ADD
7DE34904B1A6F5DBAD0BB5F1221A972E018D2CC1835A2AAF55EB3C24D127809E
055907FBFCDDA227274E228BEC7F197603828512126124B03440C9D0F3E0C90C
3508758D4C9A414CED31F70E43A7FF0E8A560DDF1614DC8484F351475C69F371
CFDE829CB2D161A2A51B2F7F81263F395F17688DCD4D17F99B85B52969C1A212
1934312623AD6D3D830745A0191AB7DC820C91DB31B0E9DAAF01F44F118DBDD0
88DCD8E86A08683D97943D485376D5FE0D1CE10DF6D2133429B05D18E9EEA966
764490C9CA8B4E8382A71548FF073DD950FF08A0D76DED88EEC6B047AB32D847
95B2A8B550FF5A1973EAA4A5F857C061857DED90D895A7F8C92915FA62DCAB1C
E4A3E521692B101ADE62FA3FFA0BD4CB3D7C4343DA382DE0CFC6F4071F2B5E32
D386782883DD8EE22792609629C3EF85C6DD7FC16F6CB1C184D73165F94AB982
97ECD51DEABE515922AD0A97C9245836451892A6B273935A16D68DEE1E8E6371
9B1D02BF2AD6FFEF2A1C9F1A12545D8E3C25DC8DCF29CD7EABCCBAC8F9D5A86A
B4DB714BD98E01ACB06528EA73E29F328AF12AAE8180CF1C58CA580823783F0C
FDB479FD6FFD5849D88839C682B04E91446837AC3BB94A21B46BD07D16C5FEE2
029FEB13830F9A6AD64267AC1E3DF779434287E806E021F9129D21A68FA56D84
BA8156381D18DBF9A72D442CA33A765339D5998100A2DE8F8F978EE4654DF61F
00DE5EE97A1A74AA169FA0299127ABD5A3B063072D50A3EC21172CAA7C07618B
CFE425598015E0C2F398A488513812B2FAB01C3365985E5A9E66C8E77A1F5DF6
659BA93BF9AC89604FDA3CE8D8C5E5A2878D55638D6EA1BE1929AADE6F233041
A94B8D3DE63A755EDF5FB65E1D0739586DE75B2F32D394684BCE23E4EAFD66C3
96A90A85AB07765CDCCFF2F6D09AE1E727CA5FDBDD3F610DDB720EA3E14392E4
125C0B7BC59213BB85263AE0FA1F6137B967042F94AE2F82B4209F7B5D6E30A6
7A12DA3AAF54B7E757F37326CCAE60FC88B0E8D734E12D687E8646DFF2DD9194
B977A650F915F87117207534A9AF6E48945571D6C662BD10EF41D685DD4768D2
96F2CDA9A3D29CEDFA7B6842E55814F00A6DF80631B1037FE312A5EEDC404B89
F1B9A7AD0D22D70F83921ECA992CC4CB520D17A15189F38E38A793A0AFDF229B
A28469CD94015BA18E9E0BB0F3A937E86B8A62DAA237D1EDE94814520D32CCE2
CAD005CDC2AF37011384CB4D900A73ACED13CB79882FC56056C3B332C07D109F
B0D47F6E1BB47A0ACEDEEA1739B6E5D8374E5A0DF001E4DB6539F92452B2C202
6A2437DF4B55334A7C769DA43FC09F12873C0A1B7FDEC73CCAD183EED6D3FBE3
E664D47A6CB6D96C4BB9701929EDE32196AE6C484C2C1340BD52F64FE13A7253
68AC0E2E6F2584A8589D68BDFF22BC354277D3A458DE2E9CD4F715A46F789782
6ED68541B2618F611C534FCB79C4BAE65A645A92E5F2FA7D511E4377F8C32067
E177210617A6732F940CC31C351EA5FD2FB3C7C5954E4E41F7A72101C421D240
1B74A819252FFE0D71327FD195F5CF1703932EFC49A7BF14A2A797E2B6C31B92
A145530344BDD049270DBE0A2A45AFD34F5242427B1DE03BD70F74704BA7E37E
DF5524705E6A2CEBC41D2956E013C5898FDB70E71430560B80BAF1357B115B55
C589FE321AE7BBE13EA3F4A1ADEEFB8B54A8B154A09FC79EDC231D258CF4D5B1
7B03B2649BBAEA94B3A14B86088A065E2AFFEA32C2B3D450A1EBA33FD359F508
BDEF111D2C872D1DA4D80C54B427D1E8793D7333FC5014A5B4B1D80788AFAC02
1E3CD70F89EA24FDADCF71903D6B3F9555C44CC3138A14C9BD02E007814E2881
80CCB4304B168B37F4172201386FFC091FF6267A72F997DBD0466B78B79DE306
6A719FA29FC16DD285A00EE4C2590828F42599BF1CAB5B7D49A82847FDC84D1F
CF582B17D2A493ACB76D06935CBA7EE38462E425905305A6B032833AF9DCAAE2
A3A9C648766C73B680A857491C5D16A6F87CAC846B28DC980397A09DD3A7F13B
9CECBC8B2C216C46359C8C9C6DD4161AD9A0A8E0E448F31073A53FD17200EA4E
48DABEBE294B440B5BAC980CFF66426576C37291CC98C89A119E38F9B37AFF7A
C36E18F6ACD47EF4C30A5DC4FBAE514FFE1BF1C717953D9F9CD8D9FAD6590234
B12107B7E9157661C1D1AA944A8A42D7EC647F78AAC40FD4865A2CA8DFC62FC8
D7A7E47BDC3947022D641ECE68F86E6FBD89FE7453F9415DDA2592577D8FD7B6
55A8AAB7333085DE6F82FA92AFAED255CF3EFD024DB438EDD7097C29664CB26B
9E1E3B85A9B2D2F93371093DC8D6F461BA401A1818E25117FABD535D1A28DF9E
F1945FA51BCE7F60DD363CB427A49E79A835CAF03B4B4457737619416F98D1FA
CD2688B176E990C40AFDB19261EE039F0250E739F07E303E8AA6BB95399D25BA
D62335A98EB42C7C97559732C681F626E533FF3960CDC7B0470176AC263C887E
47AE40F529F73CAA7326EE414D36CE1FB8AA2913E6EA41CE117B94A5E1558307
443408264B849FA80C681D8BF92C0AF3E06B1121476D873B880E73CDF9CFFE59
9EFFE754BBB06683CAF0D980575408505BDFDD3A5FBC7334241F719417FF1AE8
29210C2FB326C99B0120833C68ADA8DC140E0C1B2448723B5C1E08F034CB46EC
99590FF6926998F57973F5AC003D1841C50AD6FEDB02FA9E6E4914E438CEFCBF
427F252D90ABB66DC57DE7FA93BD3B0780ACED54A1AAFE1ACE553F17494E9F7F
C85EF0E3269436968CA3BF714040E8AD7640958F92E52F662441BF2F5E13CC30
10AD8119E5CE634F0A32EBFC4AA80BE15CE3BC82B35AE85B5DDB1AB95E0FA6BA
AD60CD117A030EAF8180BD32FFB8B5C59F72BCCE5320147C17489450AFA0199C
8E8114D2A54C566795481AD5E91B313A3D5A6146B6CB2B483E0FC552BE395407
312815AC7736566F78BC2ED2DF4B972CBD4F97156AAE629892BF8C180322714B
666AF107D68C8B28BDF6FFEA004EBF5B1EA590F70F14C29D5A275F9AF380E49F
0E71B8C6BCEA046CE105608221661C2107F38CCBC190D7A8DB2C620ED5CD1E3A
2F444C9D4CE99B8CDFE25EB54737276397E4858AF960BA7D2B03D61F11486DFF
4D0DBDDCD46B82062451E71EDFB66858CBEB8D82C5B7D94ED151C09D4E5230D1
BD474786680AEC7A35B4422AED49430439899C052CAF97858C432DFE70908F34
78C276E99065F744057FE81CFF9A71FA9C7E52B07CBA33E2EF121CA146CF87E8
5321CD13EB348B45B29C60DCC64CA9C4350FF88D4FE42082F4FC9E6F6BBB80A2
C0965F47AA04F831B77C3F41556E60026F67612ADF5892A3EC8129064FA3AA70
748E01DCBE5571BCBAD14724200C30C5678173DF3577313FC2EC661D019AD6A1
2803B3ABA7568EF5B3E75694633912E58F82E73D46CF507035E3E8CE84A4761A
8CD910FEE24657EABB1FECDA5A81639453B467CD7A5B505A776E82FFAC261E1C
614BFFEC0330616821DFA420374888AEC2AD688170D2BB286BF7F5A8F5FA6E78
AF75643217464E5D682162C06DFA561F2A7CD658B85BFE2708A53563434A46BE
2CADEEC2D452E96D34D4648147580287B31BD4E92DFD462ED2CC5CBA379675B8
F69177356095B7CC1B6014B8BCF9DFC26E2250E5566A96C17E4882811C47A8B7
75B032E19794A00318F73D897CB9CD75AD99D9E2366FBBDCB3990CF19720EFFF
A766073590EFDD0BDBB9896C489AFB3834F1D87357169766F026E25F3508C48A
683BBC5E7A06030994C6495EA185C32F1C399CD0C73797C99834AD910582B298
74C4B8E43FF2E442F2C033154121F103300E926BB29B21A26B019F82A3837CE1
6464D7BBD6057596D5FA39510FD777DF49B90C56C41A3629F1FEC5A393E382B0
1D8DB41758DF3D321FF3A82A24FA6BE86944DE419ADBE81B91556C157C519BF6
40BF211B1EF9C25A59A052F925D5861D0184F4956D6C0205C84A4A10DB4B5731
8753FFB28DCD7560E72F46AE7B67F8A0745A856E5CB12790BD1C4185959E5C8E
9F396C23585AFD6D707B0627680FDB94002B48B28E2BFAB39981343EE1B83D69
1BFA226388BC7A057B2AA8AF513ACD39EEA9C58C59FD6E0108B6652FED53B295
08AD09E9D90EB3EB3B3116A7BFC88B2B044DBB319F08B96456B36C76E5767C67
02BC92D014E838CA4457CB7F2C841F4C2FB0140DA81C57A1B4E67B46CD3B6334
908CF3FE62B338A463C1ABD2415D34F215D499F4562C2F24BBE9797CDE73EB93
70FB000772BFF75F3A651CC9C456BC72E502ED61AE8D89CA01504A5B5F3351BC
DF1DA56CF649E0DAFF4F2E6388DEB8A8B7E1FDBBEBC0E05DA899E783530EBF7E
F30E7C93AF141331BE35D1D53059739761D023D477A00257388F109EB07942B9
BF4791241A5DBA4249A6C9822736B5CB48CB106E3CA1BABB5DD6B8D569CFA3F3
1C50D7CB3BAF3C18B355ACC52F8943EF3B803BCA121C50509895B9A92692E360
873F61369264EBD74702B2718BB5FB426DEAC45F8DBE5918F1B6D5443A133F23
71662840149CCBC536A5AF884878BC706B903B5E100A8394D5881B988F70C863
D348F9F035D8AD6F6C8265452AA5B124441289C7650A477C68D5BF39B783E7DC
54C22C2EB36A5AB07AEB33E86879DC4901B8B440365FCA266539D77E9C4CF0B1
03FD8EF687E168F98A462E6FB52AF8A3B9BE6AD6D60B77CEB0A6FDD090C45DD5
8E7A7C584D447A55477735E9758F78DE1ADFF12D77D5918E27A84D52CBEE1D86
41A7B38CF343F0C5C901686AC90E5F2C116C56DF67394FE54487DF092217CEE5
D55CF454B0A754B0A25A76EC5CB09BFAE54328AEF40564003E8E076B215E344A
5F844B72229C893799D5A79259478D63615E0886EB84F1CE9D80058A62CB9E98
0B49CF0E9FBFBF4DEB5A7550A8A0189F3A5AD5387E546DE9FB32A35E6CE1F22B
9392A822C5683B65D2512351E6282D8FA2D6C888184BA68BF6145DE6B28112BA
C47EBA9D0A1328CFD9D28EC54F607F17657ABE1CE2A2BE6D8B669116DF42DECA
63BCBDCBA297FB585E9826E613F028DBF8B145CF2274C60EBBD533662ACEC13A
C9903133AD48CD3206EE954088758BFAE7EE0F05A92BFE6BA5D809EFF8E85C22
75FF12ABC015CB216AEFE34583F24D315F57CD925E0C018A27F60B3CA20C70F6
F21CF7BBAB41FD240A52726417894454AF1857181D30DEE41C7298699D40A17D
A54034766326A5847B12D83EBC3CB1132FD88498CB3C50D189639010C5F974DA
060DE396B7B32842878768E1E4B1DDAAD9A51CFACD38E318C916808F5A452EA4
7B9A1C16FC942A102E03D934073B9E2C27AE65841C247CECDE4CA5EF9117E650
D177562D1221C78325B29347EB6A37E9E94FB62753D5F5B45306451C0CC4A042
A8A23E18AC74150F1A2A72D9F9319DDC6EE40CD7F2C7B5284D20FE30E3FA8FF7
AA346E794FB6C4D8C37CA0ACBD783B0F802FA5CB6B9B8A81891E5970B8180D12
BB3CA8354164AF887B1C81960367D79DA89055C8A5BDB157EC9DF68807BE70F0
6D4248E41929A41137990F072DF2070B9C50BE6DDDD8B09CDC9C681365E35C5E
7D94DC2B496F0A0E87BECEACA951610CF13DE4249D53B265177F1F3D9164EF3A
8B6D0B9621EB87DBD0CAAEBCC24BC02A2348E3069139B4141536057807B6D4AD
AA5B11DED0430D8C1AE93B32DF937F47834D76582EFA4A6F7115848D8106B505
7F3E6CE21CBBC940B98D2EE680C6C2F75A89EEB54E18AC96747DA06E58388C89
A695A244F0EE952A2444790C4355D61D6D3B1AC4D9F4E4C3BF1EE76869D5F5D9
45CCB4C93B39FD168E6D4998CAC7E587D55C9DC1E5B23500FEC562EB275200F5
5D422DCA179B9E9C130D20CBAD9EA9D49C7DB36864BD92B2FA2066E3E9C0BAA8
6AB55599F26E1348961B29A926F0183FD887FE251EC7C941F50AB9D6DD290203
3310304E0121B6C9D5B3B65BD9B03C11AFCAF3D5F81B18E53798CEFD1014B5B6
C9F63EBE93607A462E3BE2B520DB50A036653768A5A6D3699BC3C3584482587B
3913A01E46EBB235204A8357CEA281C438EA7959838E533FA1EBDDB25250BFB0
9A6C8C8C305F3CBD3CEF6DF9786C33781FC81CC128B309E9F47115473B38075A
B444D960F815D069C8AA7E904ED6D8BD374480A1C8695766149B6A78E9B177DF
9D1711130ED86D56F736F7B7EBB831093C8AB5993D89199777DAED51B5BC52BA
EBC0515B98700F4857879BBF6529DAE29639DFB2C782CC340212AC5EE53F6BB7
7E3EC39AD99AA61AF931D135A7C9BCAEEFFCCF4FDCBB379946ABD93AB086825B
DB8289EDFE6227A7C0E6AF94B534DCF1C9D1F4EB003C73226569F7E313E95ECB
7085DAD6FE87284DC4457DE88FF61FE457E21DDF853D82AFBB20FFE980FDBEDC
8BAED5D06E5D744A8E8722555B02609639F1C12056C6FB6B9AF1E6AE071450C3
6334AD63FA7084AF8F6FD96E62CC6D221EDACC0909BAA692D2A8540BDD7885CE
65E1ED9E3BC5EAC939F6049508DE09CEBD3466F7A749FACCC254AF3C4F02034F
257748B8E60DB4FAA24697D7C49598BFDE49AF493F887D14CA9F2C518F516074
966970355B975726D1476992823099B2036F93BB33F88D6013E04AD7295F6B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSSBX10
%!PS-AdobeFont-1.0: CMSSBX10 003.002
%%Title: CMSSBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSSBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSSBX10 known{/CMSSBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000806 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSSBX10 def
/FontBBox {-71 -250 1099 780 }readonly def
/UniqueID 5000806 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSSBX10.) readonly def
/FullName (CMSSBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 66 /B put
dup 68 /D put
dup 69 /E put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2919BE7F4437ED75BF2F7BA7
02F85142A4EADC8C9C7F11ABE2AE2A9DEA79CBF9577DD8627E31D25A7E4DED9E
FBB1C413696C88A07E5C937451D40A9211B29E24C9424635CD4FD6B16FA7D76F
5BA1DF0EC26097EEADD70EAA577531177A26B5017A32675C68052E90E68538DD
E779AB23150FCD1653460CDDCC713599EFA381C3322175809A73447720F6911C
6BFBDC0458C477D2CE69BBAFD05B5C2DA1D2E3E8378A2112066B045243D3D080
DAB211DCC25430973C18E7FC5574A814E3EB79F34FF5197453873C8AC66E47AB
5EA57CB3C8365D5235E7746C8584734F002E9A28C38B0C25E3753D85A1D2F3CA
B8DECFE14A7AFBFB76CF3E91A1E0203FBC8052C2DF967693C9BA0ABE86B5D264
BC345D7954C9523B3E70C4AEBBB0F2D56BAD6D76E095F9390FBE2CD607F3060D
F713ABF47F0FCA5D5C27CBCD4140C668F733F769FF5326917C0AC5D4C72F99BC
5AF4540DB169622644D320872947BCF1D30DA4EA150AA22D6D53777345858DFA
3286EB68314E30EC650C8BCC572D72879E431FB4297AAD6533C8F4802E0B9902
8360C57504D4176C1DE7F57382FF2E2C0A3D5285A061CE91D3149E3096B91076
1E914125CCA8D1C9230B72427990ED4468CE79C11E8F0CB89A3213C535B040E4
0C5784E6D53C96696EE45C87B5E0DAA80D3A06E5759D0676ACF99020DCFC3E8B
50002675B01959500133BC30223C75A54948DD28FA83F399924D4ACBE33F1F2E
D85095A76AF6DD92EAD139A8D5673A35B3633D25EF3B10A40A7E28F329D6E7AD
DBF1DAD1E666931611FB107D1FD3576F11A22B50943C536DC2BA477EBAA52BDB
B65A98268602F26DCA5EC761526CB7F33CB5B345110B7A90E1D078A21E332F78
33A0CF88EBB2CE852384DE3435F7B3564A0AFBB2024F79A633BA5B6EB7CC5389
C43621C82972D60F7DAC71FD9DD38CAAB865D7DE4ABC39D71879BF31549DE649
4B9CD8C149880504E5B34C2153E963B3FEEDA0D59F70E0ADCD24EDBBB8EA961A
90E5AE4ABB26E1AB1757E25572622D5A2541CFFACAB673665C7693855473D78B
847FAD590B657CC0B8289034AFEC3C54FE97B010535F70AF67ECC88E21B077D3
A9C2C52D25CE9714EE430735DB57991AEC946C96B6988B2C85D17C8BC80EA844
3A076618A686040ABCAC347F1B1C14676B05E13C239E99C3A2B63D0388CB50F2
BC119D6F74F70DD96BB5343D5458950070576BD6E319AAF5792EBB9DA5778CA2
58DE0976AEB766DA6A865F09FD6753FB4E7E0E9A06AA1A06C2636AFACF787460
9E73BAFC4A56A99277DCB14F52555EBF6DC5E5785EF7745521FA061227B725B0
7A5BA223D5EE9239A7A1694D4F9EC1132FA23DA44ED0FB0AFD8987A01F9FAE15
ABD485BE098CA7B1AC780A9A02AC58DCF0425D4D110226DC7B5982FE31BB78A1
C0AAF9B712E8D478FC4F85400B5E6D71AA653F9BB2E967A76D02B04887CEB9F0
0EF50A956AF7F790400EBBC07467D9A8BF8BFE8200F8F7EEB5DF3E62A9A332B4
513120FD9F8A93ED683CC47551C629B5313E4E20A207845CC37491ECC3945EE2
71A0C5633B353B03B1A7727D5D9A0478D20D67A981F6E5CD8737548ED4348A91
82F2CE805724A028E346E6B7C542FC69CFC7935E6CF3320ED9701C6127FBDFD3
B20F0DC2D1F92DC69E4FEE57B457E82D5721D932B140CD6DB9BC86B961E7E6A7
5816F42AF937D97C3149DC2AB0054564592448D0CF52427B766FD38E3B040B81
59AA9030CE06A9A9E3A0572A11BDA85531060B75DF8791176CDEC0A9BBF472EE
BD433BCDAB926689B8806CC8044D0925814C1784A41CEA48ABB9AC039485BFA3
026FD30CCE84AC57DF09B1581ED01B3A840AC5E9208465BC160238EECC7A6753
D5B65B159FB08E0DFE4C9F2EF5986352C0E0C4DCA0EE62EE5C19BB6C486FCADE
99D3519723B70B20FACE685ED8D364905EA64A15981B00A6DC06D7B0E3D38FC0
9DDF04221696F7A8F3CC7FDBC25A61D9AAF9F65D3A64BCAC4084CF13BBED7195
6BA4C2445676804C333DA6569E4AB7E6999505DD1988C3E62495DF61B722A6E3
00ECC4EC698E33F7B8225FF591B746E449D2D178880741074D0C3CA740312D21
1F8B0B1A855FCA081AF1E69D14C9131B1769943EA6D5D6210E10BBD9E404B445
FC3E2ADF8C9AB6AC07BC2FC0482515625523C04303F7884283D5CC35A4A6ADAF
59738F3DDDFB51E7134327AC4CA577BAB076F3B588FA3828971FE9D561F46358
24BEC4C7F84D8FFEEAC94E2C632AFA5AED635E867AD362E373CEA718C750B4B6
954A7CB6E4CB2614A4E1C707412B7B09F8969EBD5B6510B66818A2F5AE4EFEE5
9DD7690A3520C477DECB7D61FBE5F84D1C655971FAD7CDA78E695C18908016CA
48B468BB6B43EBE1DDBC49F43B7CD667B4131D7B0C9BB048178A31D0CB70A76F
527DD352F7A9F0F35226117FF305A9DF4AEDF474FCD5C7F31FB06D4B2CC40629
1BE1F40B6347201F84BF35CB5155BC4D2E1DF2A5C7613C27A0EE77BE55A744B6
DF7DA5741AB55F133D518660751B0A91E6BE43B527E9C97E2F06FBEB58DD0215
BF4105DAE1B2A29DB05FA204D0EA6E574C7344C3B3F44092F7F997654D61EA9D
4C811CE6087BA1615A31F8D107DC64F1CFF707234135B728EAA0ABB475E678D8
9200950F24A8A61AE6AA18F34A067849825FB3925A8E01D64E849546FF7F4418
19C0FFC2EEEEBDC7805612F7849BBA7BBD954BFDAF2E6FFE3CA520B79070F8E6
B1509EE0040714C9F5023816250F40FD1C6867F77FC8ADD3A16A3A6275CD6F5A
21BC03274B350EEFA6EE929AE91DEB8D8B309E3B3524807B4562C7758794A8C8
4E3C6EE0C0859AC9B799428EAC242BC4AD9564F2444E3C79F11D4C1D5672DCF3
2E191E25165C77EEA2DB51753ADE07F5E7E748704000265649A2E1DF68909F38
68F0D5F415330C9537A065728D2104C34CE05458AC1B2A53946890DFDD67563A
E044E7AEDA111FCBF431546D410D67602985F6E13988999E46C80A983C7F12A9
FB56C6735454F1E194F63A1B6B21683A281AC6164B3229AE25B1189366C9DDB4
09D1BBC8429AC3D64F8BBFEF1265611E7C2FE1D3A2FE24FBF3ED96A5CBA6FCA7
847F5E3AD4D14C0C77C225588FBD0DA2E960FA3901DA1B46B796121DC804FE82
C382F75AA0495312A80EF9350CE0F80CE0D18316E5D02B7BD78667C2DAABD879
E17D5EB8F274DD2B1BFBC04EA2F72EE5376D01DAA129FE257162BD19D19B13CB
C13181E6DBC12826AFFD87AB152A59D67D0FBBE5D9CADDB1CAA8C27689355AA8
FDC556015E4A9708995E51E46D6D1ED7B68A61625561FB594B9BEF87A1720222
64E4F8A47637705CA32B1B4CA5B8473F1D67FCB7E4041502B7ADA9FA4B16CC6D
282FB636979D3DE7C76F3000ECA08AD6E116B1558FADCA251D67FDEB4607CD3A
84BCA7DF488C97FAA4FC195661D7977A08EF04A7D9A2D619EFC7AE291D7DA633
C6DBCA7DA01EF336E378764F6B4E4D6C517BE05F10BD1FCDB20E5ABA7F65A8FF
17D93CDF1E60787712C40775A5C3808AD05A2F276C94B05E10C6042604F592C8
AF1F25B98A0C78AA7BE1DE9ACF2273965F0795B0D79ED6CE2753FD0FD7B41A18
FB490B06B5467561DFE5161C27F58E48EA5F38A5477C9CD0C2FA13683271E55D
8B08DA0C96BDE97C653B0B18096EE7C0E6BC3894057F14E83A902FAAA4C2AC7A
566A9EB8F9D622476DD4E722F55F28230124F67501866FFE952AE93DF5BBE2D9
4B9CB9955320A9E256E611EA3838ACD9073107936226140ABEE92A096659764C
4ED2485B33E75BEA57CCF19AB9409B684EB14103ABF6811E7A8C0AE0C0C11BBD
87801F3F0260D04A8921FB9EBDA2A2048F4B5C47DF63051A0BA6DDBBD895E0B5
F9F0F3CE62CB118B86AF595F4F34359DABD9EA354798E8561599CB32345A43B5
93B217C43E316BD10BCE1C66A10C9A8041A14570ED7FFDD95AAA76E92EF52042
69F0B8FBE21CA4E37647DDC890D13AF489606195900063DB0CB8D71968C1311A
D56155D2B2382119E603AA85E9ACF1785E4C0ECA137E7E4F5EE7915E8A080509
02FFCD2494DA2D3B2AD27DE5F11684BFFA2366B6C834AE309D8E07F98B7B556C
DF3E0B42559610F1B78C79254AEBD7B0F5B3D7F420BA725AAA91EA20D014334E
8FE221BB02BE7B59FC3D03D8ECBAE21F5E37E4A0352C475F9F29C5D2FCE8CB9F
2A059AC06AD9E6F13C39F2781D7D4B3FC34291D165E5C66C5D01B5AAA2AE8F72
9B3C634FB38FCF35283792048BACA9F7EE6789621D9243B917234405BF194BF5
A4F137680ED10F216076AA2767C1D220AE71EA7393C7E252209B6ABD94213AE9
F61FD2CB3160F41C4328DB8563483E13EEBA83A7935E4AC11A97DB7988585184
6BD3DBB8241EFA1F1DC5CA9C2E16EC1EE12CAF4471FA83605DA85672B34B1F9F
8CDBAB6907D6CAB6DD7E00A7D636EA20961BAC97D1AAF32C8096003E096855B0
EF4845013B9243A29BD509436CA78C6F8DF4F90DDED960A0D12BFDBFCEA539AD
BD4BF883E09542C9D75DCB8A4AE82DB495B0B918D330979F347A76D73B19995F
4039557D337FB55B8C5922F35B354F6C8E4D861A0B66B3D803C9862C9C507404
5EE039245AEDB521E90F83F15E44F42F0802F8DAD6A9BF6176C364286601FC80
E14926FA518CC035337904132AEAB9785361709CA01AB0F352317294B34B2B20
FF88CFBCC8E89863BFA2D3ABB2A596C9D9DEB261CFE48E403F88652150EEDF05
3390F002B2E4B53446FB39C488E3D0D4EF4AE2AD19019710FDE56FE29B58B00F
0A6D5B26B814BF64F13C35EE903FA2190F460F9438924E1D7158704F305E326D
66CB529B3A4836DB0FE383EF989C975A2F603332FFE0748E0D695327CC8D9AB6
E036E0E6409261C30B80977BCC3CFF8FF8A9BCBB889ABE47B0CE3450783E1EC7
1C030CC18E074E01605908C3FB61B78CF4FDCC8E8CB13EB77CE6FF2BFF91D658
51FB05DEDBB20B0E4C5604AE3CE6D41A4C8D71A1F90120B1F90C83989B892253
31D06ABB335DE237CD0CDC91256A54797CBA5E284B6CEA6FAE01F7BEFD905E5E
139D57E163137B5751A765B46A3AE6F653FF2551988CE792011E0548CFAA6ADC
E32B876763AF6F6FD6864E7B55E341C97FFA711913F8A7FBCC1FDCB4CF2F4D3F
17358EBCED45C975F2EFF3FB9F77A22EEE4C9DDE63360DCB2DA2C1AA4BE44BA9
3F9CE6F27631809DBC45643DF7BEFE247E79AA7937C409986500EC1026ABFDB2
6C30E0A4852A6976A73AD7483C36F1717460327BBC05DE729E23D370B78630D1
7E87C99A5C3A3C0FFE204EA81A8A33D7DE80DF3C0EAB557F4E86DDF8E03AD072
61B1D8E1BA05452A6FCA404D9BB8FE9831A367B0AB31041B474DA9536035E7B5
EC83DEF0AE17DCE958DA19869DD51F53D4A4BFCF7CFA635D6F9F882E6F0215A7
0494E76F258D44FF72EB5A1104E8F73AD2F6F2ED337D854B81DF4083E6A2D679
6B5613D76DA2347118CF009E8A88924C2A42B154DF1CEFC93C89DE0ED8DB26CD
8C2EDE2670F494DC591E79DA26CF8B5FB76613296FB1F39AF2001BBDAAB12CF4
3906B4C304CCF1D066524DCF92FF484CC682C2B197CD797056555F318279C3A3
7AD8EA9CB19724AF57EFC6706157A5E2F51F104F6232F252594510E0E4BC872D
D610F4C99BC3ECB668139331216DF1AA8F6358EB90CE1F0B8267B878B19BA7E6
77A53A674E0B029E9142865CB92A1596D5AB97FA12FD05A04369AA00BDCBC2DD
1AECE1A4AD55A93885C626004B41FD277AAE6DF68161F7443EFA7D9C913AF909
970F4C6292A694AF033B953CE37116A2AF2439E482867EE9EE2BFE1093A738DE
24D3C408DD105CE6D7B8967994F7C5CE49FBF61AF135F8F7799E2FEF29A168CD
B2F16F795FB475204FBC41AB78AF87E4E80F992FDCB770A3DC0501AE1D786ED0
449956A1BDC93876934331C24CFE4392AA860A1ACCA39978BA8AB90A2174F5F4
97539772660D3920E1B57E9E0674CD34C9EDA83B6AF1B06B26207FE5D67E75DB
B170F1D01D512CF6D586DABFCA32404253F0A9985A29D46641A81D5A810469C2
8081D7774B3188423822003AEB638F21661E0BA7AAC765CF8321F9677C85A562
88AB1320B3256EA9FE0C67E5B69A5127DC1B13E4062CD0C9ED10AB36CD370105
8FA04F89E3F836B01393F1E9365077A30D8E46B67400DDE8EB0AF8C815729699
469773FC3F0ABCEF752A5768C9DAA1931421214E69053775A238553AB6620E9C
E875223681E60B7F7B25BEFBECDD4FF799ADF34BFB397AA114515E2133304A57
B422E97EB3FC5314F64BAADDFEF9C0EC719A78915B26E7E3F381435563F650EB
7587F11CA3B14875F6B1D817C1EFA0B89C85B888E8391C74D77CBCC6A990C36B
1062D049E20876B40CB030367818A3CD3E2CC354CDCC9A0FBB8DFCF7135FB2E6
A0BB0C3A441CEB8D5FE849AC7299431DEE27CE28B33AB7E836D6958104D1777F
8010546687CCA23DB48E53376A446136F449A92C07102315D4D0A897521313ED
1A3A8456A70C16EAA50A3E67336DC89FEC56AB54A579EF264377A103939D5EE0
0A90B4F20AE1F2511469C34B5984A04D5AB8A162F18DBE4D613BA1C1C85E994F
80AFE3C18A045148018045C63376CDEEFAC53A55DA67D5980E3A99CC1C981FC5
5C25CD0A685E3AA6F8C0B8FAAE157DB91AAA50A2B5F7D8860624F29B8DD87606
C30F84C33D802DD5B95E090BD7AA4400E090DC1913BBC392D7E5E87717AB14C8
A031737560F3D132BAAC0D6DD88C586322804BC2D8C505973F015F7662571FD1
C89CA0281CD48AD84B9ED8D70D240A4EFC2715DBE98E545B987AB64FA259D81F
3F768326717675A3A2E22F4EEEA22A5201797C6D5EC644318CDA28A2C3CCD123
B0159205FD52E1F9A60A69AF7B40C4F7189FDED20EAC3869E5F53F4955CDA0C3
2B06D72EA2B8CA5F0B557E9A36B8E9BE7EEEF96B5EDCA6F79F53F83234B2BD45
6B3D631B1C9CBF7D283F377177C60B3D65ADD945D31458164043A17B8DAC8409
B4261A4A0EB36E18BD104A8E66F45C3AECC07F4E8FA9F3D2A27334F95AB79BF8
06C18D57EA745116DE0B36C12B6F5411A9805218B5A31731CA0A35D9AB6BF5AD
928726A6EA61E0B69FF0F4FDAB2CF5B222FBF9BDF4F89EE47373AA3944678328
1EB230EACCEFF4243D6B4F8797482DAB78C1A053F2800144A4C76BB839E536EA
2D4DCEB625DC0F754EED8BE3FA53A7AC3ED17C92757CCCCDCBE21A9D733291E3
61235172F117D4B8305B45D7728DBB2D71411954EE599B0EE786D7603D61CABA
AB241062BE3776FA150680F9CB8784FC7A94790FBD2922772EE886254B59D0C7
4A4DF7A2C1C4ADA1DBC51CE27D3FFF7F96BC5FF7382864369536BEB2EBA6DE2C
1C427990F6BC84E92CF718BC6D4CE9EC1F2DDEB8637AB1FD673C5BCE1A090146
171717B39B9A83F2DE0B79CB1B836390828B3EB6DC397AADE45B21F55D1A3583
C3A5BA93A4ACC08CCA4DB80B78AEA6002D80C5513A705E7232938D8423FFC72E
1B96313ADB255D43E2676DD2B00B51D116A328164BDA8475741EC234EE6581DE
06162F006405D6D823DC47DDD14536BB530D132975C0C436F08F9243F1A9AD16
898823B8E2739B4428E62CE0E41C291157F1886BF937B3D3B9B6DF0D0EAA38C7
D7F17D962490AF81157E76074422D746EBA97ECE803A205B482B03FB06D080D8
05CFE4868E62494AE445824BC127FB7367DD9F70B2168F2B8CA0CF190BB838C0
67563169C8454E5D0DA086467F1536F5E8A1E4D3E727B1688F745FFB4F9E56CE
4DF06341FC891C28C943B570A7A38C595E07707E41935285DFDCA777CE731DE6
B46EE9D1C3D61DB6EB8434F17B15274840BEB842587F3B9AED05B97988E18380
9095E88840F703E9BF997E8A666691909635B7CE630194962E4183C3838D9401
260A743CC9A7FC4713C309364EC95DE29F6D6E1FE8C348E25A878C7133EEA500
102E3952322F6337A44AC6070352D2594952A1234035388F5E4A9BA075B48F2B
BB86E2FB3FADE2F7F18B865A1C5CC0DA17E34F9F8127A8D020AF96CCD64B54D4
E58D5ED14FE1238AC2E8F1D61D0E97740DB48205BF872693B6DFAB299EAB77CC
0E352C6A50575D4E453BC4C44A986E7C983638408C5D9979260EDA33C9FD897D
5A92E58FAA255A5904C055C68EA980AA1B4776FF3C77379D3B9CB8CBFEB42E8C
B4F785A11963538A03DD33EE498ECD3AD6302DA5AFB440C56036713A6D74847E
F316A912BD73B23482A58400CB3AF5243EC4052C69C2F723F2635216962CC70F
5133B7CE53E2CB35AF2CF937CCAC8E467E374FA12877F662E5C697590AC8AAA3
3FCFA22C0A4A07D53D649D770A0A830EEB890C53B69625DBDEAE119829737025
FDFFC2294ADD62EACB353AF30A7D93F5773A8FB964E95696DC3F40B3DBA3765B
11C8969B2F193FB9649E3050964CBC5E8061C131EBA40F801F78570ADDF18990
C3640A457A37974065D7B623AECF699C79EB0058AC3DEDEA3692909E1B1FF31B
252438AAE38412E67A5F6CEC52B749BD29F44F0E30246A121B3C03C41C554282
2166862FB7F4D7A73EEE0300F4DFA9C3E5450058164800A0D5BF59266D8BE72F
440D979482A017CB87B18AEED3D04B2B368636FE27254FAFAA41718078ED7A23
7D456F81691853090A77760F7B21F0DDE9F3A4BD93AE528AA896DFFE5DB3743D
73F39A9A98A1B4E3621E71757DB0AB7430F3407596286B2F97CCFF6F8DA5B59A
014FB9864F3287E9E1EAD79CD802502AD8A6D78B70683CDEED89B7EA68DADBC4
48B350EBE3EB8F697BD6CCF370552784131AAFEDC7DE5A693E5BE4F3E5A7D92C
386F8D366864701C7C8D697AACD80AD89519F2D8DCB0D20BF4E1209D96559533
8AAC667E1A0E3E1B95F181DC927B2C4163DA3CB6619CBB01FAA3200BECB6C32F
A6032E30A9691E2FDCE40DC276297A12D52CCD736AF62D269CD04C924B9A2448
D461702C99DB3E699853733EAA4330119C1909C95E439357EC5340BB2F14BFFD
4082E2B404FA93AE60B43416AB98DFB0746020897DE5CC129669F4D7EBCEBA8D
809E65F555A5C1F9F444CA9C99A36777686689FCD40F2FFD2D26F7AA8CBB9B5D
C32EDADD6806CA2BFBD144C91BEE190294E7CA3FABE7F66024A852514D810824
D050D5590BC0F636A67C6D7D5FAB2180599B7E0C2FEA71053E6CDECA46FBF66C
A2091E269A183364C2EA583E4CF8A2066007D008C63C871397C47292139B518C
1ADFBD07BAFF96540DB711102E3314F8282588EABC04F4E4E6B2E0679D63595E
02BB1EC822545DC7C75758C89D7414FE1392C4DAC02587925EC2C51A1D4EA340
6B1626F90BAE2862E7E4EC90A95906CBD52A3F6D7BDE86A40ED5DB338E30F582
180A9B42E8D8A5E2BFE7F524A1CD229D75E679AE18A81FD6D9610D8AADF2E122
68BBAF27577FF10E4FA4A95A49DD62CF3860AB834A34891216275CF435ECE960
D182C75A0DCC4E57CAD8CF60E1EF5BB4FE89D0FA34819748DF19DEBFE04852F1
504964D12A8839712F32816112A8C60A7ED184E2800FE0A2EC4E751D05CD06C3
7A61C7615F803D0DCE4C7CCD231FF9FB409470EB679B00FEFC7FC46ECF5C5968
3B6F073D7F8A7696132C63B26D771C2C1B7AAE16B0B47493A123948F8BD2230E
14439D973158A442659DB46A0F815808526AB925B51C68FBA54CA8B607843501
4AC778990382C2B6F28142D09FC1EEE09F86CA7346D88D38B3CD7688F49FE64D
817A23F43BD64485913D629948068352BC084CA0738D7D52D4A83B83B47B50EC
BF77161511C59B6A10E0BCE52EB9BBF7F71A69E7757B7B0545ADD06BE277890C
7CEAED2543F97ACFC9891C08C0AC0B85AC56A80FECBBB823AADC0328C2BFE9CB
2BAE4E4CB5203B3D6F4ECAD453AFE0EDF8A1D48762135BC25FF268B24E2149E5
0332FAD69F792E70E3E2FF68F487400B984DC93EC1C1516C6884991549AEF96A
482F94722BCE8E74B47E1AF4749715072C43105C8ACFA005ABF1936D9B199EC3
AD063AE7206156D7F60AC9F5D388A6A41256D089A3AD1288943E3CC9CE7A6B65
E65FB6D820FE9E6F56FE17276610F088A39C05866E7F759394530E14C32EE3D5
598E903C77AF871DD16AFB24DDC65269817C00FA5ABAC94F0805F159A3A66130
9FEBDE4455924E36B41ED321EB31A3690A70A4240561664C4FA408F5052D22FF
06653C80616A5FA9FE19E867899246C893B7A8BE368C54802B7172A6679A5B34
73F67445EF8F275561DB276A0A352C8E3B5D5F3E3F800FEA8A7699F43875D65A
86145F2834EF8962A3DE07763F5456D7207A04BF98FD6E1610EC285EB5AFA8D2
F482C502B292F99A5AE60F01AF3951E1F68F059380E5E3CEA4EF883826CC5249
3194B8FB5C5B2A49A1235952A880A04980A9F9F2DBF77F030D5E3BCB1AE8B9A3
1FAC8E46FA674EB3780B013C184A86F77763976E2677B7B413EFC7F919788768
BDA80D67401C8A94B1ACAEA232703D5E2A1CE458692210794DF3AAD0A08540EC
6C575C128F078DD1540259446AAAF9790391B56E4344192BAD0D5B15830815FF
BA5675D920FF212CC908FB39F5D7172CAE3C90AE4433338660D20717C2E31BD4
05D0DA4CC28F22ED18192FE5F9100706FB074359A0F0CC382036031FD8391F2B
CFE40A78DF15A69FE6C58989A83D6E0CBD9D51D8066832414BED2F5E8E8DBD59
0DE92D65ED86EC6CFDA227E00D0C05B7673D9044059DA6B4C6DDC68E08B66823
BCFF9B78E6E185C3C34D08AEF2C8AC614138DECAA361A3360B6CE87E2A325C2B
6314598C01EE9868487A968F12B25168791D41EC9CBBC0AF5314FF24C22CB13D
C026535F9925211A0553FC892CC744EEF5886FB7E2E21BC869272F35BAE9A70A
26D347E3751F826BB4B6AD6217C739D1DF61AA23E48B2BCF10A7C4A5B878BEA1
208180ECA1FE1F6FAD1F65989FAB6D42E935DDA25182B2DFA6427C20FFFEE140
25DAC30AE5B6134CAFB424EAA4A7C3C21E322AE663907D41A4AE19E72F95ED03
83E2971BC5A0896F881D902C80AE961343808A90619E627D98B83E201D47D50A
94120E2D6F0F13F112A014320BA96D3AFA61622F767DDE65D5666024F2809932
03C7BDC390478E714B3756BF804648B0908A5CA781DC53DB2DA75A0775835E95
7038FE176A323E258502E44FA429C641BCB6B96345133D61D44AC126D0264CC7
2236D9FB9E57421EDBE87F760D7200C55957AE320F8FF06A5366CF84E60CAC19
E02388414C7B727B334AF39EFEB0517CEF779AF727C7410C32125EBE8B3D38E0
8356792241D284D1E9E3D7D587F8DE7D2E696D11FA34EBC70A9C3B79A4838456
4C8352E5BC1AF887955D8ED9001BFF23D95623279C6E1C38A274CFD80940C044
BCAA9511C9C7BE99581E48CB1001ACE2575D9D4E6880ED474019373B62E68A27
A0E33E590EEDF4917624F99B277AA71575F594EB0A4026762B1DB4AA740634F0
4E53B5D691125BE20B6F17872035A07CFAA1B349031EAAEB7013E754897C3D39
C779A7C70072B00C2BDFF6B26DB87909A6059DFDCAF02AF32E12764D135D660C
CDF040679E0B4235428C0C769D7F372D7F2EB87C43129B6751669F20CA9C9351
DC838EF96D043E0EECA0D480AF17790A96C8ED3AB608B94C6CBB4681D9BCEEDB
96EA4E6D6837034294B733F2C10951771EDBC71B962282571D3B404C6202C268
31115A18F63C0B9D99C3F3F5072F4A3E5D5192B771E15A5493DE1855BD15E4F0
271AEA025A194FC65DE7912476A575684FC3C26D628BC9A6DE16562D56330C68
A3733D6A6D47D8BED3182F8C4AEED41B3BDA6A441508E644276F476DA7A36270
61AD94B4F2805861A4F789740FA1572638392CD18F5016407898CAF6DEAB5705
1D50B6163A7D64F5BC1145539B2486B1501459E0276BF4E21ABE982EF59FF37C
4952EC584A4856CF8512EAF057D3E31A0494CCCDA62DEE8B25E2552C207CAFF8
E20AB441618E8AF061CB1B5C697F7A2D4AA6ECB270EB0ED72C5F325837189E5E
8447B9310240724DFC613F3310A423EDBDB0131DBBD998390F703EB8E97DDEDE
76AE79D3199B31DDC960F8356000201905A5FF908FA613BBE08F166A3C5F434A
57E111A9D8EB0BC6F5BD4A2FC8A961E32BE790B28A75EDA82CDAD8377642CAAF
388EDA78379617F799985CA4DCA3FA2748D26A7426E502781A795689D1A453A7
82DE02954E40895D85F11DF3924585741A8CBF0BA0B59497CCAC31BE1FE1FA05
BE12A45A8E39662DCC0772A914A45C959E33236AA0E27D7C77E88F0DB0545CA0
AEB61150F1E65CB7F7FAFFD66A8FF68C04E7FAB38990A2FF8FAAC518EC197EFE
52B55C82E1E0B77983D9A119FC2692E47D11FC7E1C2BB25F7AE1B32DC74813C0
7AB4C7AB3F1ADD4EDA1F3EDE698F7DE56741FBC55CA4CECC6FBDBDC2339BB05D
01CA514E821CCC267AE28238AADA42F78F45A82A447113075EBA3ED5618FC8E2
4E55B674E3C9816871E819BE044012847E0D3305C69A6E5436F7221350135F39
0BEB8718DA27ABE7B61A4F8130383B07BCA5122D7119A0D24A42CEF30701A61C
3FF5C2FEBDFFFE0E402CD2F151FF65E5F86CF24EDE3B47F3E1E7FB26E82F90BB
03D94B272940903E51B68A866BE777DFD132194FA7202D4C6B35131D5C7ACCF6
A6A155F451AA3959EB61A43170BAA0A8D98BB09FFE3F2BA94F977876D52A041B
1A851E4CD07C9BC7C97244FE782E4BE00D6A0398AB82A2EB1E3634492E310624
666B9168A9B0AFB5543D7881CFDB6B58987C9C3879A21B0BA23BF9F19D2766AD
C10035DDEE37FCEF230C606792AE6E4827B7864DC8061FAEE4E93F058535721B
D980020AFACC58F4F4D68763C077C0C1C30D278C029D41B021D42347EFCD8579
DC9D9141456DD4DAD0BDBAA638E98FB5B6904973D35F930835CBBB90C3246FD4
7DDAA21D4F6627CD94843441028CB0FCC262725A656B48B338161BC1295FA179
E73B020F3D649AE949B71FCE3F299FFA6BD289A0CF2BCC32DFFFB4FD9CDFE1E4
B9BCD13662DE5D4B252EA6F23010B4E9E798609AFEFC7844A9CC40E3135E5809
2F3D4F46CCB8C41D95B4BB4FCCC2D3A67CB59E72D9A69402AB56413B286F3658
BF86083ADF1D9DF64327E98BB3F366A5693C95962D6AC4536BD1A240DE79A767
6F2629E91D81FD9559EC3A42AA72846C6E9A9FA6836DECA8B354A6F4A1746571
60D79321FD13E08728F4F5A0311A7F9405288BEEF95A210B97BA2B61E276ABF3
C7ED7CC27C1143AFB8BD3CCCF3A00617BE74D59DAD90672A608D9419E6BA1AEC
3F42259E6DA543C39CED1C4BD96BA61F053FE6A1D4BEDD0FCDAD8FD1954A8396
16162C51B6437A39E6BCB7698C4678D6EF25FFB7D8861E0E82DAB244253B8FDB
F7CD819783538F9E15524DC0B6A305367BEE6D64BCBCF855424219E24D483C41
59F0FB41F21D0377FC1BD9F22CA613C2499F401F88B05A8FF8643A0B54D8D594
02BBD4FFAAD7729CCFB391B9A9177E2FCB4520BF00F9593C236B8382677C4F4B
F6349487C6171C2F9D06AF11A2AFFDE3C954FF9E1F22617E2DEFE1EE5E2AC8AD
63FA4E1F0EFAF541072A4D53D7C6C6B4DBC4E0BEDCA44FCC15F401B6041D0EE8
5E95E33F0F8FBAF3B725D702FB81142964993A6A120C6F02F0E2D429FC7E0B75
3C4E13B13D6F13DE23F1B8CA355A9F024559544330668C1A3849774A114806A0
277BAD96C8F3D99D456B9B23B7FA5A0AFF25EED07CFFB8FE1953DA5E709D643F
CE0611AAE5409DAAE52C0BB4EB7659B5B0A684EC75EB7639DB70314140D56733
ED314AEE75209D90806296FE50B817086E84FC3EAAC1C211D85C580E8685D716
2C43A0956E229644065D06910F03E26E9CE654163FFE5B4EA2191F1D248D02EA
353EA834224EB0B2765980E16ECE10A6F62EF28F122643AC52346BCD7015C3D1
140968B81A2E6FB4C609DEAC3158619695E235A1058DB8C2E0142774FE113BA2
A8FD9E6134BBBEFD1FE8EED626E2C9E84D2B765E0E5B3DAA3BD088785BBB1BEC
8504F525DF166B4FF941666CF72A5D71384EE85EB84237E524196591F0DF35FB
BE92138F1EE54BBC1CC6A3B98DB499E0CD22DDAF654854A52F5D4B08064DBEB8
537BE7A97C1761EDB62598C1E2625F7430573B84DE5241F8A4280C539268C7FE
9B647AD06BD08D3F383ACF203C31BB7E24583565F702F9B3050E845828FCCAF8
0CFE8D6B3DC2328C04BD0DD5455ABCCB9E97DDD5DD57398309E570D4444C98FE
1565D311323B9B29FF80C54600DD9EEC10AC0121B35B700FC73096657716A744
8DE7565448E89FBAF40C21017406F0ACE9813C027F92D7E5E9B31B92F37AA9E6
3EC1E7F8573647FF26F26761704D45CDFB4BA77BEA5A363C7D522A58D5DF3079
F86C6A3295938B8F018A1D110BC08C91E9835A15A46BDEB10A8D9C94C75A38AA
DAF3BB8DE65B95D389513AED9FA1AD25F0F802752C1A2255B79D1C9D9233760E
6E603A945AD71193D14E708348C19AFEBA79EB8B879CD72F2ED3B580CE26AAF7
041B8089588FB475BA3CD6E894058CEC6AEA83C2A8E330F2DD7E527AE045A8D4
133198FB7C6C9C4F07F0B78D4AE7B6278C066F092413D673D7A817EED5F1B616
3D86DFCF81D98D79168D09E3DC08BEC09FBFD125B824A3CD191B66A85EFF00BA
B19027FAE260AB5109DBB70613F85182EBC901F98EB965EA94CC2908369FF876
9FAF005AB5C2FD958C304ECA9EAEBA05B08B1DC03E5441BE334269F6AD2BD1CE
7DFC7B3A730D9B054B814C6BF607CC96770E0905813B100189E21AAC114AF28E
C46FA5370305AB6E3CD7B40763B1FAE38C41DFED853FF42590AAF013FCA17EF6
EB05DE9A7FBD5806A9ED5DFCEAA0F9B6CF4F4AAFE11814CB89FB33951B994587
755B6ACE1F749725A62227CE0357EA1F2100272DE74E053C9A39426A5740D423
A5F9C4FA63B7B4E8CA060E7DE9166E4E6E3D6560A6DC27D74F85F7E62B91011E
4E5FEC56D8A58F037C84CAD126B2550CDD118DFD8E17
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/UniqueID 5000794 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 34 /quotedblright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 58 /colon put
dup 59 /semicolon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BAD2E141C0A7B647030FFD1FEAB8CE703C40802E0D32EF0DF87BBD5131CD110D
BF5A11D66FC2087779FCA72E245C6BFA23F60759FECFDF932C3026D4CC21D843
9789FD52FD7A85BEDF58DAB6334F4880C2C99F49C0F64025C76E0550BC4B8AC8
5C7E817DBABA0E78F36954E9922286067E92E69D23E9FD278CD5F26788A7E5D8
476DE8E21397716DBA03B23D85CC8B701EAA654C5EE74F40D6C3AA3F46E30A2E
E663C2CC64E2DA3631AB809AE1B70D89F53B1D72088642CD07D1DC4C7263A7EC
9785A2EBF8CA24D40E2C60CAF478FAFBEA8A27A55CE0320FE47E2512D88D1244
95CBCA87983B8795DBE8C15ECA68CDDBDEB167512E91930A7FB226994EE4487A
D1E69C7E7908AAA5D45BE3B0D1072BF1F36C6368AF31FC583EC20E6634FA5777
5ACA6512C5114593C89A9FA5772BD7C4C2FA987C6CF164C2564BD1502C3042FC
860D2A57D5DD11848588A0264C6A7AF607D175EBC791022DED8909929C00B48C
2CF4EC05B43963F1DD6EAAA0506953CF028F59D81B51256DFEE6967960E4D051
03EA65DA9A2CD6C3FCDF0035EEA5E1DDEAB533317418A8E967F635ADA03D2EFF
80D463A1F617E7831D0309FC06C6CE580564F6B90D2D374F89AB7920DE34A7C0
5AFECC87242B5B8EFE4144223E55B84C97E724D41AAA52D3226F44558F333499
D9913DE4917260FBC356C0A4DA2A1460705FAC1ED5935704CAA43DA4AE84F8DA
B063019DCDF2544CC6BD881968BCAFA2A25F46654275B55B9133D29F86799B2B
DC0A72632B3740A508A2CC47BBE8279638A08D59F2E18247A5A5EA1A994E6640
2059C6E3A76C743A8268DBA16AF757BE4B788518594827852D068DAE7F8D9636
55A6E055791052E884B079448038060218051125B8AE72AA8F0A04316FB7AF6E
7B7C147477D5C313186DB77AFDBB261F14E540087454E1C66D413EDE6DB6B629
0FC0CB99FE48A4D26845B4FDE88580100E32E3F4995B3B452EFF288D42ABB67D
042A38F26C74C6F19553BC32C59FFC021C12B6E153708BF762E19A425EEDF2F2
288B19CDE724062F77856FC50B8A222C7AC8FC8D9035813261D2A5746DE690BD
25982602827D73BB8F061E148FFA325102631A17FD010A9B5546388465E2AC4A
02DE477976A5EFBA7455838F275AD2FF3DBBC1F3A14197891981B16E64C672EE
1B8D9006D5D8635FBFFC231B8DB8064E1CF8A51C952DF3007E18CE310075010E
7E85A3C1A45480214ED4FDCF2B71058CCD9776DD8D280DC7098575B2BFB07F3B
70E4626F712152A2ACA162787190AAF3C5450599FAE9DE591AA6DBBE43FD7B5D
085B4F9E29BCD430A51B92D035358987E56F14881C15873FFF7FD99BD21C16A4
286C5816C401990C4D9C0A869FCB775896E95DFAF5606EBFB56B3CCFF0E2FFF9
C73DDFFE906FAE92BA5D627FA697E1D90465D995596A06703EC03879B157A416
8626807087A8EFAD324E902B1BFEEE6A8F792CA4285FB959EDAD3206D65DC8EB
B68326F6F15FDB937B0C0B7F77FCEB6EE950DAE5F06FC3AD173D45D0BBA79CE4
68B8BEC8378152EC3CFD18B5D3898609A1761EFE9F074BD6E65EC3A1D342ABBC
F2E72109A764DB70296D00DBAAC2BEB38FE31393676F3150ABC3BFA9659F892A
C4B06084669D7722121AACC8539978EC74D5BF4303502A75F3952B2272235055
6B8AD90E1C1FA2D89F451136C9C392B456DBD6A591288226890F5309BF319A0C
CAA05E5C7B0FF2D6894AE970572A9F019AB1B6B7E7B727E7301B6B8F492EE861
430B42505498A22F4BCA5CD4478BADAD9ED58120D77BC17B5A326FBC6CD08108
CDEC5672D9A0FABBC22B7FBA9DD4EE93F9A3CFC5C5299769BF8A3C475593AF99
D3F59A4BF2F2D1D43B45476BE846020D9200CE72DC77A3569845C249D58B556A
D4C894C59B5A574F85D919E92F3CA7585E3A6285851CE52EAD4809D2BBABE484
D72C409C35880F7C2F8842D8606E5A6CBF1C30AA4B7D18598ABD28A0E9899B9F
FAA239DB77F68C82361E4C736C953C35874EF11C39F1088E7DDCB830404A9643
8514301FFEB35C8441BEFD086196D7A3820E2DBA9C5E470F2771799FAF56EC87
DF911BFAE1BA30517798C21FC64C3FD0AD3D583DA440C69EEC3226014E98C4F1
3C950B2A75393C1153E0D508FA3899F6E56AF18ED8CDEEE90CEE14587F568F4D
2182303D0E9940E3B1E9F5DAB23118370744E0E9BC5D950217AEA0082F9BF0FA
4FBB652C39421613206B3DF187638C617970D1FEC85AC95C470C5E9142C6C121
1B5F1BA6E2D153E425E84D3C20C8B91E4BA0DEDCEB70C074C766AD465031DE15
24F32663567252BA538795641E190F92CA0FF7069EB5A84E3BA36EF133239B7A
A71868F1A6CD86A5E1AE8CD413DC01143E0344F50399A07618A999BE4974DA61
C1C57CCACC41184FC33CB8C5042D1892A494B1C9980D0A42CF901C78B054CDA5
A3C942832B7A33693544151761EFBF930B13643D7785D00C79714D6F52BC3A0D
4DB9E288E7D54AF14E014A1514C5E31D2E9A0318B025EC9874A4344FCD0BC1C7
1463262D4D6E0555A98908277B5A1A2CB731389CE1791B99DA8FB5395208466B
92F3DF518321F2809BB6E88E389DA001DD42804A5284F7BEFA4E1A081D5B7044
4E5813CA89EDE5577AA342F5259F0965B752F408AE6A1D21605976F3B3986E6E
08B4BAA1CD62CF74F750FE208A8E04B5E2BFD6B020B52AEB2476B3C7B8D24B61
795EED219A9CC8D58CE1E22761BDBA1AF4CC6A62999A6D5E428BE2AC3622D652
1260C1136CA256F0F653A7368202317535C5BB1C8FF2E78AE5541B81DBA28A1D
4A2AF02F0B1E03BACB976107D241A864A02FE08C6DE268722F4C75CCAA465E4A
5E2A329C0B7B8DB4934D4A1BE25A0EDC98CCD9C990BAA478154D3BC48F974D5B
912AE78F4F8240F5B9981B70BF7A2C899111CB3B812DF0252EBDC08799FBAE8F
F8917373DBAA09B7936C9F9874A71B79F60688D270683598FFCCFEBFCF02FB02
0B07DA3D40520E44DD8146E11EA51450B9C60B0E15AAC37EF8CA137747B0CA0B
510D580CABF6C3FFB260CEA53E77536C53D12C2AD9BED7E8B33AC9FD960F6663
D083EA86C7C5B78E3904767891AE5C11715910094C3B03DF8BDBD9AF09245ECE
D25774A27C824B517BF9DB2AB3A381B45BA6853A5529084A1BDD9D32B80E3E45
C7EA25AA075D313D4402842A8B7A290B983CB7D278028B87C682EB7315C4BD8D
4150FF3BB74C57F7E533A8DBE8372583C4FCDEB6F6A5219A6599A820DE4054A9
A21E45428A97067D65D7769468FB9F67FEC62CD733B94BE0C4132A408A2A9E32
AFE23D9256E26E60332EB217A00401618095DD31F1BF5AEE495ABA4E9FDFAF2F
070D989BA5E85C8E2EAE5694B9DD0B4A1670A9E47B97BDB5A6791F6C7E9655E3
F8E4A0FC4DC5EC52D8BF920413A57D265D6A43A63512718B56E57F6BC6E17D86
4913A8B1F42371BA964271ADAFE8029152A6D699E168784261452183F5F66637
0E857BD2DFD6C449761E927577ACC77E8FF81098FF084D54FFC042A6BEBFDD99
1A271204B98B86715A5CA73B684BAE9FA01BB9D51FA223327AF63567C917458C
CA36C7F7E6FEF0FB37DBD621E2458369EFF7BB0FD788A9A114CCC565D4B6A301
DAD11008F4902F72EBCAFA00B9585F08250AE4CC2733EC8B67C88BB8197379EF
135315A3504AB6A461462F841C697CAAC152E3184452C1BABF7519A930D7B271
8CDC9BBA4BF718E79342EC9BC7C712D1C221F55DE0ADF06EBE356D3FFF48CA2C
C97FC725BAB91451CC39E1D4B40165611668D1E44C437F256B6865A47D4DD222
02BCFA16270CFD67349D95EAACE4E275D9A323E7871EB71828071447ED703D29
676DB39DD8583F673835DFB8ABFB2B46ADDA54211670CDF6C907E6F1D5DDB758
76D715524783039DAC6628AEFE032A82125B156637F04A096755FBCE12D29B90
E97485D19B730555A6EB12A74182AE046B9EB0BB9027625B5C5EBA76DF198C7D
06A54BFE715EC15ED55988D8B5B95062C45443CEDFDD5E141912C48615BC058F
27ECB11C201F9258BB6F8B59B8ABE6628E35EF375B6015183081BD476D799092
D8CE40E60E23E8EBD07EFA6A349190B09442FA3E6E2A6B0651AA0850C81E31DC
424E008D97F20F2123851B4AA56760FCEC5313CEF9C73112087B96CE6A926BC2
C8FEC4192E2E8A95C88B50DE8BD669435F9ECB64BEFF0995D4EA7C0D8650C6EE
003D6025145CD5815B30B41212F766BCD2198B3A34458D548E6DC77C5E98FC72
E0319B87AB8FAFC713454B8A000C63E3E41D5C096BC149759EAAA7CA4603E5BD
4CEBBDAB209778967EF00627E98CD918F8121CB5ECD00682788658FA4A56B930
D0929203EFA63909B36A81AA78AECFD62A6C8CDDB4604344E0A71FF00E8970AB
587F3F3758B1EA5DA9E82F489DDBE5055DDF3D0177E8B9EEAB1893860BC64309
663818C361FCC07957197C9769740B9F87613067EEE67F88A84B7E0B4757244F
2615540B9D913448EC332B4D32A320E50D9E450E72F4FC59058F925F16E9C091
568FD6E51C0DBD54D7C749201F76BD700352385C44096AC89E25FE6D72DDF999
F9FB77EF6C3C1DF8D9FB57D54C702EC8223CF15EA1AE684E8F45385C00463A7D
BD5118103B421B920DD8035773F72734DB97A902EA3306D4CD9947311799D17A
6ACF7B97828CC9A3AE07D576D3A1992705CCAC739BD49A04949B985331EB8482
34AF73ECDB7321D6592B95AD02CC3EF7B9644118DD47A55C1AB1C68F5B552273
B0354673E4260EE45AB9F2F23142717F1020B147A4FAF6F7C7476A65C43F1C5D
C300AE34163D09472D6037139892D89C7C32DC34963DA57F66D3C815FE2E3F90
B51313D743B5F0CF14E08472BE50FB6FDB23E81D42292C901BBFF0FE09B4C535
64B7145B9A1F35AB57D0813039E38C92FF70DEDAA48A0EC1B3221DD2B3857E91
99E2579313018824F5983882CA686A6C1016E1D1AC86419894B35F5EDC633F5E
9757989C53BDAE359D924F917CE95CC3517B1B162F351A53F2CF0F82446F3270
9657FA350664D60210C76844325159A14405E27A2D5768FDF133844E5A6B1C75
F6DD13356CAFF75FFBD87B91A05208AB9A418D59DBFD01503305546CCD237BE2
5691B05C54D4BAD6E6C2F76955D29BEEB22D4A4FDED43DBFF367235F55A3FF37
C6012A2A356A683E08A79840895A3BA4AB9F048BC28B8B69A1E61C77987A65EC
7777E2A51A48B0DFB1FFD42C612B39C8EB29885A11D100A9E20A6553C6FF720A
EF13034B65EE9A9DAFECF71A179CCDDC2B24EDE3CB13A674119B0F645F32699E
3704A0919FFAA30CA5E51CF043ADE1AC848B32E839F8DA347E9522D05FBDC626
5C71BC8103E4F7ADDA1FF7A4F7D75504396C5A6F39A19132EDA7789F42955D64
5CFE96F549F4C398A38B2CDF7D9A043341BE07CE53C343C8D74D0B9E36711F88
B2A29AC4A46665CAF026DB2216E35AB15C45A7297D6AD2BF29A26272AC944327
4134B7888E0A9B0D5B92C8A4134C10E6B377AAA86657D5689D7366AA7A3725EC
498F2A54E7AD8919376E03009F743C9BD6F7CB9C871919704D5A7E54794A8EC0
0D4A9B9A99CF4818B99A3ECFB7FCD58BE07E8BDDA14F5CBEE85CB64066AEE04B
62AC72294C8A431694F7BEF2FAC9B6C655CB172D00E5EABDC384684F014933BC
FE337E412AC56E65CDA085122945D7CCE7B4326495F6B50005B5D452DBEE38AA
19275C10C9C17CB412FF69B388157EA5625D2B06BF51292E83B8F82469B7AD87
A69D1AEA3F2C90B96AC1C15D2677122AA5463839477E292F4DC5DDF0F37F8D57
59ED4D0BCE1CCE9F704570B1F9088527AE1E22E5DB6C0EE6F154909720104A2B
64CC44D75D5488E98752A6503154E78D66AD905756AEC4C5CD641827C5A1832D
1AE367540E3AC34FADA9E677512E0B515324FD620590993220E0CC938591FDF2
66BF5210B4B9DD93FF12F3335BBBCBEE9607FA6451EB630EF5A6BE974EFCBBAC
57006437E1F3942D3ABE30F61DC84D93E0CBC4063DDC1E5B412302924EC58CE8
6FBF3F92246F5C53FD5110AF95F13A5B5943CC8F67A648F4B471E73CE82896E7
0EC2C85C4DBBE24AB3E261D8E3F1E9C90441822504AD0C044058BF5A76754353
759625C4F9134AB99DE28ADF66CF37CC525D156FE8E41E26C2E08A6FBD26D590
A610921F391CBC180C0FF93AF738E41AAD28F02EF8AAB7C13A8E8EDF9AC94794
4C597791A63C205D78F50510D87D52E37E0E3C41150675FD6E661A336FCC2C39
C19E6ED2EDDB6B5B30DFD2F482A5A4B18C3076FAFCEFDC305026E6BB38CB3019
E63DE4D8EE7D819063ACF76CD606482D3E32F36EDF8E845B1E8FD2D7C572D740
371770F1BF065EC59143B2BECF85D34B5E50054607EA6696AA19AAE2C409AFED
41616294F84560D64807946F6A360A8E8ABB8E11924E81B1D5BFCA80295654B2
1B3D7FC0044347E34EA72ABE3B0121AD05921F7AF29F39163E3F4881196B2C3A
0D162D08C24AE1F7EBEBC5697C6DC880AFD3E22C35024CBDDB522C0F322B94F8
1BE2B9AB3E5798CF6CB15B32ECB9B0E4A335B3CF0BA9EC95ED4AF1B9B6FA4262
BC34C6E460174E051AF2F2B144439DA835F6870564D29797193088ADAF7E4D16
66BB2ADEB9010FC4EF75891C45F534AED5BB4E32D73A0802EC7E7ED42C67BFAF
785734C9FF0D6EF8D2653C84A22AFB5171E1C2C319E03A8B4123A4D6390A8AE2
08E5C8C243834688F01DEFD396256B71394FD2D70AEB40206193E6A5DFC68FEC
07FD5F26CAD627676E1EF4A272967F9CEA12DDDAA11EA0470578561BDC57857D
41D79D3B5254513BB2FFA5413EE5C8F6EAD9F9FB0411EE6083B2700E145342C4
7166626CA40C317AB787F1D7604A289EA113B2FB53C686207DDC608095067176
B1C5DA1F0532AADE7741323E4A44A17A998A2FCCD91BFCEA5E7BC996F4B63873
31B3665FCB9F03143EE66289589A930E0AE266143896F6F8EB6EA95D2EE8A45C
676B9AC469115C6253A76BD66075FF067BE121DFCCBB435D7D3B53CC0CA8212F
A91527FEEF5CFDD2253C544CEE5DBCDE66CA6305F6D8F2F683420BE008AC0E18
80733E125F6F901DBD73FEE9678142FD3BC51D1BC22B2F752A66D53F29D5FACE
40BDF745D39109EE1698CBBDA759DC83CDCB4D11C91D6D45FE920846989D4D17
F75483C39DA601D66199833FF64EB6993654B743749C70F41081F5AE2D6455E7
F3711DCA3DAA90651ACF9CC0831C63913D2FE0E9E01446D8A5B753E0870DD6F8
CCE8F99662582D3E12BBBD28EED657B0AC9A853F9A2CF169906CD618DCD1B056
2FE6DE270E66FB99B65453834341476E283CA653DCC3B5012F3BC3617012A5E8
3378840B4FF754AFCB7E199C3AF5EEC15CC20FFCA554A92F3A83BD3739904B80
9C6CEB2B2C1F9A3913E2DED1AC431D953EC99ECEA0C1B507D48AA9C211830A7B
BB71C65305A3588FF327CC05A29A14E8943F42AFB4E19A95C76635D0B64AE2D1
00E2554275CBF1E124A94F3354C964639160BF2354B608927CD860B312BF5675
B4DB56AE70651C813BFF106460C0AED4F1871546D31ECB1047AD9381BF32205A
B21C52E92D08B7BF90CBA636D051301C9F2985D80AC9A65D5D898B88023B0599
04956B965A328DA9294F7EB1BC47260F4D38F565AF2F01C3D8C0B5729F816AAA
DB32C1BCD211897394323078AE8C3A9A5C5C9615DD07A56DCC20AF380B38EB87
0EDC69A298924FCB604DDAA52F8A03EFE7DB13989135929AACD480C05FA0B4A4
7B5BC5F271F95E10907355E926ADFA9DAEEDCD19D2A894F5FCDAC31ABAB75057
6DC4C29E93D58F46C270ECBB127A15CDB0A820ABF3E202D24F53AA6D82DC4E35
65EAEF38061B2FACA694EB6E4F4ECE450CF268A9D6F436C7390B71822D93834A
2CADA0D96D5ABE4B7B65635B74275EAF3F1B3AC3826F798A4033D516E0813961
0BCA0392EB964BD0E57E11A97759A2ADF066CD0DC209C86062123A5DD162826D
E71C573A0DEC724D9443EA1FD8B3DCD5C773CFEC33CED9B0F0AD285955DC9362
F1556E012FE3B8B5558905B37DDEB86BB03A774C4317EBC55D828F966FBF9585
E8C36A19A34CD5E2B5FCFD0CD3A53C3AC985170D4923F0E43DEBAEDF6207E16B
AEFBAC56418235AA08756166C3E77706A860E5246BE35B8DD86027336AAAAC5D
9A6DBF79A707274A97BAB33C291F147F7D8C196922268F952C43C5E4E9D34379
9E5B1564EE596D43C3FD0E2565CAD3CB2ED1A55A7C56B05E6C5C531818FF2C2A
4AEAAB1D035C10BA9E0C5A15D578BAF070E43DCCAB47D3537D3CC0FFE5F26533
E01DFD7E56C416D64D07A0832DD9FB9CBA9D0C0667EDE5B63732D9A0D5F3AB95
79474EB51D37148FA6044DCE93C9621ADD21B51364D86E6A2A424B7F2C2CB17A
1BFB5A9967A8F1AEBF66DEBCD3606614C0719ED5BEDFD51472D3F2D610F03C29
E332772471D512FD2B16B142A172E07A1834C998A5DC0A3D13F93D17A181F9D2
CC5BCC998A039DA837C088726809BA1644C7BF0122AF28CB8D245CA66111A056
DE0C6EF273A57387528DC47330D63E9630EA35DCF20007720EA1FE836792E555
859DECEC3EE39BD7738A7A6F1BF74EA1D68D6A48AEACA645636586B13C3AA520
8C42BB7CC3E60CF151A30691387A1A504AE31D8BBD9CD9B593FA1EFB71B5A55B
1833CA3722AE9539852565253AFF7EB0FBC320CD4FB147F4D8B925E358600963
FC91DA456B20B97492042B6174E73E807D466C29C9FA6F8C4D6E352758CB474C
89EBF5071B88DE2A31AB669AE5D1D855036AC7265BE4F41BC9F5D05D22553842
49A09066AD054A9D6942ED9CFE48A910A937E476957FF50C675C53989EB8B27B
B1D1534738819616DAE3C7160E7B98A7BE4CD7955C64D5067DB2A821AAF6847A
6D8A66E1F4F6BACC61920CC9979CE06462DDEEA830B8AE39568B7F1D70C47D18
0E04DE3CC286DBA6D0AA9A26DD8776649353CA5A6904C7451658F3D0D4299A0B
774EA0E752FCB38B01B35BFC7E0CE37E92C16B4C00AB5C98E989B0C094E00CA3
E11909F3CB9FD68558EF0DE3631E0FEA8CA9DDE8A9554372C826B4DBF873107D
5462A4BD37E70CD585BB6B80A062728219BD5283E51232A53E82B9394CB5FB89
4CA8F152A7DFC03DFDB30CE972309AE5CECF010BB1D3DC7891859AD33F4BE390
5D35C020E2ABBD2488C1A46909E02F1E15D3EDC5FB8126EB88EFE0EC9DD27B8D
0B72F33DAF74793677BEF0A78637A03C8CABEA166096F40DE173E00E648BDBBC
3952BB38C9ECE99BEBA87E52D3AA1ED4B7D6B96C9AE6BE0175537A8CE756708E
2C008580CE8E9C6679906C626A867A25C8381EE896BBE7AB8209696D6716897C
0C38F1858D7A4530FFB07BD88AFEDE918DB9C5BEA8191A8F35D904D51E9A51EB
860D25142B4AFE056C65C54BE4332007D1C2B830FB20C894E4CC85D66E61DDFF
0DF977BEBEFAE9C7C87F6447868A8FC339443B60B179DBC1474B573B65705267
C95529100F381518224113CB21C3A287EE071309704D789DCF3A0A8368A3C0FB
16012417B2A361A202E02356889884F242C744A820A4E00654892BDEFD157FE7
A9219CDB34426CB930F155A819A3178C59168417E720F8A83F81836C6168E1F2
57820C92A2804A4498BA11C2C0A1D2EF186D966831CE3BFCD90C722560E1766F
0CEB1C17567F52E0DE343445E0795717A05E2008CA54722827FBC24AEFB4323B
6CA5640C9E8FD24023D6A220C9A33095D8600518B1584B73E88931D28ED71550
F8CA29DFEC8D1632DEE634AF019F9AD7757AE9AC7B0CE536D3ADCFAE225C18C3
6027FC99AE632DDEB7DE440DE0799ED1EB90E8CF47B0DB890FC99A513B3A9CC0
5C3160C186ED2216AD39DEBAF93764B3890D6A3AB9847CC811C5AD7E7524373B
8CC905B54C9F2461C0DE8B17D1C71839FF281018DA37E7F2F37BFB49811A3523
149763DF6EBC642EDEA4A193D13D187906502D573F6C0A9F39FAD4C7A1CADE08
B0BB693FA98F25D3C1F5C446CA2199EE235F3D7DEC95E02ADAFA376349380B59
CA3C9D598C56632044938C3FD5049E0F4FCEEA0986F0011DF70F4D927434A339
59C9FFBDB1E62D02FF75336994C25AA005CB588FDA7B0B60936F645AA1D8823B
26AE87E003D85716EE3B5CA188A5E6A59E22F57BE33DE922049B09D77B795FAA
9C3DCDC99ADCD756FC2A10535A78A889E7B6C02A935574AE108FDB091FE018D1
F9EFE74A71F8E8143D4AA9417E852CC35546B0446EE78655197764A5A08C9759
23B565CAACF4C7BFB96DB725FAAC3285B1E3827ED34C8A2B8C5A171253EFCE9A
1904F79990E2F914645BDAC6DDDC4245856974CEF9A66991469EA758F720405E
8E349ED74F80C1E26C6D2AAB5C9F08B2368A7F4FB91387F92CF40735F5E27062
5D4FEB386619E11C7FA4CC484CD04366FCBD4C2ABB433E75F3CE5A403DCBE344
97A97F8DC1888FCDBEC992D536BAC833D09583FFC35A5F8861BD561B0476C5B5
67FEB4D0B183F8A401BD2A5A43870A3C3ED73F25421F5D1FE648DA650736CED9
7025F9A62CAADB684DDB9277D8928F8B605B70BCBADAB10AE54AAF9228177DC2
295B0D215A70FB40592BA9634BDA684EEDA029411D63694643973194D238759F
822E524A610DF8D6052CABFBC851700BA40E09256CB7B99E10BF31A82459BDDB
017ECFB36170EF3F496ACD6951E003AA067E1F8C990693443349A75A1A384D91
B548C4C8A6AE5449471DE91207BC8E167AD65BCE334146CCC37D5E5526C50438
5631D63A9F23C0F8C3534649CFDBF8CA2F4BA1297E4F4CC3EAB7380AFB56115A
1D85A524023AC52B345D6F2D3427A2A1AD1D1E3AA09E654844226AEEC7C89D24
F3C6C7B49ACCCF1296EFA3E9F02929FD004DA7CACBB837474BBDB18F498BC4D4
012C963EB264E27D4F752005092786B59244F4376884740B3CC8ADE67215B119
83D6219A564422356A83BB47819D2F9A09430176DFB404F33C997690F4866F49
1859D27E8CB6809E59E91F89B01BF5BF72CC62EA65D42091BBC9ED6565D6023D
414E2AF5080058D6BABBB81B9BF59929964E7FCD2961CDAD8FE3F24D122E02AE
6FF7D9D304929094600A398A226D23C2BA12CBEDB61081B0374C5DD69691BB39
5B4ECA246DA423ADEC73B8F3419AF9EF51BF75F304C87B05E4033D0845EAB371
960AF5EB97C7410A02B75B099D53A4B9A8587E81E75E93CFEBCA1B9F59F34F36
155982E8C1D9C24C5249820CA2DA034397E06E138770893DC252BF9E7CC0120C
F9372FECF58BDEA5D45093A3F198984BD23AE6634109C844F8BC4F5266A0A073
A390916B7A34CE4BA4E732E658A4620EBBF9004830558E56C9046E9A54E13EE8
8A02DB0A83761458DDFD60870DCB85FF4A96B7089E88457E0F0AB899058A945A
E4745F67E815A8FDB7200E5D220E7981DBB7B4CC2ADDEC025814EB25AF0EF256
E70A044A36FFD27D21F892B9AE355713A908A50F66FAFDC6BC5DA8ABB9540224
665D958599D71DF38042E9EF5834490E8F6237969F3AC2A3CAC8459FFE56DE44
260970E023557C8182C01CE423843A5AC478FEB615B2F09D33262ADEB29B25D0
01C41769DA69F9F92D10AF3A6FF5799DE03D6BC0E56C3B24C767C45FE7BD756D
2BEC41B9E36C3FBC668B9E2AAFA8DD168EAB3B30CD4F9352B517FB6E3B02AE91
742876682ED19F05CA36F8F6D00A0924BEA32FCC4AACB7DA2F9753B1B75AC157
CA6B8CD4CBE664D1845E50CABB6DFBA9286F83F9FBADC75600FF6A88330D0556
3C94A2B97D7A6FD5A1546100C4096A1FFC218C926D8720108DDA77561E38260D
F18DDAB0BA5AECB7B1D3BE954E31CC79C69D0BBED70516DBAC84319D12045A3F
FD609CD00A2BBB638271341928B8770639C07299EF42670E07C708FD50BD6C4D
FF77591CE745A13DA65979C57D5A27E29F76DFEE07AE5D076BEAB15008AFDF8B
70964688183C9C5FF85B1869953160F56EB190C85E82485A67474BA844F3E601
15F6CCE5CD665BFFF39CE9008455F44083861055B7FFC9455468B2F1B2B8908B
9A3A925604BFD379E623BFB598E396A8DDF14A69F3C65486AF482BB817CE6DC8
B87C283EFA42BA88A30F5A8D26E7D1CE4D56034652F43B6E0C336CF1B143EAE0
598D4B270534B1E719A1651941FDD0FCCEADB46C20F27E388B0A0C60691ACAA3
51462290E944C551304CCF857968263401ACEF4217072A3830114C1D864EA089
7F404716D8EA570C49E2C0C07B76451EB7864BC14ACE6A02485D234597872763
A2B8A27EDD72F210E50B1B2329C790D08C22B38A8D3D47A713F1DA9D37D4302D
97D1D51A40972401D5688832536CE5D398345A0020C682BD05DD4A8F0B419FEF
05EE6A6F5DD566CD2AC2EABDE4EE6B62C03720E4D6E79B636955D82BD419CA79
7ACE907017DA249CC75146CD061B9FA60116340BD1980B72B4F6267C68BE8F06
FD9E6423FEAB92CCB521F735706021F908CB5A6232B4C3FDDA9429F74F2E6AE1
1DF0BDF74302BD3A078E704E0FA14B3CE039D16B6C4F5B3A3164487D3A7D0480
5F819CB23BC6635B020E1D4048FBCFCFA64DAF181AAAD3F001EDECD9E2AAC903
9A343DA04AAF95BC82777C33B079306DF9B6529697C266019F2CC8BAF0F50003
8D9B4997B14B322883C7815B14D785A4269B5C4B506B83D5128229ABCAD1ED66
C6344C0F208CA2598C39378FD3C469B1032B53154E400D8214F1A23726136D96
6BA1CB977B50B3C39EC10CC1DE53F654474CE3524BE45B7B29A35643479CB0D1
6DFF343A59F68BA330306EAED1FE93A6C248B739D7F9F55C21A04F1ACDDB2CCB
9FEF39F406D851CB5ECA1D756E02BEE821B66386F35BB124BD39F9125A9DA60F
ED80DD10EE55F58361C3E137286A78AD0E926825D0C448A3C829DEDAD7DC0394
83916154EE1F83CF4DD57CF4D4B67CC7F465E2489C93AFEB7631CA3F0AAFAA33
3DF8650E8E18272F207A3D91856FC8B122280C5BCE0790DC65C91C70860C83C6
75D255E8BEB2CF0165B49231812B58244DAB5CA35B168340D9A8061C5A790EC6
CC43D2FBFE29D672358FA3EBB346A8D5F0CAE147F7BBBB1767D822E0549CD46A
C22AE408A3781BBF1AA1D44D04BCD93691942E93FE4349FC2D43C001E8AA54B1
921F08D4A1A91BD583CA3B0ECEBA68D609C5D7B8044AB786D4A01BDE1CC1231C
321443393686B1CBBA11592D148369BA5C083D458C50733884BA314D4D279BA3
618DD3EFF6BF00733F06AC202B6814CEF9B4E5419382A416AC31DA531B6CB77C
36018F9E838A23AB6056451DA186457B941B1BDF5997800902836038CA1FE55F
DF8889361CFBF8EBE6F5A98580744E7F00DB1BA8FB735FDB14C996C563C18126
C23EBCD787B1A4EB2B35494F06A2CD30A59636BF2A378AEBC200C0DA0D6D737C
FE89A34431ECF5D7F11EC2FABA2F97FA30CECD200F7EC32A2CD6165B7EA69F49
FD786158C9F6E19420CBA856DDA4701F6CED52F3D37288C2C38BAFFD6671E6FA
02F7A4069452C5D3DE6A9C3D9CC28695525CDFF475A4904AFCFF34276AB7DEA8
7B87D45B1DF952E86FDC5DEA8A6C6BFF9B4C7EA8501CA40B9417A1DB1B659DD5
0301BB9A250966D82BF8CBAA739EE6BBAC2C152EB7F0BD9B436BDDEFBEDDD9FD
7CFB61B1F9931574BDA012E62FEDEEBFCDE45F39A96BDDFB20EACA0D46AC9201
21C6366DE5B068DCE4AFEC3E41C6B202A16BAAE55C854D9DF44FEE9825E1409C
47308D16CE34EC3F3CE053B70FEFF3D4CEA7AFF8CD2F6CD79C13CDFBD72C769D
F1F68B44D32DF95AFBC347317D0429957788C1BA4054BC128A17EF4A4CD214B1
84588AB0084F02BF8B106987554E405EBAFFA968FC2AD438D2C04CF9448CC872
83763042321991B3B49E7E9670CB6A5302C7184027AF5911D110FBB2CF8C2A1F
395D918F2BE3F34FFD984395702FADB110B1D0A38D87128C3BE85BB00DDA01EE
9B3DEF0A30116F639C91934AAB29DB84663497D03AFE3D0775F1A4FDC46EA52A
FC0BD1A6A0AAB94A0096568BCA158BF80A216883CD3BAC157605A597DF84430D
62CF961A8CEE0ED68F49B7F0E78405C36FE0D6B19315AE577E0018D3A71976EC
67DAEAE6E637C58B915E7A0F7CBF9AFC9B1A1291104C8DCBDA359664A003ACF9
195E6296E407C28E29B91962EA151A664A381EAFABD79A20585A3DC649835CCF
B6AB7235D50A0E8EDD6CE69A987B1CCC98D472E76869CC93B68D02B0E896F5CA
D25382B2C4C2178440648EEB3E44B78C50316CC165B7E86890A46A8FD50FD2EC
0E9C9794E74D0B7AAEB3ED046F6A49F73FA933A32994D3C2E0435C0CA7007F00
CC56A3C9260E921EDFCAC671541B123C26C5ACF3A1DA57FCB8F8FE277082E0DD
BD78A9975F8EC365D54028ED17B661919C47444E3FA65D4474A62A4BE62728A7
EA07DE3523E31E28C870512F628D991895EFF90381D72ABCF656B9C1E3468F54
28A9F5042E4C22DC04B536678D75D222E32B15932294C76FBCC4FFE82C6E7313
F806E1704F984C68AF8CA1D51C98C1C417EA29DCC985E1E2A244187B3D726FF6
4555B876B8F08324DFD47B33CEEBDC74069EC0AF88437E669506BD40FC5FB1E5
BC0E5CCB835B79031F30EE00CA9E45A10F79404A5B38E561F4F882AFA2FC206E
6DCF10CA9975B837142C12745097CE8C21C3B72E5CB9A1F0BE2E1D1BA1580E41
A626873F091436C858C1C7AE18BF91BF2CBEA6F061E3876DC7B2658F0497D7B1
499A851FA3EFA8A1F01D979CF6CC5661E6763A0E3AD7526C8B1BB7A7477CCA4F
3B12D5693C64D8739E7D844D019E228F40E1D26F9DE1B0074508ED360DFB1A42
8B134AA991D890451AF343ECF8736D4A90714E1378E03E39B5190D33AD0A9129
52A95DB787CCE0E69777D2C8ABFA63F4DAD959248FE5522C98A2636BD3D6F8DE
97C8CE3CAF2E2E149BBB81F355402435B76AB001BECFC46B06134818DB33D38B
375172BF8EA46B99D400C062F0D9ADA245E0468C6FCF19469F377CE94325F5F4
866029D13D279363E36E998EFE1109F847AC3AF92D3A5A755437D2CBB9BB274A
2106B80FA3297EBFDB6BE336EB01C926FD288D64CE8DC836DFC491CD86FED7FC
FCD446704117BCBCE9DA7B49F64454AFE1EBC4F558ED877969B69F064BDEEBCB
0443B60B651E660D2E6497B137BC72B9B0A2125CCD2C9CF54DE3073626E76A84
D1E1DE27452E4A17ABE30E6E68A9896D69158E6A393F9DCDC320B2D3ADE23A84
BFD33F5A4802201068F93874C0BCA430E9714CCE895D5F320F09873A71DB4085
C8956D9BCCEE8B807971260E84DA324C2F94CEDCFDC0E7D1A506DF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 27597264 39158280 1000 600 600 (dua-tahun-gegono-2.dvi)
@start /Fa 136[65 1[52 32 40 41 1[50 50 55 80 25 45 1[30
50 45 1[45 50 45 45 50 7[72 5[55 71 1[66 2[87 1[75 51
2[75 4[69 7[30 2[50 50 50 2[50 50 50 1[30 35 30 2[40
40 40[{}40 99.6264 /CMTI12 rf /Fb 134[60 3[67 48 50 45
1[67 66 67 104 31 63 34 31 67 66 1[61 67 58 67 63 11[91
1[73 2[84 6[40 95 3[95 1[88 88 65[{}28 119.552 /CMSSBX10
rf /Fc 138[63 39 48 49 1[60 60 66 96 30 54 1[36 60 54
1[54 60 1[54 60 12[84 3[79 3[73 90 6[88 2[87 17[60 47[{}24
119.552 /CMTI12 rf /Fd 170[110 105 88 101 1[101 1[114
140 83 110 1[47 1[105 1[92 114 1[105 105 65[{}15 143.462
/CMSSBX10 rf /Fe 134[51 1[70 1[54 38 38 38 1[54 49 54
81 27 51 30 27 54 49 1[43 54 43 54 49 7[73 3[73 70 54
72 1[66 76 73 89 61 76 50 35 73 77 1[66 75 70 69 73 5[27
27 1[49 49 49 49 49 49 49 49 49 1[27 33 27 2[38 38 5[49
21[54 12[{}59 99.6264 /CMR12 rf /Ff 138[67 47 1[47 2[67
67 100 40 2[40 67 60 1[53 3[67 7[73 6[87 2[100 1[113
3[47 18[60 3[60 60 60 3[30 44[{TeXBase1Encoding ReEncodeFont}22
119.998 /Palatino-BoldItalic rf /Fg 136[125 1[83 1[67
58 1[83 83 83 2[83 1[50 83 75 1[67 83 2[83 7[92 8[100
2[142 5[117 4[100 66[{TeXBase1Encoding ReEncodeFont}19
150 /Palatino-BoldItalic rf /Fh 170[187 147 133 173 1[160
1[187 2[173 1[93 187 187 1[147 187 2[173 65[{
TeXBase1Encoding ReEncodeFont}13 239.996 /Palatino-BoldItalic
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a5
/setpagedevice where
{ pop << /PageSize [420 595] >> setpagedevice }
{ /a5 where { pop a5 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 8 1
TeXDict begin 8 7 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -240
-347 a
SDict begin H.S end
 -240 -347 a 0 TeXcolorgray 0 TeXcolorgray -240
-347 a
SDict begin H.R end
 -240 -347 a -240 -347 a
SDict begin [/View [/XYZ H.V]/Dest (page.8) cvn /DEST pdfmark end
 -240 -347 a 0 TeXcolorgray
-232 -225 a Fe(8)p -232 -185 2945 4 v 0 TeXcolorgray
0 TeXcolorgray -232 92 a Fd(RITUS)52 b(PENUTUP)p 0 TeXcolorgray
-232 190 a
SDict begin H.S end
 -232 190 a -232 190 a
SDict begin 14.5 H.A end
 -232 190 a -232 190
a
SDict begin [/View [/XYZ H.V]/Dest (section*.15) cvn /DEST pdfmark
end
 -232 190 a 121 x Fa(Pengumuman)34 b(dan)g(uc)-5 b(ap)g(an)35
b(terima)f(kasih)g(dari)h(wakil)f(keluar)-5 b(ga.)p 0
TeXcolorgray -232 597 a Fb(Berk)l(at)44 b(P)l(enutup)p
0 TeXcolorgray -232 685 a
SDict begin H.S end
 -232 685 a -232 685 a
SDict begin 14.5 H.A end
 -232
685 a -232 685 a
SDict begin [/View [/XYZ H.V]/Dest (section*.16) cvn /DEST pdfmark
end
 -232 685 a 0 TeXcolorgray -99 782 a
Fe(I:)p 0 TeXcolorgray 49 w(Saudara-saudari)28 b(y)m(ang)h(terk)-5
b(asih,)30 b(marilah)f(kita)f(mengakhiri)i(p)s(era)m(y)m(a-)12
902 y(an)j(ek)-5 b(aristi)35 b(dan)e(doa)g(kita)h(un)m(tuk)h(Bapak)f(Y)
-8 b(ohanes)34 b(Markus)h(Gegono)12 1023 y(Purw)m(adi,)f(dengan)f
(mohon)g(b)s(erk)-5 b(at)32 b(T)-8 b(uhan.)p 0 TeXcolorgray
-99 1231 a(I:)p 0 TeXcolorgray 49 w(T)g(uhan)33 b(sertam)m(u)p
0 TeXcolorgray -137 1439 a(U:)p 0 TeXcolorgray 49 w(Dan)f(sertam)m(u)i
(juga)p 0 TeXcolorgray -99 1647 a(I:)p 0 TeXcolorgray
49 w(Semoga)j(saudara-saudari)h(sek)-5 b(alian)38 b(y)m(ang)g(hadir)f
(di)h(sini,)h(dilindungi)12 1768 y(dan)24 b(dibim)m(bing)i(oleh)f(b)s
(erk)-5 b(at)24 b(Allah)h(y)m(ang)f(Mahakuasa)i(Bapa,)f(Putera,)12
1888 y(dan)33 b(Roh)f(Kudus)p 0 TeXcolorgray -137 2096
a(U:)p 0 TeXcolorgray 49 w(Amin.)p 0 TeXcolorgray -99
2304 a(I:)p 0 TeXcolorgray 49 w(Saudara)40 b(sek)-5 b(alian,)43
b(dengan)d(ini)h(p)s(era)m(y)m(aan)g(ek)-5 b(aristi)41
b(dan)f(doa)g(arw)m(ah)12 2425 y(Bapak)33 b(Y)-8 b(ohanes)33
b(Markus)h(Gegono)e(Purw)m(adisdah)i(selesai)p 0 TeXcolorgray
-137 2633 a(U:)p 0 TeXcolorgray 49 w(Syukur)g(k)m(epada)f(Allah)p
0 TeXcolorgray -99 2841 a(I:)p 0 TeXcolorgray 49 w(Marilah)c(kita)g(p)s
(ergi,)h(kita)f(diutus)h(un)m(tuk)g(mew)m(artak)-5 b(an)29
b(damai)g(T)-8 b(uhan)p 0 TeXcolorgray -137 3049 a(U:)p
0 TeXcolorgray 49 w(Amin.)-232 3287 y Fc(L)i(agu)42 b(p)-6
b(enutup)p 0 TeXcolorgray 0 TeXcolorgray 140 3495 a Fe(TERIMA)34
b(KASIH)f(A)-8 b(T)g(AS)33 b(DUKUNGAN)f(DO)m(A)g(D)m(ARI)548
3615 y(BAP)-8 b(AK,)33 b(IBU,)g(D)m(AN)g(SA)m(UD)m(ARA)27
3736 y(SEMOGA)g(KEBAIKAN)g(BAP)-8 b(AK,)33 b(IBU,)g(D)m(AN)g(SA)m(UD)m
(ARA)392 3856 y(TUHAN)h(BERKENAN)f(MEMBERKA)-8 b(TI)p
0 TeXcolorgray -232 4245 2945 5 v -232 4365 a Fa(Misa)35
b(p)-5 b(eringatan)34 b(2)g(tahun)h(Bap)-5 b(ak)34 b(Y)-7
b(ohanes)34 b(Markus)h(Ge)-5 b(gono)34 b(Purwadi)p 0
TeXcolorgray eop end
%%Page: 1 2
TeXDict begin 1 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref package)/Author ()/Keywords () /DOCINFO pdfmark
end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -424 -347
a
SDict begin H.S end
 -424 -347 a 0 TeXcolorgray Black -424 -347 a
SDict begin H.R end
 -424 -347
a -424 -347 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -424 -347 a 0 TeXcolorgray Black 0 TeXcolorgray
-416 -8 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -416 -8 a -416 -8 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -416 -8 a -416 -8 a
SDict begin H.S end
 -416
-8 a -416 -8 a
SDict begin 14.5 H.A end
 -416 -8 a -416 -8 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -416 -8 a 397 376
a Fh(EKARISTI)-603 616 y(PERINGA)-13 b(T)g(AN)59 b(DUA)h(T)-13
b(AHUN)-403 1225 y Fg(Bapak)39 b(Y)-17 b(ohanes)38 b(Markus)h(Gegono)f
(Purwadi)851 2794 y Ff(oleh)364 3018 y(Rm)29 b(Ign)h(Y)-6
b(ulianto,)28 b(OMI)622 3272 y(6)i(Mar)n(et)f(2011)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 2 3
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -240
-347 a
SDict begin H.S end
 -240 -347 a 0 TeXcolorgray 0 TeXcolorgray -240
-347 a
SDict begin H.R end
 -240 -347 a -240 -347 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 -240 -347 a 0 TeXcolorgray
-232 -225 a Fe(2)p -232 -185 2945 4 v 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 703 92 a(Romo)32 b(Ign)h(Y)-8
b(ulian)m(to,)33 b(OMI)332 212 y("ALLAH)f(SUMBER)i(SUKA)m(CIT)-8
b(A)34 b(SEJA)-8 b(TI")340 333 y(MISA)34 b(KUDUS)e(PERINGA)-8
b(T)g(AN)34 b(2)e(T)-8 b(AHUN)438 453 y(Bp)33 b(Y)-8
b(ohanes)34 b(Markus)f(Gegono)f(Purw)m(adi)957 573 y(6)g(Maret)h(2011)p
0 TeXcolorgray -232 973 a Fd(RITUS)52 b(PEMBUKA)p 0 TeXcolorgray
-232 1085 a
SDict begin H.S end
 -232 1085 a -232 1085 a
SDict begin 14.5 H.A end
 -232 1085 a -232
1085 a
SDict begin [/View [/XYZ H.V]/Dest (section*.1) cvn /DEST pdfmark end
 -232 1085 a 162 x Fc(L)-6 b(agu)42 b(p)-6 b(embuka)p
0 TeXcolorgray -232 1615 a Fb(Seruan)43 b(tobat)p 0 TeXcolorgray
-232 1693 a
SDict begin H.S end
 -232 1693 a -232 1693 a
SDict begin 14.5 H.A end
 -232 1693 a -232
1693 a
SDict begin [/View [/XYZ H.V]/Dest (section*.2) cvn /DEST pdfmark end
 -232 1693 a 162 x Fc(T)-9 b(uhan)41 b(Kasihanilah)e(Kami)p
0 TeXcolorgray -232 2224 a Fb(Doa)k(P)l(embuk)l(a)p 0
TeXcolorgray -232 2301 a
SDict begin H.S end
 -232 2301 a -232 2301 a
SDict begin 14.5 H.A end
 -232
2301 a -232 2301 a
SDict begin [/View [/XYZ H.V]/Dest (section*.3) cvn /DEST pdfmark end
 -232 2301 a 0 TeXcolorgray -99 2435
a Fe(I:)p 0 TeXcolorgray 49 w(Marilah)33 b(b)s(erdoa)12
2555 y(Allah)h(Bapa)f(sum)m(b)s(er)i(suk)-5 b(acita,)34
b(k)-5 b(ami)34 b(telah)f(menerima)i(jaminan)e(k)m(e-)12
2675 y(bahagiaan)25 b(abadi)g(dalam)h(Diri)f(Y)-8 b(esus)26
b(Kristus)h(Putera-Mu.)41 b(Kami)26 b(se-)12 2796 y(rahk)-5
b(an)30 b(ham)m(ba-Mu,)h(Bp.)43 b(Y)-8 b(ohanes)30 b(Markus)h(Gegono)e
(Purw)m(adi)j(y)m(ang)12 2916 y(telah)c(Engk)-5 b(au)29
b(panggil)f(2)g(tah)m(un)h(y)m(ang)f(lalu)h(dalam)f(suk)-5
b(acita)29 b(surga)m(wi.)12 3036 y(P)m(ersatuk)-5 b(anlah)26
b(k)-5 b(ami)24 b(dalam)h(p)s(engharapan)f(ak)-5 b(an)24
b(k)m(ebahagiaan)h(k)m(ek)-5 b(al)12 3157 y(di)36 b(surga,)i(k)m
(endati)f(masih)g(harus)g(b)s(erjuang)f(di)h(dunia)g(ini.)55
b(Ban)m(tulah)12 3277 y(k)-5 b(ami)43 b(agar)f(memiliki)i(suk)-5
b(acita)43 b(sejati)g(dan)g(saling)g(menghibur)h(satu)12
3398 y(sama)28 b(lain.)42 b(Dengan)28 b(p)s(engan)m(taraan)g(Y)-8
b(esus)30 b(Kristus)f(PuteraMu)g(T)-8 b(uh-)12 3518 y(an)41
b(k)-5 b(ami)41 b(y)m(ang)h(b)s(ersama)f(dengan)h(Dik)-5
b(au)40 b(dalam)h(p)s(ersekutuan)i(Roh)12 3638 y(Kudus)33
b(hidup)h(dan)e(b)s(erkuasa,)i(Allah)f(sepanjang)g(segala)g(masa.)p
0 TeXcolorgray -137 3944 a(U:)p 0 TeXcolorgray 49 w(Amin)p
0 TeXcolorgray -232 4245 2945 5 v -232 4365 a Fa(Misa)i(p)-5
b(eringatan)34 b(2)g(tahun)h(Bap)-5 b(ak)34 b(Y)-7 b(ohanes)34
b(Markus)h(Ge)-5 b(gono)34 b(Purwadi)p 0 TeXcolorgray
eop end
%%Page: 7 4
TeXDict begin 7 6 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -424
-347 a
SDict begin H.S end
 -424 -347 a 0 TeXcolorgray 0 TeXcolorgray -424
-347 a
SDict begin H.R end
 -424 -347 a -424 -347 a
SDict begin [/View [/XYZ H.V]/Dest (page.7) cvn /DEST pdfmark end
 -424 -347 a 0 TeXcolorgray
2479 -225 a Fe(7)p -416 -185 2945 4 v 0 TeXcolorgray
0 TeXcolorgray -416 92 a Fb(Doa)43 b(Syukur)h(Agung)p
0 TeXcolorgray -416 183 a
SDict begin H.S end
 -416 183 a -416 183 a
SDict begin 14.5 H.A end
 -416
183 a -416 183 a
SDict begin [/View [/XYZ H.V]/Dest (section*.12) cvn /DEST pdfmark
end
 -416 183 a 129 x Fc(Kudus)-416 548 y(A)m(nak)d(Domb)-6
b(a)41 b(A)m(l)6 b(lah)p 0 TeXcolorgray -416 858 a Fb(Ajak)l(an)44
b(meny)l(ambut)g(k)l(omuni)p 0 TeXcolorgray -416 949
a
SDict begin H.S end
 -416 949 a -416 949 a
SDict begin 14.5 H.A end
 -416 949 a -416 949 a
SDict begin [/View [/XYZ H.V]/Dest (section*.13) cvn /DEST pdfmark
end
 -416 949
a 0 TeXcolorgray -283 1050 a Fe(I:)p 0 TeXcolorgray 49
w(Saudara-saudari)g(terk)-5 b(asih,)49 b(T)-8 b(uhan)46
b(Y)-8 b(esus)46 b(b)s(ersab)s(da;)51 b("Datanglah)-172
1170 y(k)m(epadaKu,)40 b(k)-5 b(alian)37 b(y)m(ang)h(telah)g(memikul)h
(b)s(eban)f(b)s(erat,)h(mak)-5 b(a)37 b(Aku)-172 1290
y(ak)-5 b(an)27 b(mem)m(b)s(erik)-5 b(an)28 b(rasa)f(lega)g(k)m(epadam)
m(u.")i(Beban)e(dosa)g(kitapun)h(ak-)-172 1411 y(an)36
b(dihapus.)54 b(Mak)-5 b(a)36 b(b)s(erbahagialah)g(kita)g(y)m(ang)g
(diundang)h(k)m(e)g(p)s(erja-)-172 1531 y(m)m(uan)c(T)-8
b(uhan.)p 0 TeXcolorgray -321 1780 a(U:)p 0 TeXcolorgray
49 w(Y)g(a)41 b(T)-8 b(uhan,)44 b(sa)m(y)m(a)e(tidak)f(pan)m(tas)h(T)-8
b(uhan)42 b(datang)e(pada)h(sa)m(y)m(a,)k(tetapi)-172
1900 y(b)s(ersab)s(dalah)33 b(sa)5 b(ja,)33 b(mak)-5
b(a)32 b(sa)m(y)m(a)i(ak)-5 b(an)32 b(sem)m(buh.)-416
2181 y Fc(L)-6 b(agu)42 b(Komuni)p 0 TeXcolorgray -416
2491 a Fb(Doa)h(sesudah)i(k)l(omuni)p 0 TeXcolorgray
-416 2559 a
SDict begin H.S end
 -416 2559 a -416 2559 a
SDict begin 14.5 H.A end
 -416 2559 a -416
2559 a
SDict begin [/View [/XYZ H.V]/Dest (section*.14) cvn /DEST pdfmark
end
 -416 2559 a 0 TeXcolorgray -283 2682 a Fe(I:)p
0 TeXcolorgray 49 w(Marilah)33 b(b)s(erdoa,)-172 2853
y(Allah)e(Bapa)f(sum)m(b)s(er)i(k)m(ehidupan,)h(k)-5
b(ami)30 b(telah)h(Engk)-5 b(au)31 b(segark)-5 b(an)31
b(de-)-172 2973 y(ngan)41 b(san)m(tapan)h(k)m(ehidupan,)j(T)-8
b(ubuh)42 b(dan)f(Darah)g(Y)-8 b(esus)42 b(PutraMu.)-172
3093 y(KehadiranNy)m(a)31 b(mem)m(b)s(eri)g(k)m(eteguhan)h(bagi)e
(hidup)g(k)-5 b(ami)31 b(sehari-haru)-172 3214 y(dalam)40
b(b)s(erusaha)g(memen)m(uhi)j(k)m(ehendakMu)f(melalui)f(p)s(ela)m(y)m
(anan)g(da)-172 3334 y(p)s(ek)m(erjaan)28 b(k)-5 b(ami.)42
b(Semoga)28 b(ham)m(baMu)h(Bapak)f(Y)-8 b(ohanes)28 b(Markus)h(Ge-)-172
3455 y(gono)22 b(Purw)m(adiy)m(ang)j(telah)e(dua)g(tah)m(un)h
(menghadapMu)g(kini)f(b)s(erbaha-)-172 3575 y(gia)34
b(b)s(ersamaMu)h(dan)g(p)s(ersatuk)-5 b(anlah)35 b(k)-5
b(ami)35 b(k)m(elak)h(dengann)m(y)m(a)g(serta)-172 3695
y(para)c(kudus)i(di)e(surga.)44 b(Dengan)32 b(p)s(eran)m(taraan)g
(Kristus)h(T)-8 b(uhan)33 b(k)-5 b(ami,)p 0 TeXcolorgray
-321 3944 a(U:)p 0 TeXcolorgray 49 w(Amin.)p 0 TeXcolorgray
-416 4245 2945 5 v -299 4365 a Fa(Misa)35 b(p)-5 b(eringatan)34
b(2)g(tahun)h(Bap)-5 b(ak)34 b(Y)-7 b(ohanes)34 b(Markus)h(Ge)-5
b(gono)34 b(Purwadi)p 0 TeXcolorgray eop end
%%Page: 6 5
TeXDict begin 6 5 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -240
-347 a
SDict begin H.S end
 -240 -347 a 0 TeXcolorgray 0 TeXcolorgray -240
-347 a
SDict begin H.R end
 -240 -347 a -240 -347 a
SDict begin [/View [/XYZ H.V]/Dest (page.6) cvn /DEST pdfmark end
 -240 -347 a 0 TeXcolorgray
-232 -225 a Fe(6)p -232 -185 2945 4 v 0 TeXcolorgray
0 TeXcolorgray -232 92 a Fb(P)l(ersiapan)43 b(P)l(ersembahan)p
0 TeXcolorgray -232 185 a
SDict begin H.S end
 -232 185 a -232 185 a
SDict begin 14.5 H.A end
 -232
185 a -232 185 a
SDict begin [/View [/XYZ H.V]/Dest (section*.10) cvn /DEST pdfmark
end
 -232 185 a 0 TeXcolorgray -99 288 a
Fe(I:)p 0 TeXcolorgray 49 w(T)-8 b(erpujilah)43 b(Engk)-5
b(au)43 b(y)m(a)f(T)-8 b(uhan,)46 b(Allah)c(semesta)i(alam,)h(sebab)e
(dari)12 408 y(k)m(em)m(urahanMu,)36 b(k)-5 b(ami)34
b(menerima)h(roti)f(y)m(ang)g(k)-5 b(ami)34 b(siapk)-5
b(an)34 b(ini.)47 b(Ini-)12 529 y(lah)26 b(hasil)h(dari)g(bumi)g(dan)f
(dari)h(usaha)f(man)m(usia)i(y)m(ang)f(bagi)f(k)-5 b(ami)26
b(ak)-5 b(an)12 649 y(menjadi)33 b(roti)f(k)m(ehidupan.)p
0 TeXcolorgray -137 911 a(U:)p 0 TeXcolorgray 49 w(T)-8
b(erpujilah)33 b(Allah)g(selama-laman)m(y)m(a)p 0 TeXcolorgray
-99 1173 a(I:)p 0 TeXcolorgray 49 w(T)-8 b(erpujilah)43
b(Engk)-5 b(au)43 b(y)m(a)f(T)-8 b(uhan,)46 b(Allah)c(semesta)i(alam,)h
(sebab)e(dari)12 1293 y(k)m(em)m(urahanMu,)j(k)-5 b(ami)41
b(menerima)i(anggur)e(y)m(ang)g(k)-5 b(ami)42 b(siapk)-5
b(an)42 b(ini.)12 1414 y(Inilah)k(hasil)h(dari)f(p)s(ohon)g(anggur)g
(dan)g(dari)g(usaha)g(man)m(usia)i(y)m(ang)12 1534 y(bagi)32
b(k)-5 b(ami)33 b(ak)-5 b(an)32 b(menjadi)i(min)m(uman)f(rohani.)p
0 TeXcolorgray -137 1796 a(U:)p 0 TeXcolorgray 49 w(T)-8
b(erpujilah)33 b(Allah)g(selama-laman)m(y)m(a)p 0 TeXcolorgray
-99 2058 a(I:)p 0 TeXcolorgray 49 w(Berdoalah)24 b(saudara-saudari,)i
(supa)m(y)m(a)g(p)s(ersem)m(bahanku)g(dan)e(p)s(ersem-)12
2178 y(bahanm)m(u)33 b(b)s(erk)m(enan)h(pada)f(Allah)g(Bapa)f(y)m(ang)h
(Mahakuasa.)p 0 TeXcolorgray -137 2440 a(U:)p 0 TeXcolorgray
49 w(Semoga)40 b(p)s(ersem)m(bahan)j(ini)d(diterima)h(demi)h(k)m(em)m
(uliaan)g(T)-8 b(uhan)41 b(dan)12 2561 y(k)m(eselamatan)34
b(kita)f(serta)g(seluruh)h(umat)f(Allah)f(y)m(ang)i(kudus.)p
0 TeXcolorgray -232 2884 a Fb(Doa)43 b(P)l(ersiapan)h(P)l(ersembahan)p
0 TeXcolorgray -232 2977 a
SDict begin H.S end
 -232 2977 a -232 2977 a
SDict begin 14.5 H.A end
 -232
2977 a -232 2977 a
SDict begin [/View [/XYZ H.V]/Dest (section*.11) cvn /DEST pdfmark
end
 -232 2977 a 0 TeXcolorgray -99 3080
a Fe(I:)p 0 TeXcolorgray 49 w(Allah)c(Bapa)f(sum)m(b)s(er)i(k)m
(ekudusan,)j(terimalah)d(bahan)e(p)s(ersem)m(bahan)12
3201 y(roti)26 b(dan)h(anggur)g(y)m(ang)g(k)-5 b(ami)27
b(h)m(unjukk)-5 b(an)29 b(un)m(tuk)f(k)m(eselamatan)h(hama-)12
3321 y(Mu)36 b(Bapak)h(Y)-8 b(ohanes)37 b(Markus)g(Gegono)e(Purw)m
(adi.)56 b(P)m(erk)m(enank)-5 b(anlah)12 3441 y(dia)47
b(memasuki)h(rumahMu)g(di)f(surga,)j(dan)d(an)m(ugerahk)-5
b(an)47 b(k)-5 b(ami)47 b(se-)12 3562 y(m)m(ua)c(k)m(etekunan)h(dalam)f
(p)s(enghapran.)73 b(Demi)43 b(Kristus)g(T)-8 b(uhan)43
b(dan)12 3682 y(p)s(engan)m(tara)32 b(k)-5 b(ami.)p 0
TeXcolorgray -137 3944 a(U:)p 0 TeXcolorgray 49 w(Amin.)p
0 TeXcolorgray -232 4245 2945 5 v -232 4365 a Fa(Misa)35
b(p)-5 b(eringatan)34 b(2)g(tahun)h(Bap)-5 b(ak)34 b(Y)-7
b(ohanes)34 b(Markus)h(Ge)-5 b(gono)34 b(Purwadi)p 0
TeXcolorgray eop end
%%Page: 3 6
TeXDict begin 3 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -424
-347 a
SDict begin H.S end
 -424 -347 a 0 TeXcolorgray 0 TeXcolorgray -424
-347 a
SDict begin H.R end
 -424 -347 a -424 -347 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -424 -347 a 0 TeXcolorgray
2479 -225 a Fe(3)p -416 -185 2945 4 v 0 TeXcolorgray
0 TeXcolorgray -416 92 a Fd(LITURGI)54 b(SABD)l(A)p 0
TeXcolorgray -416 190 a
SDict begin H.S end
 -416 190 a -416 190 a
SDict begin 14.5 H.A end
 -416 190
a -416 190 a
SDict begin [/View [/XYZ H.V]/Dest (section*.4) cvn /DEST pdfmark end
 -416 190 a 0 TeXcolorgray 150 x Fb(Bacaan)43
b(I)p 0 TeXcolorgray -416 404 a
SDict begin H.S end
 -416 404 a -416 404 a
SDict begin 14.5 H.A end

-416 404 a -416 404 a
SDict begin [/View [/XYZ H.V]/Dest (section*.5) cvn /DEST pdfmark end
 -416 404 a 0 TeXcolorgray -314
525 a Fe(P:)p 0 TeXcolorgray 49 w Fa(Pemb)-5 b(ac)g(aan)36
b(dari)g(Sur)-5 b(at)38 b(p)-5 b(ertama)37 b(R)-5 b(asul)37
b(Paulus)g(kep)-5 b(ada)36 b(Jemaat)h(di)-172 645 y(Korintus)e(\(1)f
(Kor)h(15:16-17,20-22\))-172 805 y Fe(Sebab)h(jik)-5
b(a)35 b(b)s(enar)h(orang)f(mati)h(tidak)g(dibangkitk)-5
b(an,)37 b(mak)-5 b(a)35 b(Kristus)-172 925 y(juga)i(tidak)g
(dibangkitk)-5 b(an.)59 b(Dan)36 b(jik)-5 b(a)37 b(Kristus)h(tidak)g
(dibangkitk)-5 b(an,)-172 1046 y(mak)g(a)24 b(sia-sialah)h(k)m(ep)s
(erca)m(y)m(aan)i(k)-5 b(am)m(u)26 b(dan)f(k)-5 b(am)m(u)25
b(masih)g(hidup)h(dalam)-172 1166 y(dosam)m(u.)-172 1326
y(T)-8 b(etapi)30 b(y)m(ang)h(b)s(enar)f(ialah,)g(bah)m(w)m(a)h
(Kristus)f(telah)h(dibangkitk)-5 b(an)30 b(dari)-172
1446 y(an)m(tara)37 b(orang)g(mati,)i(sebagai)f(y)m(ang)g(sulung)g
(dari)g(orang-orang)e(y)m(ang)-172 1567 y(telah)f(meninggal.)52
b(Sebab)36 b(sama)g(sep)s(erti)g(maut)g(datang)e(k)-5
b(arena)36 b(satu)-172 1687 y(orang)i(man)m(usia,)j(demikian)f(juga)e
(k)m(ebangkitan)j(orang)d(mati)g(datang)-172 1807 y(k)-5
b(arena)37 b(satu)g(orang)f(man)m(usia.)57 b(Karena)37
b(sama)g(sep)s(erti)h(sem)m(ua)g(orang)-172 1928 y(mati)43
b(dalam)f(p)s(ersekutuan)j(dengan)e(Adam,)j(demikian)e(pula)f(sem)m(ua)
-172 2048 y(orang)23 b(ak)-5 b(an)23 b(dihidupk)-5 b(an)25
b(k)m(em)m(bali)h(dalam)e(p)s(ersekutuan)h(dengan)f(Kris-)-172
2169 y(tus.)p 0 TeXcolorgray -314 2381 a(P:)p 0 TeXcolorgray
49 w(Demikianlah)33 b(Sab)s(da)g(T)-8 b(uhan)p 0 TeXcolorgray
-321 2594 a(U:)p 0 TeXcolorgray 49 w(Syukur)34 b(k)m(epada)f(Allah)-416
2835 y Fc(L)-6 b(agu)42 b(T)-9 b(anggap)j(an/Pengantar)p
0 TeXcolorgray -416 3122 a Fb(Bacaan)43 b(Injil)p 0 TeXcolorgray
-416 3209 a
SDict begin H.S end
 -416 3209 a -416 3209 a
SDict begin 14.5 H.A end
 -416 3209 a -416
3209 a
SDict begin [/View [/XYZ H.V]/Dest (section*.6) cvn /DEST pdfmark end
 -416 3209 a 0 TeXcolorgray -283 3307 a Fe(I:)p
0 TeXcolorgray 49 w(T)-8 b(uhan)33 b(sertam)m(u)p 0 TeXcolorgray
-321 3519 a(U:)p 0 TeXcolorgray 49 w(dan)g(sertam)m(u)g(juga)p
0 TeXcolorgray -283 3732 a(I:)p 0 TeXcolorgray 49 w(Inilah)g(Injil)g(Y)
-8 b(esus)34 b(Kristus)f(men)m(urut)h(Y)-8 b(ohanes)34
b(\(17:6-10\))p 0 TeXcolorgray -321 3944 a(U:)p 0 TeXcolorgray
49 w(Dim)m(uliak)-5 b(anlah)33 b(T)-8 b(uhan)p 0 TeXcolorgray
-416 4245 2945 5 v -299 4365 a Fa(Misa)35 b(p)-5 b(eringatan)34
b(2)g(tahun)h(Bap)-5 b(ak)34 b(Y)-7 b(ohanes)34 b(Markus)h(Ge)-5
b(gono)34 b(Purwadi)p 0 TeXcolorgray eop end
%%Page: 4 7
TeXDict begin 4 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -240
-347 a
SDict begin H.S end
 -240 -347 a 0 TeXcolorgray 0 TeXcolorgray -240
-347 a
SDict begin H.R end
 -240 -347 a -240 -347 a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 -240 -347 a 0 TeXcolorgray
-232 -225 a Fe(4)p -232 -185 2945 4 v 0 TeXcolorgray
0 TeXcolorgray -99 92 a(I:)p 0 TeXcolorgray 49 w(P)m(ada)22
b(suatu)g(k)m(etik)-5 b(a)23 b(T)-8 b(uhan)23 b(Y)-8
b(esus)23 b(b)s(ersab)s(da:)38 b("Aku)23 b(telah)f(men)m(y)m(atak-)12
212 y(an)i(nama-Mu)h(k)m(epada)g(sem)m(ua)h(orang,)g(y)m(ang)f(Engk)-5
b(au)25 b(b)s(erik)-5 b(an)24 b(k)m(epada-)12 333 y(Ku)41
b(dari)f(dunia.)69 b(Merek)-5 b(a)41 b(itu)g(milik-Mu)h(dan)f(Engk)-5
b(au)41 b(telah)g(mem-)12 453 y(b)s(erik)-5 b(an)37 b(merek)-5
b(a)38 b(k)m(epada-Ku)g(dan)f(merek)-5 b(a)37 b(telah)h(men)m(uruti)g
(\014rman-)12 573 y(Mu.)43 b(Sek)-5 b(arang)31 b(merek)-5
b(a)32 b(tah)m(u,)g(bah)m(w)m(a)g(sem)m(ua)g(y)m(ang)f(Engk)-5
b(au)32 b(b)s(erik)-5 b(an)12 694 y(k)m(epada-Ku)31 b(itu)f(b)s(erasal)
h(dari)f(pada-Mu.)43 b(Sebab)31 b(segala)g(\014rman)g(y)m(ang)12
814 y(Engk)-5 b(au)38 b(sampaik)-5 b(an)39 b(k)m(epada-Ku)g(telah)g
(Kusampaik)-5 b(an)39 b(k)m(epada)g(me-)12 934 y(rek)-5
b(a)29 b(dan)h(merek)-5 b(a)30 b(telah)g(meneriman)m(y)m(a.)44
b(Merek)-5 b(a)30 b(tah)m(u)g(b)s(enar-b)s(enar,)12 1055
y(bah)m(w)m(a)38 b(Aku)g(datang)f(dari)g(pada-Mu,)h(dan)g(merek)-5
b(a)38 b(p)s(erca)m(y)m(a,)h(bah)m(w)m(a)12 1175 y(Engk)-5
b(aulah)33 b(y)m(ang)g(telah)g(mengutus)h(Aku.)12 1336
y(Aku)d(b)s(erdoa)f(un)m(tuk)h(merek)-5 b(a.)44 b(Buk)-5
b(an)30 b(un)m(tuk)i(dunia)f(Aku)g(b)s(erdoa,)f(te-)12
1456 y(tapi)22 b(un)m(tuk)i(merek)-5 b(a,)25 b(y)m(ang)e(telah)g(Engk)
-5 b(au)23 b(b)s(erik)-5 b(an)23 b(k)m(epada-Ku,)i(sebab)12
1577 y(merek)-5 b(a)39 b(adalah)f(milik-Mu)h(dan)f(segala)g(milik-Ku)h
(adalah)f(milik-Mu)12 1697 y(dan)29 b(milik-Mu)i(adalah)e(milik-Ku,)h
(dan)g(Aku)g(telah)f(dip)s(erm)m(uliak)-5 b(an)31 b(di)12
1817 y(dalam)i(merek)-5 b(a.")p 0 TeXcolorgray -232 2105
a Fb(Homili)p 0 TeXcolorgray -232 2169 a
SDict begin H.S end
 -232 2169 a
-232 2169 a
SDict begin 14.5 H.A end
 -232 2169 a -232 2169 a
SDict begin [/View [/XYZ H.V]/Dest (section*.7) cvn /DEST pdfmark end
 -232 2169 a 0 TeXcolorgray
150 x Fb(Doa)43 b(Umat)p 0 TeXcolorgray -232 2383 a
SDict begin H.S end
 -232
2383 a -232 2383 a
SDict begin 14.5 H.A end
 -232 2383 a -232 2383 a
SDict begin [/View [/XYZ H.V]/Dest (section*.8) cvn /DEST pdfmark end
 -232 2383
a 0 TeXcolorgray -99 2503 a Fe(I:)p 0 TeXcolorgray 49
w(Saudara-saudari,)54 b(k)m(ehadiran)e(kita)e(b)s(ersama)h(ini)f
(mengungk)-5 b(apk)g(an)12 2624 y(iman)41 b(kita)g(ak)-5
b(an)40 b(Allah)h(sum)m(b)s(er)h(suk)-5 b(acita)41 b(sejati.)69
b(Marilah)41 b(dengan)12 2744 y(rendah)f(hati)g(kita)g(ungk)-5
b(apk)g(an)40 b(doa)g(dan)g(p)s(ermohonan)g(kita)g(k)m(epada)12
2865 y(Bapa:)p 0 TeXcolorgray -130 3083 a(P:)p 0 TeXcolorgray
49 w(Y)-8 b(a)21 b(Bapa,)j(k)m(edatangan)f(Y)-8 b(esus)23
b(Kristus)f(di)g(tengah-tengah)g(k)-5 b(ami)22 b(meng-)12
3204 y(hadirk)-5 b(an)40 b(tah)m(un)g(rahmat)f(T)-8 b(uhan)40
b(k)m(epada)h(man)m(usia.)66 b(Semoga)39 b(p)s(eri-)12
3324 y(ngatan)32 b(dua)g(tah)m(un)h(meninggaln)m(y)m(a)h(Bapak)f(Y)-8
b(ohanes)33 b(Markus)g(Gego-)12 3444 y(no)26 b(Purw)m(adiinipun)i(meng)
f(hadirk)-5 b(an)26 b(tah)m(un)h(rahmat)f(bagi)f(kita)i(sem)m(ua)12
3565 y(y)m(ang)33 b(mengikuti)h(P)m(era)m(y)m(aan)g(Ek)-5
b(aristi)33 b(ini.)12 3725 y(Kami)f(mohon)h(.)16 b(.)g(.)p
0 TeXcolorgray -137 3944 a(U:)p 0 TeXcolorgray 49 w(Kabulk)-5
b(anlah)33 b(doa)f(k)-5 b(ami,)33 b(y)m(a)g(T)-8 b(uhan.)p
0 TeXcolorgray -232 4245 2945 5 v -232 4365 a Fa(Misa)35
b(p)-5 b(eringatan)34 b(2)g(tahun)h(Bap)-5 b(ak)34 b(Y)-7
b(ohanes)34 b(Markus)h(Ge)-5 b(gono)34 b(Purwadi)p 0
TeXcolorgray eop end
%%Page: 5 8
TeXDict begin 5 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -424
-347 a
SDict begin H.S end
 -424 -347 a 0 TeXcolorgray 0 TeXcolorgray -424
-347 a
SDict begin H.R end
 -424 -347 a -424 -347 a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 -424 -347 a 0 TeXcolorgray
2479 -225 a Fe(5)p -416 -185 2945 4 v 0 TeXcolorgray
0 TeXcolorgray -314 92 a(P:)p 0 TeXcolorgray 49 w(Bagi)34
b(k)m(eselamatan)i(jiw)m(a)e(Bapak)h(Y)-8 b(ohanes)35
b(Markus)g(Gegono)f(Purw)m(a-)-172 212 y(diy)m(ang)f(telah)g(b)s
(erpulang:)-172 372 y(Semoga)g(ia)f(dib)s(eri)h(tempat)g(y)m(ang)g(la)m
(y)m(ak)h(di)f(dalam)f(Kera)5 b(jaan)33 b(Surga.)-172
532 y(Kami)f(mohon)h(.)16 b(.)g(.)p 0 TeXcolorgray -321
744 a(U:)p 0 TeXcolorgray 49 w(Kabulk)-5 b(anlah)33 b(doa)f(k)-5
b(ami,)33 b(y)m(a)g(T)-8 b(uhan.)p 0 TeXcolorgray -314
957 a(P:)p 0 TeXcolorgray 49 w(Bagi)38 b(k)m(eluarga)i(y)m(ang)f
(ditinggalk)-5 b(an:)57 b(Semoga)39 b(merek)-5 b(a)39
b(selalu)h(tabah)-172 1077 y(menerima)24 b(p)s(eristiw)m(a)g(hidupn)m
(y)m(a)h(y)m(ang)e(terasa)h(menek)-5 b(an)24 b(dan)f(men)m(y)m(an-)-172
1198 y(dark)-5 b(an)32 b(diri)h(sep)s(en)m(uhn)m(y)m(a)j(pada)c(b)s
(elas)h(k)-5 b(asih)33 b(T)-8 b(uhan.)-172 1358 y(Kami)32
b(mohon)h(.)16 b(.)g(.)p 0 TeXcolorgray -321 1570 a(U:)p
0 TeXcolorgray 49 w(Kabulk)-5 b(anlah)33 b(doa)f(k)-5
b(ami,)33 b(y)m(a)g(T)-8 b(uhan.)p 0 TeXcolorgray -314
1783 a(P:)p 0 TeXcolorgray 49 w(Bagi)39 b(sem)m(ua)i(orang)e(y)m(ang)h
(meninggal:)58 b(Semoga)40 b(k)-5 b(arena)40 b(k)m(erahiman)-172
1903 y(T)-8 b(uhan)33 b(merek)-5 b(a)33 b(diijink)-5
b(an)33 b(memandang)h(k)m(em)m(uliaan)g(w)m(a)5 b(jah)33
b(Allah.)-172 2063 y(Kami)f(mohon)h(.)16 b(.)g(.)p 0
TeXcolorgray -314 2275 a(P:)p 0 TeXcolorgray 49 w(Bagi)32
b(kita)h(sendiri:)44 b(Semoga)33 b(kita)g(selalu)g(terbuk)-5
b(a)33 b(hati)f(un)m(tuk)i(meno-)-172 2396 y(long)e(sesama)i(kita)f(y)m
(ang)g(mengalami)g(k)m(esulitan)h(dalam)f(hidupn)m(y)m(a.)-172
2556 y(Kami)f(mohon)h(.)16 b(.)g(.)p 0 TeXcolorgray -321
2768 a(U:)p 0 TeXcolorgray 49 w(Kabulk)-5 b(anlah)33
b(doa)f(k)-5 b(ami,)33 b(y)m(a)g(T)-8 b(uhan.)p 0 TeXcolorgray
-283 2981 a(I:)p 0 TeXcolorgray 49 w(Bapa)32 b(k)-5 b(asihMu)33
b(tiada)f(batas,)h(k)m(esabaranMu)h(b)s(egitu)e(b)s(esar.)44
b(Semoga)-172 3101 y(dalam)g(p)s(engharapan)g(iman)g(y)m(ang)g(b)s
(enar,)j(k)-5 b(ami)44 b(senan)m(tiasa)h(dalam)-172 3222
y(limpahan)39 b(rahmatMu,)h(dengan)f(p)s(engan)m(taraan)f(Kristus)h(T)
-8 b(uhan)39 b(k)-5 b(a-)-172 3342 y(mi.)p 0 TeXcolorgray
-416 3673 a Fd(LITURGI)54 b(EKARISTI)p 0 TeXcolorgray
-416 3771 a
SDict begin H.S end
 -416 3771 a -416 3771 a
SDict begin 14.5 H.A end
 -416 3771 a -416
3771 a
SDict begin [/View [/XYZ H.V]/Dest (section*.9) cvn /DEST pdfmark end
 -416 3771 a 150 x Fc(L)-6 b(agu)42 b(Persemb)-6
b(ahan)p 0 TeXcolorgray -416 4245 2945 5 v -299 4365
a Fa(Misa)35 b(p)-5 b(eringatan)34 b(2)g(tahun)h(Bap)-5
b(ak)34 b(Y)-7 b(ohanes)34 b(Markus)h(Ge)-5 b(gono)34
b(Purwadi)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
