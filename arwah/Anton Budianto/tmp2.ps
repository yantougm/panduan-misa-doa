%!PS-Adobe-2.0
%%Creator: dvips(k) 5.98 Copyright 2009 Radical Eye Software
%%Title: pemberkatan-jenazah.dvi
%%CreationDate: Sat May 29 08:34:48 2010
%%Pages: 6 0
%%PageOrder: Ascend
%%DocumentFonts: Palatino-BoldItalic CMR10 CMSSBX10 CMTI12 CMTI10
%%EndComments
%%BeginProcSet: PStoPS 1 15
userdict begin
[/showpage/erasepage/copypage]{dup where{pop dup load
 type/operatortype eq{ /PStoPSenablepage cvx 1 index load 1 array astore cvx {} bind /ifelse cvx 4 array astore cvx def}{pop}ifelse}{pop}ifelse}forall /PStoPSenablepage true def
[/letter/legal/executivepage/a4/a4small/b5/com10envelope
 /monarchenvelope/c5envelope/dlenvelope/lettersmall/note
 /folio/quarto/a5]{dup where{dup wcheck{exch{}put}
 {pop{}def}ifelse}{pop}ifelse}forall
/setpagedevice {pop}bind 1 index where{dup wcheck{3 1 roll put}
 {pop def}ifelse}{def}ifelse
/PStoPSmatrix matrix currentmatrix def
/PStoPSxform matrix def/PStoPSclip{clippath}def
/defaultmatrix{PStoPSmatrix exch PStoPSxform exch concatmatrix}bind def
/initmatrix{matrix defaultmatrix setmatrix}bind def
/initclip[{matrix currentmatrix PStoPSmatrix setmatrix
 [{currentpoint}stopped{$error/newerror false put{newpath}}
 {/newpath cvx 3 1 roll/moveto cvx 4 array astore cvx}ifelse]
 {[/newpath cvx{/moveto cvx}{/lineto cvx}
 {/curveto cvx}{/closepath cvx}pathforall]cvx exch pop}
 stopped{$error/errorname get/invalidaccess eq{cleartomark
 $error/newerror false put cvx exec}{stop}ifelse}if}bind aload pop
 /initclip dup load dup type dup/operatortype eq{pop exch pop}
 {dup/arraytype eq exch/packedarraytype eq or
  {dup xcheck{exch pop aload pop}{pop cvx}ifelse}
  {pop cvx}ifelse}ifelse
 {newpath PStoPSclip clip newpath exec setmatrix} bind aload pop]cvx def
/initgraphics{initmatrix newpath initclip 1 setlinewidth
 0 setlinecap 0 setlinejoin []0 setdash 0 setgray
 10 setmiterlimit}bind def
end
%%EndProcSet
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips pemberkatan-jenazah
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2010.05.29:0834
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 90 2009-01-30 10:58:51Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.06, 2009/01/30
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionaray
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
/Rand { rand 4294967295 div } def		% a real random number
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/PenroseFill {%	 on stack: scaling factor
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
  pop pop 
} def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
%/NArray { 
%   aload length 2 div dup dup cvi eq not { exch pop } if /n exch
%   cvi def 
%} def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  showpoints { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED /c ED /n ED 
  cvi dup 1 lt { pop 1 } if 
  /s ED 
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if
  /dx ED dy div round dy mul 
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput { 
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
} def
%
/BeginOL { 
  dup (all) eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 26 2008-06-14 11:50:02Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.01, 2008/01/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.12
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower IsEndingFactor { pop exit } if} loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
end

% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 26 2008-06-14 11:50:02Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2008/04/18
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def

end
/PSTricksDotFont exch definefont pop

%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 90 2009-01-30 10:58:51Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.02, 2009/01/30.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
end
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  /next ED 			% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge { 
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  GetEdgeA GetEdgeB GetArmA GetArmB mark 
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  GetEdgeA GetArmA 
  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
  GetEdgeB 
  mark 
  xB1 yB1 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def
 
@fedspecial end
%%BeginFont: CMTI10
%!PS-AdobeFont-1.0: CMTI10 003.002
%%Title: CMTI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI10 known{/CMTI10 findfont dup/UniqueID known{dup
/UniqueID get 5000828 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI10 def
/FontBBox {-35 -250 1124 750 }readonly def
/UniqueID 5000828 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI10.) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 46 /period put
dup 65 /A put
dup 66 /B put
dup 72 /H put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 80 /P put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C5FD29DA32D34C95E
2AB2ADB3F60EEB0600C8ADE15A2380DE10AC5AAD585FBD13097B1A7E8E210D4A
EE96785449E07F0C8EBC2EC5EFBFD0897DFDC15E5BFAC9584D8DE95C5AB288CD
8AD8B9BEF0B8E5F887B3B0B331542FC8184DCCB753DB6ACEEF98B85756B988DF
CAF1AE0DBE7D37D5F44A2E760AAE3A5197C27B15E32275A64946C3E4D0476FD2
7FDE148C788DD2106F7C825E270588AC05B57E625AB17BDD02306F9E5FC851DC
32A5A6EDC43C770A71419B2C0C8074EF3F222C8A2097CD81A91F333A521B3A09
482A4FE1CB231CE344AD126AA284C3280AAC3AD162CF0EE241BFB4C8F20502FF
118507F5D1B5FD898571015E73E5CF2281085072E00D401F6F59761EEC3E8381
1F26F75DB66C504AB6BABA87D121B1E7040A07AA2FE01F80DBC246CC03C4B2DC
C2A715980C52B7F96BC1A78FCC7F4F52EEED5F705E08FC1E5BBFCAD121FA88AA
8EBE58172C162AF409DBB0728F14923ED02A65EA24E5D52B6AD07777455A70A4
61833D3789C719BA92E901232599767E423D5AD9C807670BE0E7B5CFF8256A20
C7BF7214FFE0342809570F5966A2C43E784F35015D9040BA34FEAB6A6F089504
3A40A9E9D711A2721D3F4998371430FB3C94BFC619559B97D49627BB630F4B70
9D0A8FE4E916235335C3962F3CFDB04C4A3CF714DB5E260F4E66FFF2F27CEF2A
D4AA26BBCAED23B8BDC98F8F453BA27AD7758537561E766B82DC3032E92A9EB0
125D98A22C5466AF069BF72A9BFA052A8628FEC6A6AD0B711DFFEDE3AA2D7CE8
34EA487038EF50F953B8B4471CBA6FC3C53877EC1BC94582B1123EDF44B4056A
30F49394BDE22CDAD7F01951C7013D26979277D18EFA594E8F4F2B5E615187D9
39E842EC28461B9ABA52020A127D2CB9002A673A435B13C10602EEFDBBA6BD49
9DDEAB9E68D655443A5C2492BA061C1391A51592BA8C353A6F6A0708E8860184
2B5D031D2CAB87D618E9F6F7A0BF3F66B3FD5A25BB91F7F1F5F99CFF56EFF4FF
0A35C55658001ED2E97B26C869292F6274D433A5443179DBB8EE987196306348
3F9E87C6422AFFDD30080C9AC4EE7FE5E2DCBFEE4974331F4AAE479FD8806D4D
9C2B85FC69EB0453AD827A1E767E5C484BDFBF5C8D6E2B3C96298B390F22D757
802643A79D5E29CF3AEDF0E12CFBECA4663444FC87F2027571DBA9ECF688BF28
FF0DDB3AEDBA0FB28447CB4B5D5205F40C1E7A525FD7373392EEFFD910AC82D0
98E71660A1B3227C4A2592F3E853CA4CDF64DF19A52582E167234F4036FAAAB9
5446BE102DE2BF43E82F0112C2A20F15A3F92C6571AC761665A905362C4F8BDF
AC8705519C99862CD9C0D75113C4AB5FBB83C880E46B82715B5628890D9103AD
A2329638B95D93C4DECDC5E6C588C9D5183EE6FC28FAF9825F02DCA567306D93
5440987A81B51EE7291107A08F201C609FEF91A8F0587E8B13D4BAF74A5A6815
DE9E4441F46AF8E1DDDFA2D611C889614040B144A5EC064DEE4638C04EAB2E37
4CA8F50FB8C4D65BB296DCCCD39F1F554CFBED96670A91F515CA10EF896874BC
8EF48C6447752C70FF5A06F928DB55586354076773BFF7E94C4C3A7A1C1F421B
A9B4E3936EC26E0C19BBBFC90F021E877F54B62108F6DD1C7F6D5B8E64FC9362
E173F01BF2904B7E5A08B3543611562C2714099DE7D4FA330DB148B560A9601F
42A84452811CE213DCE782A0D7809CFD954D6BC1EBF2BA4D1B18F50FA8174C96
3E0120E266AD5DDB40B3F6798AC28CDC5C3C4BC34583528F5B5DC8A222B80B59
A3A93DC715D061EC6915E6E6E21A25425C25E8747C60F170D61047108826F96F
7830E220C108B441B6EA3198E33C49BAD8D43086E49F5A2BC7958A1A8CD011C4
49045193394696EC3DDD0BE084E8F2E9F0B9496F035C0DEC1CE11409DF566428
D50043CFF5CDD1092F6E0807E660B68163BCA738E8D98FC6EE3F713164CD204C
0BA84FFF4F33F47BC31750B448603D7ADB9AE92FA91AEBBBEC0DCD66980E6955
CEB425ED07115B24E40F53B29B9D840842EAC691B4F591F866DF27556474B485
1C6F53DD72499847109B16C7093984A6B8487D4F3870DD517945CD90E648C1BB
8A6861E540FCF9D75B984B5009B5CC760CBE297042C240DD624111670B703388
6FE6FC0E89C6B4C88F51DFF3913D0CC1FB4770C8CBEADD4B86393605C0B6C468
83CA5594754411B6FC331EF56D7CD6D247FAE42E966583C29239A8F862348D29
60B177984B6B957E733DB4D275015691D91443BBB13C2DA96097A29733CDB284
42F89C85A7A743338C9DD3BBC4EE53F695E5163E6E1ABE5791ABF100B198B9B2
1C21E2FA2FB4AFE7F9BB2D381260CDD3A2CC05BF513AA1E80ED69FA27BC5ED5A
21445BF00BC2F997B356D94AF13736C6D3B0613EB6F4CD96A685FEB672661DCA
206105EDC3CA07900676EB2FAB37F48D2E8207BDE1463894DA3C5B1488AC1EE9
D39DAF691648048F5D7A384B8927F8DA2BE3602669F71D80686E427F395134E7
7ADCC611BA91AD4B7A0237213C60CF2C905359C90795230344FC3C50A22BD44B
55B2044792509F50F5C21F53D9F9E9F063ADBED3AB99E2613B23334FE8DF70B4
6120F2EDF69F50BE793EE145B9FF9C73179DE640FC2ACEB5C6617F918CEEB762
4CD81E665B2E544864D13230B058717B207D3CC5D6647D5343DB4D0356082392
871EFFA896631A7E0D6477942B632074A9A4EF7B09D4701B1639BAAB4E03A40E
9B54A7A4F845CD63F88831EBFA4FB847847CB98F3455CB5957F2E0A0F5623645
DBB5C5564C7F8B117D6E27E65C0F3EA81AE67B4AE4B201E7C4FB0A8364FE53F5
41A7CE8F834C2C4B322809B353A5E63BBA7BF3B7DC1A85EA700BD287C2BD3FC8
2832B0BB4695FC937FF5EF06FCD87DCE6DE793C2B1EE10E6450352C17726155F
220D550B1759E15AB2C1D5968E52C8080CD280E99D3CCC0E80C2EF8BBFD96001
A226FEED7311EFB4B67F424B557A877379A15BCA54780F0CD2CCA00400B9B39D
981C6B552AFD2506D1B23618FA9AE6D8143CD7198A8482CB416CCE62B992347F
337D505A4078713BBD91E5535BD58EF0351EBDCD749CC24D4AD39F8CECD7D6C8
139756680A4C03A58B3374CEC658D30160AE4863A3938A891BB59CBE02BB451B
1BA4B2B6E68AB61DEB85F95E3C909B8B66E220B9F18280161C279F10F7093CDC
100A53D542F071CC0A5AF834DC1D18738F5DD62A5573E884E1FFD22BD810828A
1EA47F8218C15A2E97CBC609927DA3CC2B802EA4A0D7EB57627C135E3B065905
F97597D818A2C5CC6F328AD25AD11FA50F1E4FE637980B7474D6F85A521892FB
72989AABEBE02A2D0EFE88A6F67AC29F5D8DDFEDAAF465C439983C6B84389FF7
A6434462BEB7B07DBE4BBA61ACD4A60C55B5C0AAE527DE381DFECA2E6BAFDC8D
310364ECB42CAFF72BA93C067B2F02D1CA7C34AE7CDC46787A0E234C8BE8A928
7A6F3DDE0338FAD532A9886E8E3525B85DD39364AB03EC4C0DD25DC179CC1989
1BE232E387E857C78332D834679195E10F1E7B87B7966DA3B2238F53D1E13FE2
8F55ED6A92A750C7250C9B91E29796621E7E9520373214D7DA81B2875A986D33
80382AFF6DE1F829F048E57664D9C4ACE91E4684A51023943A4964AB5657D610
3A5405EFD4CFD1EBA684243E15093C9667797BB47617B66054EE02C41FFEC45C
C1BAE8AD56B00D323FCB1D2744F061FA16E161988741A319B1564E04BA210996
4F9F02A3268CABE450D166A763F5284954564A1C86B76544C5F5ACDFE0D758DB
865A1CFCF9FE8CD5F9C3B2998C56468FD52DF8EE60C6935A3D221EAEC7714E3B
301371C7DDA0B03A2416238F2B47BAD3A2C5021C886DF51C695AF9C87A864B48
3BB3FE0B355EED5454B59B25A0D8A1B8CBD356C24F64D9B55E16C30C011365C9
1E0380753BA3EDC0868788D5F50B9353D0227BCEE1BE36998B2622C0759BD66B
E4444250589F9CEDE766D8B940770CB6B89503E925B35C00CBEC2873D2DC4A29
0823FB7A3717B69A7DEDBAAECC067949932728E89BEECAA91DE3AF9BF070B9C0
30EEFA8C0A55C8388CAA2F0515915C98E67FA095BB98967D14B0DCAFA9622E4E
2E0EBFC768D80585ACDF28D8A5C2B6EE2FE7AAF62FFB90F569F84A0903996DF0
C1D5723366C436E4088F3E2BB9B47F9789052A71CF5C49908CDC1DDA194BFB89
14D7E3D7D4D72A150FD6FFD8303E9DE5A97A71B808B8BDF2AE466F31BF5D7A4A
44F81230BBE2B456A221E2F72A8B59F8FEA8D31F8A005A5BD93B9F49CFDC3DCC
CE2B67090460F632271C7157BDC2F05BC2749FD562FC28682A616A52D1B67654
DF78B7843A9EC26A7DE2EB168F874904C2915B97534B2D4D9F74A9573A771D34
9F7BC855E8F794621BF6AD471BCC347E2DF5F620F5C209E33A4CBF1EA85AEA87
4492A77342DD33EF615FF34037D660B713C908786D9022051B825226545827A3
2AD1B05D654DB6E6D261B4E8AF0933AD1F0FCFC7201E1A7C1B4199F160C38676
21ABA2DDF1CEB655B3EC3226E0B122976EEA998F7A5241F062E54AD1DFD6ED26
47C99A439E0AE95415059179867CDD3F0FF751F3141309F40E00A6C7C28433E4
F649BCD5DAA64177580E05C495EE7BCBCC5FBF104DAF360CC2711386655B26F9
D349D887EEB32ADE595241560FD5924A1745A22E6A01DB9C285EF14596EBFF0F
03F36EB2E0A7C3864F819EF7B0855121292D49482F046A55CD7271FE03F02EA5
886864D9D8EC22A68C23089EAEFFF03DED6484D8C341861EF8B6FD3C5BDF5AC8
352DA4E13A1E30D0CB71E090E9CFB9AB2CAFD0CA7C34AE7D8E3B2EB4666834BD
9CCD1AC2108348AFEF6071796F4BB2FFA4A67ED917E76A109FA2DC2A30D744A0
9AE653A748C1D18FB52595D84E87F1C1FB6B2F32667FE203262C66627AEFFED3
92B23861E5EB238BB4EDCE09DAE1C65BAFC198CDD1B45D42CDF93E16BB82D35F
821E9E49067E966AFAB2AB52928F8DD6359984071FC37AA652FB834A09E5BD93
3AFAE161140E74C6531E413E8FBBFC42BFE8A464B71EB1D8CAA93B33D7BCC3B0
47C7EEFCD3E9FCF26FF9441DD9BDE68D77AD7251C06BBB9A2103049E8827CAF0
F26BEF33F656A690235DEEC623CC519AFA82DE2AE16FB99F780FD7D8290DA40B
9B604AEF36B529FD184239E7D50561A07428D28E51B55546590A1AEAD4B7F2B1
AB8C5B9022C1FA03E33F8F409B24911AB8BFCF6EF4A8E415263C789F89063E71
C0910DC20347469380B7FC1EEB87D4CED7F4A361E58B61C91AFCABA35C03F978
B9FB5257C31657EE48504C355CE893FE3C553274C641DBC4004F5D5B879CC5ED
D3F21F867F6DF054127067DE86189F0B59A1B90FDABCDFEE61423609D888EEFD
F4A1367129962110C651D9481CEDDB8C5C2576A59AED64E95F7ED042AEAE2F7E
81AC0C408E593DC30DCAC334EDE9EE27D932B98F040DDCD195D6155607DD2038
970EB78221A94C52BD4F0EAC65F1FC10E5DAA93C17266F351669CAE56F42B68C
6D01E1EA03AE554D63CE76D800FDD9CFD89F80A241EAEFF7EDFA41794EA25CE7
97BD5028464D2CD45B53834B4AEF8BF0B9E7C6ECDEACEC887E8790A47A93F668
A9095E5FA1116A122C0E5B74E2226C654D3187C6CFD8807917820423DA3EC1DE
AA020EEEF2280C44A15209EE2F3FC1776875308CEAD38571E7BF889F287E4594
971A83605E0B4169D4A23EE790515223DF8724054EDAD905F57918FC0BC64F96
514B4BF7DC9BA79E763C22C977FB6146B10D26FEA1BAA7BAF21312F78D1625A7
8E242D743471DB5821408AB786E4A7EA9D35E30E85533C617689F95758FB2C7C
392E759C299DCCE36689686DE0C4DCE32649493650BA194A6208C5EAB670B170
3F2C70BF0EF0E3BE2FB0A79224FF4ECECD6BB3388C6D06867A0E5E3DB93C1B2F
464C23E44D3132E7D4086E3B59B1D13F49EB4772DEDF8EDC4F603217233FB7BE
C13C28648E9AA51D53F11FB896839F97AEDD8834BCA53CB0021AE91FD8E95E2E
F8A094093AF556B9639F508A401542B06821FF9DE1A745FE9AC5CACD5E8E1053
911442FC15CA5333751ABFE2C617D38FA1DC332BFEF44AE569DC631C93EC54D6
261583A695F5A392867A57F59B741EFCD2DCFECBC55D1EA5F2317601C9DFE9ED
D1EA466210FFA905A8F85BD58B98991BEA58DFD1CDED5C9B086D42CCE632DADA
147941917B879139E016B0DDEB8446BA017FC8EE5A354533D667B0835F5D027D
C2D580C16B80B3D05CC92C0465CAE077729F0A15B2DAFC89DCD349B3F81D0516
C65526EB5C10E45A8A85D716EE35FB9AB201FD7C89ADE5AD925A174169DA20FB
61E96C73A143DF964C20589EF24A0FCFE6195317F2FA0D2249C0D8E649C3D9AD
FF13332EA2E4C9CD36D8443EC8F027B61CEF92C6A6B72DD4ACBACC16E429A9A3
F5F29C1631360E32F8C1C93ACB22F810B86D2969A7480F486F62F8488BEEC74C
2C1AF13BB92BC578E8CD30BEA6BC8CB68ED730F54CED0167605FA76AD7B7E88C
7AE7688E598F91C471BD65A542E96D64B1EAF19FB4F1234308C48C2DC86E2193
11ABDB4C6189C6F201627C693691A86DD07FF55C30FDB3F72381E09C6080FD7C
9182762E5001E30F52A216E0B71E4D2D4E2F3B20F95DF3A11FDB2D2B5B5FAA66
C46226D5E0C77066349770514E5675550FAC9394FB27CD2C2F974F1FD58C04A3
1EF53A8AB3B2202CCA1CEFA66228E1480A0709436C44BD3319C40CF888AE4692
5DBBB52B15CF3A518F627F672135A24D5DB9B2EBEF04C860AECF231EBB5A3BF5
6DCCD5E72FE4B6DD29E896691868A7DE4120AD06AC573F5608B8449B38E71CA0
EB5CDA3F942482EA7973661170F81DC88D54DD5B92323F46F833DFA757107E9E
F62A47CC50FAA1B68ED535C3E0E1073532A05ED339C8D70B3B9864808ABACD23
AA95E9FDA43D54C66A675FA074E0A5B8777D3C07850A09087F36852B5351F35D
8BC4DDFCA35CF29CD5E3DE118A741FAC4DED36847F2E2C6CFE08669301722D94
376F540982958074E7F1383C409652F6C99DA39FE90B38221E75BC1ECB93ABF6
B00F410A0C5651DB418566AB350FDA1789AFD88286AF3BCB42B98386F7BC144B
02DEB8940D20A6B3062F0C4244EABC50923390064F1D027A8BACC3DE45156E56
4A942D1B87F1C4A76B0D4D6801AE792CCAE3009BF25368B31B6AD5476FBD3BFF
9759EF463EF5E78E10B7BF64005B2ABE0E8813950A08A1808587A98E0021D0DD
751AD515E8278F1A0759E85D8A084490BBB0F8206484AA36388B1013643D3198
3509078847BDAE08E76FA5BF3E3A73C323CE093DCC148E3C02C2DE1E26C94D5A
40EC8308ECB02FF7DD04EC1005A2A0DC74D4E587F10A3EF349E828F69FD38962
2F0C74D5DAB3ED6CC9F97008ACCE74C086A503948DEF1AAF58FC8BEC703CD360
D32098A56AC776B1BD08442052A2A4EF6C8798F7CDC102AF1A2009657254762A
0793F79A39DCD6ADBAA5EC84A7ED6018BBE727E5D477893D84F157074B24C13E
8D4881C7DF8ADC13EBA0D89745EF93B7616EC5355600BB0D2B630AABA3CF2946
AFFD0B2B724EF0F28393F2034B2E69DA5061426805353EB4D80E20739BC4C510
6C45275B8261DCBA10DE1D104B12F46ACD230977EE7D7D1D35D2814139E38C4B
CA6937CCFA653349B1EF64A98457F7B4B5D8F2978F16ECCEF7054905863AA46E
DD524CB33459220C71E9EFA7845A3A760A507B3D3ABC525B35930B613710A13D
098832C58EBBC8B0CA6AD516E6385792C59220331D0922A1F6F838A8DE13C337
900462F952EABBDC2EB1FBF94A66186C177501453CD3FE3582073DD86F04406B
41B6AEB440DA475E13240445D46726A6D45185D56BAB8807CEC8A8F7CE1AD149
7CE2E1BB5DE4E5B9592241DD136479A65905FD0062C91DFF7349874BFEA5D9EA
2F610ADB9AE7757B2307A1BB9D6797D9F9C4844A59841C7C7682105E23A374BC
A91885E7410F56F60C29AB8B417E2D6092F8BB70A2DD5DEDD4BA1077D7CC62FD
EA43428C6F79C332342E15F75B08A1ED360B3511F823E75AD49BA7AE63B19238
2AFE8FAC2715E2FDC895E95036D23127557837506A3B542B0E4651CE2B89C252
31EE8ADC26E2C04E8E30A9CA12F066CE01953BE7867171FF6C7E834742C36C3B
58E74E4B482CB85FD4D24DB03D753F260A585D552CDC9E1941446F2F5B45FF24
2DA4932B973139F328E7E92828B900BFD398B6F41DAA0D6861C66AA7F5E3299C
87A5925CE0E0F9E09AAE0792954A1F2C0AAA8288DEEFFE579E38A3CE8A943EB4
55322A87C1634074EBEC25F724DC1BCC1BC10458CA6C4395659B0DB6B612C151
557CC669D8DC37769E59A5AC6BF061C79FEE265DBB59520EB8FFEA273601D1E8
2984B8AE31AE343F37D03E2BF97DC48AFE50BB6138C7B9F9B5E28672A37BD8F5
8F8C9F91F0D92A7A8A44160B771A63EFEA0A3A1CDB579E72098E529F8A69F1BB
6FED504861340EFEE7345AA680CC0213F6B0A89F9F77A923C436BDFFBB1ED75E
491818551B6F7D1EF65CFD5146975C6E920D8B6D8B559E66DF370A0216FE0A5B
C2606F28C3998D7F565D5F5539EA278477BC1D01003CC4F5F68D7637DF098278
D6369C3A6F5A22F3CDBA85AFC9A3AF46D1E6DFCB130E3C8D0C4E7AE652C72153
C48DC62BC89794D702DA6AD2C852AD41BB8DCAE6D0ED3BE5D5861FFF33244F24
B53CCE01B56A7B0F38DA9AEC8ED7D069E25D14401FB4813B34227E26891B0C46
79B0963AC4D183CBF70F4ECA4EC27770A56EA176910E63CC95808486AA29256D
1DBB74886BF564BDD888F392646E508EFB09D2A8E94D0ADB98C24DF05695DC0A
5B357CE7583A32319E0EFF4C10F41BFFF224FF746765FC1B84E06870234B7533
4AF37E8364F295B3BF97D75C9228A05771E9ED9BE5B69F45DC14DE225F178166
EA60855627C33E690F12858DE8E1ADFE4F513C4D1A9D5F7DDEFA6F522D326A09
C2311705AC33A07E59CD78BAE1B1255B139ABB3E705CE8F29B12DDC747A9B561
1A4C335AC48240B2618CAEA3A6093177A1B650120BD00B1823535631C4D39337
20F1911FBE5F281554FAAA303DEC894290B0BD1D1541E27EEB978A83A315B7FC
E8F49CB09412A18FD1FC93820837D59932CADFDECD1B83EECE91A7ADA775BA7D
FD613802C1AFC29C398F44944553A339A4F5202A9BAF35742D7621227B4066AA
634AEC43E463356FE822E56DBB5C5C335F315FD57BAC79C0C7596E61997BEC76
4D0045AF5BE8E68C8847F6DA07E17290E6C5E74AEF42BBA33B2663D564438A57
3255B54C18DB0F5E3923464EA86D1C8E6E3F0FF3A6E3C140F64925215CC4DF3B
5EDBF743E4BBBB5AE195457BC50358974E908626DC144F6A194DCC6A9535C441
EB955A416A6F3E00B20504B84D823D1920E305AC22FAB258C870969FD1AABEF1
1D83A71549094FF1F01B5234B653E665738CB4068444CF1445ADB6EB705CAF56
C3008A28B3C957C7CFDD953E3BB6317F3FAA1B91DCDA1170FE1A101F756C8DF7
D51C4905B01ABC6B2D707F1BF8FE2E9A638B4550B2727E8682A7A6649577BC07
041B903BF007873693475C2652AB0EA2132F3C326470C5B6CD40F6C993ABBB37
92991B52E4704D973DE0DB188A817ADB6DC013F983CFBD0B3676184AFA58F86F
01329F1C4A23689C9990E92E0363F0B5A70C7147DC027D69951F72E819A64F11
4D13B2B95B9CDABD481A526F5680F6A0411263F02140AEA93FCF1A94F1D9A4D1
598596C6DBD18B922AA953832D094E69E6C75B73F4A9F21421C860A693F7C422
AE38DAE2C990FD54BE878B4223DD8CAE2E6D20E16657398D5DC47E3E0D18F5DF
6A3ECB670B871C456799AB23BC8FAFAB5851C249A6735F1E80634FEBDE5136CA
8EBB5B8324A46E034ECA38E4094A36A18E0F47DFF523CA4BBFAE8CB0CDD95EB4
586609C7BD96A8D68A2F959E1E2A679A5C89D0A96CD38BFADB1B576B2CAE02F9
67DC7C5B0A0D30C3426E6B2B955444266B1FFCF18535E6C42A483AB84F48955F
E377C69B004EDFB68A1C3E48563AC6B31EC1A84005000BDE37609F0E468C8968
DC81FA8896DF2B54E9FD0257D3C1566B8DAEF5DCB64B09EFA3EBE6476DEADD93
EBFE197CA15704CDFD062632F2360EAEDAF10E7BDAE47FEFD2EC9BB8621A9B4E
CE4D4C54CD838038951DA8FDDDAC561AB827B777337AA8EBD66968073DE3C79F
366108D82CBFC6E7150900278B50873FD386E95E608B8CB748D996AE280D284D
873AB6016AA6831D82FB871C28223916A7221E1BD4412EE3FD48B2FC0149B539
E9A0221BC6C3F168384DC2527FA4C2EAC6F8E687B1986B87C5C2BCF88E911236
82DEACC6BC4D2B5B4C1CF4A13E00D87D362F6C6CEF01014BE7E3BB8F447967F5
9B0717A0E9D7D594E994DE361EF94120B6E0A547A5C29288C6281C2FB5769918
E9AE6BBF2AEA0C13192DD6199ED1A72516C5DE416C81AA62E613451D8F9B5EB5
43263DFF33058C8F72595BFF83530715356FC036F838E7C946B56E007F02B137
D977E9247114331AD253EEB7235AE5D03796E33BF64E26F06399C582F6D17064
73E006EB26EF7812C9D4BEF7CCEAF4B78C18DA0320065A9BC12569769C9BB6B2
694927CE63DE9F255909F14B865D0F5268BE6FF0377E5539E1D7FAC44EF12D29
54D0AC988E2BFC9EBAB21E34C55B94236B4D05824F9BD00E6D5948B0893D605E
A7122661A891A4C339F57EE95F011FE09CD0F9BC347E34277A022FFBAD0804D7
87DF9694F129D052C0CFD0662D31876DEC0EABCE2CB1359452C0CE16B69C4DD2
7B42365EBCD7819208FAA09B00FFD95685C15777B8D7DBD5E3DE3405EE8D4008
B55FC43FB062D651333D4652884D8E3704A480BF32237117AD4B234438CD0759
9DE6E8FE883B096EE2725B39B45B09F62FD42174CA93FB504DBE67CCD8C942FC
8CAAE97FF7400616666AD4BB85CF85A72830B08A84173DBCB0974A2A2595136C
0F41E08F55345D95CFECDBC7B7D5BAA1CBD235176D6061FD31EB819FC8B71AF3
999D8B4A0A3CC04AF85A984A4E4BE77BE4288AE5AE91B2321694B887F1FD1B30
DF8B46218F09618A6A463A290A2428ADCCCBDBC98F1861311A9F308E887EC120
E8F7FF0D7B76BDF8BD1AE6D9ABDCB305F5A2E40CBEA83A8E315D4F3BF859C3CA
48446A65A3E6C9F594320BF1CA3C03BD972A05C1E42851DEE76CAD7922952C24
8395A22686F5C50E8B3AF797F4D475CC1F0438842223DEE442CF65C5D27EE487
8CDFA449F9AD4A91E9F99DCBE653E8195CF087C12FB267747B504FCE29D1C24C
C61936625A4827B86F3086554A9B09BCAEBD5BE42E2172C1473170FF03D23E39
496EAE43DC3100128F4F2282343644F063CD14646E351F6A65A79C02E5902357
021A3EB8EDAA556A60014BCCC0BA9568917258BC6E7913CFDD88DC154773DEB0
06EC03E511BDD04E3669E541A65EC2A01AF885DC88377E66378F5AF5CD294ED3
B7A6A25FF040E5A3CFDDA5A71F4F5F3B149B56A44BF732F014C3FEC318A2B597
2750EA1FE4F8548178847899F5D72CBC39693171443BE9197A7B081F4E9A41DD
7515BAD38CC0044FE37A33B9210B9860725700E1E421A8219F4CA0C5B96D612B
BBB2D81FBBC136E6E2741062C6C763BF82BCE5BAE99F60FECA82AF6029F33946
FF7C9A809B496D728138CD451E28C787497056A7AF62CCE182B1CEB6F6D885EF
533D9598E2F804C5ED5D6E3AB38D971382DF6818A64F510E10E53236A6474FE8
30D6248648A2E125A258F4FD6787EA43ECEFFBC4629EF837BF6D469B14CB93D1
910740EC3056C2F30B70C74A8569F19A30C85D7671D9A88C5DA2C7726DDC3123
CDDF7ED1E64F154466A997832113E84526DD953F1C76FB44A8E5EE2DD38DECF3
AC610CDDDCDCDB9820487B8DD04632DD0D5A350DC90B615C6CA343B48A90AABE
7C3E018F7CB6467B5918271EE75359FA132894030DAC31F5F3786802C8EB2AC4
1AF2BA8FC74EA586DB04DA75CB69EFDD5400366F17ECC1A46EC6E8350EF7B88D
69C958BE9432559035DEEA97F703BD7398996034AEBA7965E879EC5881CEBF7E
BC3BF231A38EB6A88CE53F73DAAB31CF836DDD71D699BCCB256249B3E5446B56
34A73D22AFA6AFE7290B3F8803484DCB6C286FF22B94B0ED9219A5777EF9A180
1274BB2E17ECBC0EA3CC5FF19422360D78B18CC520AD713547A56941262F75A6
6D4FB9C0AAF593AF4925A64F171FEFEC6CE37D31B44752276929C3FC66384F20
325DD7CD05368DCC2FF452DD57211A9AE8CD16965177491EBBEAB667DA82944B
D9DA3DCDAA2A49AC0CE8FA0339DC2B99AC2A0FB955E10954EDBF74AB31F34640
42E36C8A7D432B5744F02E36493778428B1A344506FB61260111BAE97761CA06
A72BDC709261B1190F9EFA5D1E22B4270134E4363550D6A662D602756BA41192
BCE7668F628DA9D241449A495B63D4E092DCF6BAB4ACE67BA13CD5C2589E8490
9EF30FE6D132905F70E9F17E9A43EE27DE4DDB5EE8EE1F67F5B26BBCB33FB83E
9DCF8A1D0AF307153E4E9D23823D43E650E78759F09BFE3D0E52AAFA0E3D49CD
06E7855FA9E25C1FBDDC97D96DE8E99AA1D5759BFECDECB30CF78C8F2A207268
C89E6D0CA11281B7D168E3E6FE3660DB2C759B7CDFF5E4A28EF2F9CC3F70E137
6817DEF97AAC623CE3B849C5B41E9188AEA06E9273E9DE288D8D14139803DF55
C029F52C26F6CC0E129FA18942DA89F224D14A2B77E04F80EA2CC62735B22088
077E4484E6A12D6FAFC2BC59FD4FFBB6F681B8B2658D23625434F3EE6722D109
6799481AFE38D7901D7153C22A9E5373F8C0C80F39B929EF4958F8815F153ED3
548C8359C80115BD737D9B37E46DC0E63B0B4726BAF19EE8CEBEECAE60D4E52B
F63B48F16E46ECD69DF08DFC07E29DF7A57063F30D76F5E766053595E0D47717
3E8A833359F485B69077EABA3E1FA4100C82D5588079D2612FAECD3F485FB8D8
CD317E90036FB09CDDACDD67B4BB519BCD36FB8B0EA02C88CCA66BAF85F80368
06EF1B8D6738D356E1CCF4EB2C444EC165FFC30BEA8E9C03549E525B11FA7A19
602B4459C9B8FFEF370AE7F10D9BDD86A638EB0272F18C474785E937DD4223BB
FD3FF42AE5F2025E753C0BE4D85FC1DDA3F7A40AA5664A8309CA762F54EFA3A2
DC8D85081FA3FDC72724131DD4C04A80B9776CDF6244AD8EEBBCE4BAD119FDC9
41E0000EDCFC6C649B51B8109EBE54CA97B90BC7BC17A38B677C8F303E018FE0
7CE994FAB2351FE5CB07CE046ACBB1303EAD0D143E0A7C2C7830138F87E98C34
AC520F68B3697B97B84E40A244716CE6C80222A470F714073E3471000AD69DC1
148B964C74493FC58CDA2109BB26D1599A6B14652B5969F1476CB07E1865E2E3
FBAD3BBCD25DA45E3DF75BD3B647D61F6D8F6790AC3E651E2F430C03084363A7
20C2294076061B3130E9D04BCB34CEA0E4E1D0E6CE0F35A079A7BAE1B6831D9E
DE946A1DFAB2C045CC956FCCB81C211C047D0A639194FB3318C637B2BC3DA4EB
2E5128E0E53B29468A062DB414F5B302B6EEEA24DEB99B32769B871D2511801F
B7AFE405F90DC7D5116E98241C1B4F3DCBCCCD34F777C1D433F051EB7CFF683C
1066BF0A7241C6C0DFD1B0D44CD8B81A7D1B100585FB25EBE0079D87C80920D2
40648C947E71FA014606A5E50A2145E29228C49C5BA65EF4D9AEAE348B8DFD6D
B4A44E0423AAEC7836B598B3F8B929D732532CA5EF80437D78F70CE30D1E050C
FA6512440082F62B29CE3D8EB02E3A843AC10D5A0527E1DA6CC616DA0F92505E
8CA7415A12EEAF442D3745344923F05AF4EC1EB7ADA9A0A8128A565C75488508
DD620CCE44B30CAEFE9381DCD2DD86F7324F8D816A7E0481D5628A23A44DEC27
96C7CDB19FC4A98FEC54A8D99B0198F212F7F7C504FF98E7E5A0DF64BCAD6EE1
90F43A5159CBD0D01D3F151F6D91D0A9C256FBBAF71DB31C911650FDA0DB423A
D0B37E16FAF1B2701E36F52CC1714C83576D2A89C08172D9DED1F2DC567A719B
325C98F509E4C26BDB1585D6814AB2BE5A83FBE336D83E272128993D8829D698
1F206529E40A113FE438BB8A63824559991707369BA120C08FAAC418F844B7B0
CD62C51204C2E972A77F4528C2365F9FF6725D387EA83CEEB1098C646026BA38
3092D516A1C4E19F7657CA6CBD15B3ECD2000BF9074548C2210D825B9A5A4E63
5BE26BB204880501CEE0DD6BCCDCA610D46C893D0656560EB6F78CA810AFED7F
FD18A9F1F8553CE41996A6C2FDA106A1F88259A671BAB01A0C521F6D38E69A28
68423F8A5945BD39BC3886AAB31DEC78FDB04DCA8C99783A8D615462A754478D
DC85C79D1544B85E6FB6C40EC89D7C45D335A3D94423D68BFB4FBCDA939E5EC5
C935258A8EEC312575CAF12DE82A2A41A384CA6DF0B142932548627DA249A064
45587B36596FD070A39D99426B785FB33261B96515554A8C6C9D3BCB5BD40CBC
11D603C67CB362159620B4726F62CF944A4BF658282551435806E9EB1775B099
F5C79B16D07FA5417E6E4F9BCE95CB5AA8C15F5995381A0EBFB293605435F29B
D7A8445D88D9659B81A18562390C15447CC914789DF2D5B5FD2BA64DF75A2F6E
18FC57ED9E05212DD511F345AA1461445304F106C8D236E965E3643097404B8C
1D80469036001307FC2F4386D6D7FA06B6FAD58F67AB3515B179D7487107D481
B973FD70F2387B5265FF48A9E23C54615EECE4FAEAD18BEA9456CC2039A02285
01CBC43476E38B6BB8988068260570B288BB057FB21F5335544B371A428C3228
8EE3A8C8C7A8797887C20960D293162F35D7FEA5E72651FEFD2A753FF8E34FD3
664154A728E74A2AD07F4700113FF40738B5AB3E9F7D7C324D9A23F55AC63C34
B86595F6ED3BF7612E12887C41479F8F6DDA37BD902B5E4E1DE45C695462EF77
A48895F67F210DEBD17B12147DAA73A78895CB18D25F32F824B0052F60DB0078
D7B97CDBFE697226C3522F4E2FFC21C8DD61E56CDF5B9B77ACAE0B94B1CE712F
CB86E990AD1C8A03CD9AA34429520920F9578FA91C050D637001F4BBEEA02D38
2FD2B9DBD8A95CB427857D6A37429976971014B53B9FEED6AB5D23B56EFC2291
1A57549721C79BFBEDC19FA35A4272E385355EB87A6D92B92085A5E577D95D7C
AB1654F875578CF9287CD6FB44BFBD8586DCDEF006F1C6401AFAD538D4047FBF
9F6DA504A3A4295C207671767EDE855B520ADF6BA90750D07B960FA30B68F487
73921549FA414403B1222EB635A00FF03F8F394D01A7AC8D429937852857DE31
30FC77D29F611AFC654874EC0F99F1356B64D4D728A7E6678718548D8EC7F7D5
55879FC16394D38CC7E2C9541691383A61C51FD5C5B1121F72DBC567FA843935
D5D70C5F07ED55C02F69BBE2237831E10EEB0D77C52D415E469413576030EB1F
86FC858A26BF914DB602217903FB5A2701F5CF0B9A7569B7D59A680F13FCE77F
72CAD316ED13DF03C9978A54FDD1AE229EB957217C185776F1FA326490527D20
0A18B4B86FD0ABD352CA4828957CC1015A42412B2383C9499209AC1B519849F2
8171AD3B3C96964CAD587A97F5342A554BAFC897B38712BB4512B9DE7A41A159
E1C426D35E454E5F031184C3C185D23DB9FFBD7A253B34BCCE99E121993355F7
A1A155E4D5090ED29E6CD75FF174AC8CF609B9CEB32AB3EAB720751B2F88899B
4AFE6087E6A6BF9C4D90355F977FDF6FCCB8B790459FAA116EA8D6075E5D4A7B
0CA27A442B2F663771176CDFB3A2D65CC2025ABA401AE5A7FC230651EA16A45F
7D3426C0FF76594181BB8AD7FDB610808279A805CC3DF6D8E5C8BFF4D5567E43
52EF83C649EC01687CE5F063095AFC524F4A1A57DB45886F2E2E6784FEFE8288
33B1128A17EF4A4CD214B140CE6A45D4309B6A56E16DA3D73240A3F1A981546B
BE8F055E11D11AFE6B1CF8E815B50A3FE69771F2439D28B97D9FC4BA85CFE585
42455744D341E2011152007984829552221841331936F906A08E6701F8B63A7F
20571AED5B9B09737AD2481F9F1D5976F248806E3EF9487F066A21CE4D380A6D
187DCB18C314E6A1FB70C1133F18CEC64D89C460D1BC6F31DCECE7C5B8C390D6
4D483303C17560B4FF1D23663D90FD994D92F15B32065D93F8B71BC07F0C1544
2CBC3C0A9C77D3FD65D5241CA21BEEF68235158B97A13E153194A6AF56CC0851
E1DE7437558855409439049CB81BF355330CEB451AF3FF8AB4857CA7D0238946
00C1CDA5D57FB7D565281BC251AA6196B270F459A9B217F3AC448D8129361344
D862A5DB8DE145E9B8BDACA159B8217A2FF88E44F1C942BAAF97F45250C2CF12
0A3392B3A3E31D4A12AD65A45EE4DE7FB266E278E557708AD9D6D90D26B4790F
2AD1627CE4E77FBA6E2E05C9A799E3796AA44EAB587554673B00726C894D2222
3916D37A34D451389B703B9A8B1B1774A59497CC141490B4E792C0BAE8389B31
7825C45B94896BC1852491BD9D8EDB56F9E07E0D00E38A7ACDADE2C4AA314529
53FD4913EC28532A2459AB3414F1677A8F90593192B1E6FD045A306861A7D42A
C2B55CB75F6F5E8B85365EA22B4245D425761E50777A321613B2D1E8497CF91E
68D6A9AF9C7A982F456B275EF02E517F759F1E3C36AEBCF687E57CD9DC238DA1
43CE5DD9182C6750BA9F50CD997DC9E9AFCD03DEEEF9475E6050809AD303ECCF
4BA4F0DDF83AF12785547266190E829929B941B17487BADE055129E67AE8E227
05D21206EB896E7CE4050551B0F69909ACDAF5E98FBB4C1BC8A0EEB0929D2658
DD89622D32AE8A393958D2E79A3D641BCE948067BCB5A864966D678BF85D5B3A
66414676F1531CBC12FC5CFBD49E50772CFDCBCE2E90F551BD015925FD44D70F
CACECBF2A22F078139178A8AAC75CC02A4F2533EE3EA6C52D2F78AD523A05D69
A57D7878559945CEF5AE8EF71E06B7A63771DFD924C4EAFB56CC44D3FDF566D4
BD1E08148A869C00168038781865EFFB708E9E373A020AA860D30F7323821EC2
F15A30EA9857F9673742A18C2517D92CE8F14D5B3E532E0222B3EFFBA00A0761
8FEDE2D67D19DFDD833F2677412DE2092B7544695CBD4C45301A69D666E5E97F
969192921312DB17C6DE142E495979439857D6E2B18C0BF172C191BD9B120CF0
DE32CA8F5E7851767001D89188F7AE622876047F80AED6980099601C7A2B74B8
46CC66EB30BAE956DD21397F1106B35D048D5B4F4D54ED1252335F3E20319B4F
BEC8A0107A44CE853E65959232386689484CA3F25057C7F9914E01D0B4D7A43C
8F3B88AFDD9D86B794492A97468394E9738F3E9B413164DD30445A74FA572415
5C713B64DD12BD72C5002FD6CF0C806ECDC8798FFC7D39097E8EC660FCABC45D
5FACF7ABD2EA3FC5E795D2980ECF9066A3CE082F469D25AE10BF24FA5ABEE4C6
1AC5050DC43E433B52B89AF6CAD15065A04776F70BDD9C6CD783200E5A96B21C
9D9C3987FB8405D050FFE369DCDABA3BFAF701ACB249E30129541069039435BC
A97D17EA335AA8D64AB3FC41CE4ED1F057C66E02D0ED02C6215EB4F1402326DD
DD62A177A075AA25AEE89EC3B23AF246768D0322101D8E30086E16F480272B30
A48000B0F3F4FBBB8CD834845A77C744199C9E13D083083ED37AF71CA0FE909E
37C1610C07170F66697B0FA43CDE143C2852CA649D21032A02F7C7FFA74E1F39
20E8481C9742D7E525F8FDDE669749B38C8953CFB5DD35B5B48676F36E5B484A
92AD7A1C0EB6B186F4C518184AF4A580DE893BF04CE7568D9E5C182CA13818D5
C30A8C619D46E705D5749C61F68D6B61D71C14353D3AA01E40382BA0D949775F
59BBFDDE50A5EBDE612015AE7621D5D1F011B85C1EE876051C8D379E825DC447
863355AB482CE972CB7D834C2736756B547AA53F23D19C81822DF8F8B2127460
2C6E9815AF54779C1891C490E67A8EBAF2CC6D44A7313DF7892A374B2553CBB3
B4AE1324819CE85AD51CC78064E58155CD2CC314C980ECEBE64452F82CCFF61F
03F098189BB868EB60E9599D67F29264779F27E1B56DA41EC33B543BEB781330
35B1B94DB9261928274094B4EFE6D86FC90AA3D40E7A5E8FB8B57D9516B89869
7F5E678665969E2310FBA17026C8F99496AF805AD76917CBF4CD9E8F3BE2D110
65B863CD3EA149AA8371AD17B2D06DF72EC86E8BE9DFAAB50FFAF70D1D3EFFFE
94FE6F885FAE84C186BA3DDF8AE1ED35F4F77C7F486C8838FCCFF05F354C236E
1A805AE3654EC62B868A94EE398ACFDC6EDB8F9B3B1C5C102F469B195E96E2F9
9E413A75839F0EFAE108ADFFE3101299310955B579E40A0959E1BFD81EFD022C
F10D1668CDDC6470FE1BA446A07CECE548C02DC167C3677BA8B434EC42810C15
B82ABD77DF32ECB374CDE2E6FC06D4B4144B799DFF1A023CBFED8F1CDA2D49D7
8A0F1152D6838B56C99E8DF740EDA29D627B5B312AAC03B0E0AB9E6EF621CD53
0ABDABAE56FA36D202756CF9BAC63621AB542E17176F11A2F1CCAE56DC052DED
C18A9D657B45B483DAAB40EFC42A8E14A2918E0BFD848B9C47B02D1C286BDF64
EDF83949849700F448F8A3CB5BCF372E85CE84CDE8B07D5341E6A69FE88CB27A
2747CCA53DB392DFA166E63AA0C22CDB46042C720348F8EF003333FC3D73A33C
938AB6947B1DE0CB3C40F79F606678C995E4E50CB06333DB0F482C86FA0A1422
BB30112AE12DC346704608A6D30987120ECD6F76617464C1B105FE32DD69B9EA
9D5C289299B71F496A46D6D6B19325694E05C82D72969D4A4F0E6BCE9541CD7F
DB5AAA0454A33D66BD1ABEF0F58C19D5DC6D385B558FEA63E1C63F2D83AB33B0
7250782BAFDCF229B06F7450E859AB086E7B9F9305F44A866A4A1EB814FCE470
ED9EAA790BBE86744AB0D7D18BB55662927030A8F0D17021E974D98FD25CE540
976CEF9F015D31C4AE041F7E2F34D63E30775B2C9AEC39CBCAB35E3A5C94E6B9
2854951E2C483FFFDCACE8C3A353834A896DE26C6F6B9FB96D0419957F2DFEEB
54012E037E34DF61C3816CA309E7AD882D43084380D8A73FD17735028CD8284E
E3257389D4672D598A934C7B319B80655D68B237D9E846BC895AC197316A5940
5DF93E4599F782276DFF260B51D28DEA720EE6965A143097E3670B3B3DF58BFD
4242A7D37F19D88659F5D7DD219FAA22A3FB9480526C0886423207E6B9CF2CC8
A2FF552F3DC6C7FEFAC4FEBB913F141807651006C7F49498748DCA5CA2A082C7
996EC1833885CF9D60C93F54A3A9E2E128443477755C93F5323C48054E47E323
FB7CD86E8A1D284D1511EFBBA4F9B169C0D311330CFC9AC1D283245352AE615F
2E6807FC701F60ED495572040C6B242CEC7DCD4A3CCC0FA97829E8D675F69424
0354EED7B7683A54672121CE79B1D2187150AB7BEAC4D7CAA462E556A44EE946
65A146919E0FF8DBE5ADDC81AAC4696E34BC0C27CF7E4D1970DB47A6350DD53A
5AA77F714C9E90C90911D2F00A6BAEBF336C924E4E976A21E687C07A7D350ECF
04F6267C9D85E8466EC4260FD128A1BB12C9F74EE5FF7677AD8C7A0E5C0B3FF0
0E04542DE83914E169784E30C5A70D6056D4F7B1B9F1AA89903623DEC8A99D9F
353D40DC35AB4DC72CB54CA41857B7883A5A9DC7D6A33617C049E3786ED7F136
320391FEB8AC5744A913F2CE531A23E9AFCD768EC3852235CDCBF2AA56332710
32BBBAE3F74E1CA4234A0F493A775704CFD2549B0D36ACE1DEC3691CAB63FCD4
0744503F2AEFA77FBBD811CD0385B8B88E51E20968DAC37F360329C9CCF8216C
28772D393999BF7E336F741E9E6AB8EBD63C336C27C1AFB3E941EE07279D969C
5572856E885EC99A4DAF6A10CD27E5AD398B64937C4EF9CD00F25DD526C249CB
F76FAFB5F08E24A683ECD74119E90E4942DAD0DBEAE4DD69977681A7AD005491
E758E2674B5C9096400839BB0A3E585AAE44F1A3EF8A7468466E812B078D21DF
051A4232F7DD4779D87F993F4DC55EC88F7F4EE64C99A807
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSSBX10
%!PS-AdobeFont-1.0: CMSSBX10 003.002
%%Title: CMSSBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSSBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSSBX10 known{/CMSSBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000806 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSSBX10 def
/FontBBox {-71 -250 1099 780 }readonly def
/UniqueID 5000806 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSSBX10.) readonly def
/FullName (CMSSBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 57 /nine put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 68 /D put
dup 69 /E put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2919BE7F4437ED75BF2F7BA7
02F85142A4EADC8C9C7F11ABE2AE2A9DEA79CBF9577DD8627E31D25A7E4DED9E
FBB1C413696C88A07E5C937451D40A9211B29E24C9424635CD4FD6B16FA7D76F
5BA1DF0EC26097EEADD70EAA577531177A26B5017A32675C68052E90E68538DD
E779AB23150FCD1653460CDDCC713599EFA381C3322175809A73447720F6911C
6BFBDC0458C477D2CE69BBAFD05B5C2DA1D2E3E8378A2112066B045243D3D080
DAB211DCC25430973C18E7FC5574A814E3EB79F34FF5197453873C8AC66E47AB
5EA57CB3C8365D5235E7746C8584734F002E9A28C38B0C25E3753D85A1D2F3CA
B8DECFE14A7AFBFB76CF3E91A1E0203FBC8052C2DF967693C9BA0ABE86B5D264
BC345D7954C9523B3E70C4AEBBB0F2D56BAD6D76E095F9390FBE2CD607F3060D
F713ABF47F0FCA5D5C27CBCD4140C668F733F769FF5326917C0AC5D4C72F99BC
5AF4540DB169622644D320872947BCF1D30DA4EA150AA22D6D53777345858DFA
3286EB68314E30EC650C8BCC572D72879E431FB4297AAD6533C8F4802E0B9902
8360C57504D4176C1DE7F57382FF2E2C0A3D5285A061CE91D3149E3096B91076
1E914125CCA8D1C9230B72427990ED4468CE79C11E8F0CB89A3213C535B040E4
0C5784E6D53C96696EE45C87B5E0DAA80D3A06E5759D0676ACF99020DCFC3E8B
50002675B01959500133BC30223C75A54948DD28FA83F399924D4ACBE33F1F2E
D85095A76AF6DD92EAD139A8D5673A35B3633D25EF3B10A40A7E28F329D6E7AD
DBF1DAD1E666931611FB107D1FD3576F11A22B50943C536DC2BA477EBAA52BDB
B65A98268602F26DCA5EC761526CB7F33CB5B345110B7A90E1D078A21E332F78
33A0CF88EBB2CE852384DE3435F7B3564A0AFBB2024F79A633BA5B6EB7CC5389
C43621C82972D60F7DAC71FD9DD38CAAB865D7DE4ABC39D71879BF31549DE649
4B9CD8C149880504E5B34C2153E963B3FEEDA0D59F70E0ADCD24EDBBB8EA961A
90E5AE4ABB26E1AB1757E25572622D5A2541CFFACAB673665C7693855473D78B
847FAD590B657CC0B8289034AFEC3C54FE97B010535F70AF67ECC88E21B077D3
A9C2C52D25CE9714EE430735DB57991AEC946C96B6988B2C85D17C8BC80EA844
3A076618A686040ABCAC347F1B1C14676B05E13C239E99C3A2B63D0388CB50F2
BC119D6F74F70DD96BB5343D5458950070576BD6E319AAF5792EBB9DA5778CA2
58DE0976AEB766DA6A865F09FD6753FB4E7E0E9A06AA1A06C2636AFACF787460
9E73BAFC4A56A99277DCB14F52555EBF6DC5E5785EF7745521FA061227B725B0
7A5BA223D5EE9239A7A1694D4F9EC1132FA23DA44ED0FB0AFD8987A01F9FAE15
ABD485BE098CA7B1AC780A9A02AC58DCF0425D4D110226DC7B5982FE31BB78A1
C0AAF9B712E8D478FC4F85400B5E6D71AA653F9BB2E967A76D02B04887CEB9F0
0EF50A956AF7F790400EBBC07467D9A8BF8BFE8200F8F7EEB5DF3E62A9A332B4
513120FD9F8A93ED683CC47551C629B5313E4E20A207845CC37491ECC3945EE2
71A0C5633B353B03B1A7727D5D9A0478D20D67A981F6E5CD8737548ED4348A91
82F2CE805724A028E346E6B7C542FC69CFC7935E6CF3320ED9701C6127FBDFD3
B20F0DC2D1F92DC69E4FEE57B457E82D5721D932B140CD6DB9BC86B961E7E6A7
5816F42AF937D97C3149DC2AB0054564592448D0CF52427B766FD38E3B040B81
59AA9030CE06A9A9E3A0572A11BDA85531060B75DF8791176CDEC0A9BBF472EE
BD433BCDAB926689B8806CC8044D0925814C1784A41CEA48ABB9AC039485BFA3
026FD30CCE84AC57DF09B1581ED01B3A840AC5E9208465BC160238EECC7A6753
D5B65B159FB08E0DFE4C9F2EF5986352C0E0C4DCA0EE62EE5C19BB6C486FCADE
99D3519723B70B20FACE685ED8D364905EA64A15981B00A6DC06D7B0E3D38FC0
9DDF04221696F7A8F3CC7FDBC25A61D9AAF9F65D3A64BCAC4084CF13BBED7195
6BA4C2445676804C333DA6569E4AB7E6999505DD1988C3E62495DF61B722A6E3
00ECC4EC698E33F7B8225FF591B746E449D2D178880741074D0C3CA740312D21
1F8B0B1A855FCA081AF1E69D14C9131B1769943EA6D5D6210E10BBD9E404B445
FC3E2ADF8C9AB6AC07BC2FC0482515625523C04303F7884283D5CC35A4A6ADAF
59738F3DDDFB51E7134327AC4CA577BAB076F3B588FA3828971FE9D561F46358
24BEC4C7F84D8FFEEAC94E2C632AFA5AED635E867AD362E373CEA718C750B4B6
954A7CB6E4CB2614A4E1C707412B7B09F8969EBD5B6510B66818A2F5AE4EFEE5
9DD7690A3520C477DECB7D61FBE5F84D1C655971FAD7CDA78E695C18908016CA
48B468BB6B43EBE1DDBC49F43B7CD667B4131D7B0C9BB048178A31D0CB70A76F
527DD352F7A9F0F35226117FF305A9DF4AEDF474FCD5C7F31FB06D4B2CC40629
1BE1F40B6347201F84BF35CB5155BC4D2E1DF2A5C7613C27A0EE77BE55A744B6
DF7DA5741AB55F133D518660751B0A91E6BE43B527E9C97E2F06FBEB58DD0215
BF4105DAE1B2A29DB05FA204D0EA6E574C7344C3B3F44092F7F997654D61EA9D
4C811CE6087BA1615A31F8D107DC64F1CFF707234135B728EAA0ABB475E678D8
9200950F24A8A61AE6AA18F34A067849825FB3925A8E01D64E849546FF7F4418
19C0FFC2EEEEBDC7805612F7849BBA7BBD954BFDAF2E6FFE3CA520B79070F8E6
B1509EE0040714C9F5023816250F40FD1C6867F77FC8ADD3A16A3A6275CD6F5A
21BC03274B350EEFA6EE929AE91DEB8D8B309E3B3524807B4562C7758794A8C8
4E3C6EE0C0859AC9B799428EAC242BC4AD9564F2444E3C79F11D4C1D5672DCF3
2E191E25165C77EEA2DB51753ADE07F5E7E748704000265649A2E1DF68909F38
68F0D5F415330C9537A065728D2104C34CE05458AC1B2A53946890DFDD67563A
E044E7AEDA111FCBF431546D410D67602985F6E13988999E46C80A983C7F12A9
FB56C6735454F1E194F63A1B6B21683A281AC6164B3229AE25B1189366C9DDB4
09D1BBC8429AC3D64F8BBFEF1265611E7C2FE1D3A2FE24FBF3ED96A5CBA6FCA7
847F5E3AD4D14C0C77C225588FBD0DA2E960FA3901DA1B46B796121DC804FE82
C382F75AA0495312A80EF9350CE0F80CE0D18316E5D02B7BD78667C2DAABD879
E17D5EB8F274DD2B1BFBC04EA2F72EE5376D01DAA129FE257162BD19D19B13CB
C13181E6DBC12826AFFD87AB152A59D67D0FBBE5D9CADDB1CAA8C27689355AA8
FDC556015E4A9708995E51E46D6D1ED7B68A61625561FB594B9BEF87A1720222
64E4F8A47637705CA32B1B4CA5B8473F1D67FCB7E4041502B7ADA9FA4B16CC6D
282FB636979D3DE7C76F3000ECA08AD6E116B1558FADCA251D67FDEB4607CD3A
84BCA7DF488C97FAA4FC195661D7977A08EF04A7D9A2D619EFC7AE291D7DA633
C6DBCA7DA01EF336E378764F6B4E4D6C517BE05F10BD1FCDB20E5ABA7F65A8FF
17D93CDF1E60787712C40775A5C3808AD05A2F276C94B05E10C6042604F592C8
AF1F25B98A0C78AA7BE1DE9ACF2273965F0795B0D79ED6CE2753FD0FD7B41A18
FB490B06B5467561DFE5161C27F58E48EA5F38A5477C9CD0C2FA13683271E55D
8B08DA0C96BDE97C653B0B18096EE7C0E6BC3894057F14E83A902FAAA4C2AC7A
566A9EB8F9D622476DD4E722F55F28230124F67501866FFE952AE93DF5BBE2D9
4B9CB9955320A9E256E611EA3838ACD9073107936226140ABEE92A096659764C
4ED2485B33E75BEA57CCF19AB9409B684EB14103ABF6811E7A8C0AE0C0C11BBD
87801F3F0260D04A8921FB9EBDA2A2048F4B5C47DF63051A0BA6DDBBD895E0B5
F9F0F3CE62CB118B86AF595F4F34359DABD9EA354798E8561599CB32345A43B5
93B217C43E316BD10BCE1C66A10C9A8041A14570ED7FFDD95AAA76E92EF52042
69F0B8FBE21CA4E37647DDC890D13AF489606195900063DB0CB8D71968C1311A
D56155D2B2382119E603AA85E9ACF1785E4C0ECA137E7E4F5EE7915E8A080509
02FFCD2494DA2D3B2AD27DE5F11684BFFA2366B6C834AE309D8E07F98B7B556C
DF3E0B42559610F1B78C79254AEBD7B0F5B3D7F420BA725AAA91EA20D014334E
8FE221BB02BE7B59FC3D03D8ECBAE21F5E37E4A0352C475F9F29C5D2FCE8CB9F
2A059AC06AD9E6F13C39F2781D7D4B3FC34291D165E5C66C5D01B5AAA2AE8F72
9B3C634FB38FCF35283792048BACA9F7EE6789621D9243B917234405BF194BF5
A4F137680ED10F216076AA2767C1D220AE71EA7393C7E252209B6ABD94213AE9
F61FD2CB3160F41C4328DB8563483E13EEBA83A7935E4AC11A97DB7988585184
6BD3DBB8241EFA1F1DC5CA9C2E16EC1EE12CAF4471FA83605DA85672B34B1F9F
8CDBAB6907D6CAB6DD7E00A7D636EA20961BAC97D1AAF32C8096003E096855B0
EF4845013B9243A29BD509436CA78C6F8DF4F90DDED960A0D12BFDBFCEA539AD
BD4BF883E09542C9D75DCB8A4AE82DB495B0B918D330979F347A76D73B19995F
4039557D337FB55B8C5922F35B354F6C8E4D861A0B66B3D803C9862C9C507404
5EE039245AEDB521E90F83F15E44F42F0802F8DAD6A9BF6176C364286601FC80
E14926FA518CC035337904132AEAB9785361709CA01AB0F352317294B34B2B20
FF88CFBCC8E89863BFA2D3ABB2A596C9D9DEB261CFE48E403F88652150EEDF05
3390F002B2E4B53446FB39C488E3D0D4EF4AE2AD19019710FDE56FE29B58B00F
0A6D5B26B814BF64F13C35EE903FA2190F460F9438924E1D7158704F305E326D
66CB529B3A4836DB0FE383EF989C975A2F603332FFE0748E0D695327CC8D9AB6
E036E0E6409261C30B80977BCC3CFF8FF8A9BCBB889ABE47B0CE3450783E1EC7
1C030CC18E074E01605908C3FB61B78CF4FDCC8E8CB13EB77CE6FF2BFF91D658
51FB05DEDBB20B0E4C5604AE3CE6D41A4C8D71A1F90120B1F90C83989B892253
31D06ABB335DE237CD0CDC91256A54797CBA5E284B6CEA6FAE01F7BEFD905E5E
139D57E163137B5751A765B46A3AE6F653FF2551988CE792011E0548CFAA6ADC
E32B876763AF6F6FD6864E7B55E341C97FFA711913F8A7FBCC1FDCB4CF2F4D3F
17358EBCED45C975F2EFF3FB9F77A22EEE4C9DDE63360DCB2DA2C1AA4BE44BA9
3F9CE6F27631809DBC45643DF7BEFE247E79AA7937C409986500EC1026ABFDB2
6C30E0A4852A6976A73AD7483C36F1717460327BBC05DE729E23D370B78630D1
7E87C99A5C3A3C0FFE204EA81A8A33D7DE80DF3C0EAB557F4E86DDF8E03AD072
61B1D8E1BA05452A6FCA404D9BB8FE9831A367B0AB31041B474DA9536035E7B5
EC83DEF0AE17DCE958DA19869DD51F53D4A4BFCF7CFA635D6F9F882E6F0215A7
0494E76F258D44FF72EB5A1104E8F73AD2F6F2ED337D854B81DF4083E6A2D679
6B5613D76DA2347118CF009E8A88924C2A42B154DF1CEFC93C89DE0ED8DB26CD
8C2EDE2670F494DC591E79DA26CF8B5FB76613296FB1F39AF2001BBDAAB12CF4
3906B4C304CCF1D066524DCF92FF484CC682C2B197CD797056555F318279C3A3
7AD8EA9CB19724AF57EFC6706157A5E2F51F104F6232F252594510E0E4BC872D
D610F4C99BC3ECB668139331216DF1AA8F6358EB90CE1F0B8267B878B19BA7E6
77A53A674E0B029E9142865CB92A1596D5AB97FA12FD05A04369AA00BDCBC2DD
1AECE1A4AD55A93885C626004B41FD277AAE6DF68161F7443EFA7D9C913AF909
970F4C6292A694AF033B953CE37116A2AF2439E482867EE9EE2BFE1093A738DE
24D3C408DD105CE6D7B8967994F7C5CE49FBF61AF135F8F7799E2FEF29A168CD
B2F16F795FB475204FBC41AB78AF87E4E80F992FDCB770A3DC0501AE1D786ED0
449956A1BDC93876934331C24CFE4392AA860A1ACCA39978BA8AB90A2174F5F4
97539772660D3920E1B57E9E0674CD34C9EDA83B6AF1B06B26207FE5D67E75DB
B170F1D01D512CF6D586DABFCA32404253F0A9985A29D46641A81D5A810469C2
8081D7774B3188423822003AEB638F21661E0BA7AAC765CF8321F9677C85A562
88AB1320B3256EA9FE0C67E5B69A5127DC1B13E4062CD0C9ED10AB36CD370105
8FA04F89E3F836B01393F1E9365077A30D8E46B67400DDE8EB0AF8C815729699
469773FC3F0ABCEF752A5768C9DAA1931421214E69053775A238553AB6620E9C
E875223681E60B7F7B25BEFBECDD4FF799ADF34BFB397AA114515E2133304A57
B422E97EB3FC5314F64BAADDFEF9C0EC719A78915B26E7E3F381435563F650EB
7587F11CA3B14875F6B1D817C1EFA0B89C85B888E8391C74D77CBCC6A990C36B
1062D049E20876B40CB030367818A3CD3E2CC354CDCC9A0FBB8DFCF7135FB2E6
A0BB0C3A441CEB8D5FE849AC7299431DEE27CE28B33AB7E836D6958104D1777F
8010546687CCA23DB48E53376A446136F449A92C07102315D4D0A897521313ED
1A3A8456A70C16EAA50A3E67336DC89FEC56AB54A579EF264377A103939D5EE0
0A90B4F20AE1F2511469C34B5984A04D5AB8A162F18DBE4D613BA1C1C85E994F
80AFE3C18A045148018045C63376CDEEFAC53A55DA67D5980E3A99CC1C981FC5
5C25CD0A685E3AA6F8C0B8FAAE157DB91AAA50A2B5F7D8860624F29B8DD87606
C30F84C33D802DD5B95E090BD7AA4400E090DC1913BBC392D7E5E87717AB14C8
A031737560F3D132BAAC0D6DD88C586322804BC2D8C505973F015F7662571FD1
C89CA0281CD48AD84B9ED8D70D240A4EFC2715DBE98E545B987AB64FA259D81F
3F768326717675A3A2E22F4EEEA22A5201797C6D5EC644318CDA28A2C3CCD123
B0159205FD52E1F9A60A69AF7B40C4F7189FDED20EAC3869E5F53F4955CDA0C3
2B06D72EA2B8CA5F0B557E9A36B8E9BE7EEEF96B5EDCA6F79F53F83234B2BD45
6B3D631B1C9CBF7D283F377177C60B3D65ADD945D31458164043A17B8DAC8409
B4261A4A0EB36E18BD104A8E66F45C3AECC07F4E8FA9F3D2A27334F95AB79BF8
06C18D57EA745116DE0B36C12B6F5411A9805218B5A31731CA0A35D9AB6BF5AD
928726A6EA61E0B69FF0F4FDAB2CF5B222FBF9BDF4F89EE47373AA3944678328
1EB230EACCEFF4243D6B4F8797482DAB78C1A053F2800144A4C76BB839E536EA
2D4DCEB625DC0F754EED8BE3FA53A7AC3ED17C92757CCCCDCBE21A9D733291E3
61235172F117D4B8305B45D7728DBB2D71411954EE599B0EE786D7603D61CABA
AB241062BE3776FA150680F9CB8784FC7A94790FBD2922772EE886254B59D0C7
4A4DF7A2C1C4ADA1DBC51CE27D3FFF7F96BC5FF7382864369536BEB2EBA6DE2C
1C427990F6BC84E92CF718BC6D4CE9EC1F2DDEB8637AB1FD673C5BCE1A090146
171717B39B9A83F2DE0B79CB1B836390828B3EB6DC397AADE45B21F55D1A3583
C3A5BA93A4ACC08CCA4DB80B78AEA6002D80C5513A705E7232938D8423FFC72E
1B96313ADB255D43E2676DD2B00B51D116A328164BDA8475741EC234EE6581DE
06162F006405D6D823DC47DDD14536BB530D132975C0C436F08F9243F1A9AD16
898823B8E2739B4428E62CE0E41C291153B7DA3BFD42DFF5A4DE5BF8B86BFF70
F5BDB495EFF99DE8DB9D85A13BF77DF2C4A97A13E4B525245B82998865D5B387
4138C7E049944CA146DA73A2CC89C048FEC738F2BAB854FA378A1CF611A21EE3
DD3BA1A400EE8C4AD035FFADAD4B90F90DEFBD39D68F1405CC37786A223D6073
85E67FC314037C7E13F3D146873CB848F7B16C9D3247E7CBDCCD90E10600663B
161A15DB54D1C7DBB3B3AD271CB5CA98A92163FD90AF07DE1610FF92104A2AC5
D6DC1A665719DAF2D483EA1B294EA5DBF37C940A8F4B3E4DCC91413C3273DAC2
A3FD2C417E80FDB79FB0CA9553B16FA5E8FF48CC39F018729761E5951C372B31
88E10E45B58D0C1205832E2DEF58B5A84083AE200EF64F87DDD91DC6FFFB0682
4C426A71DFA8CEDBE3D94357D87CABD63E5D229BA73D9CB7FF02A992E251526E
FC607364D550859170B4CA391D713F3A00A3687773BD7B1CA1728D0742EC26BF
8D76BFC6862F98FE30F1532A19CAB23BD0E5309AFDBC2590834913958D22575E
85FA48386219FFB6FA3628B1EB9E04DAEA3E3868C24AE38D57B03964580E07F5
A3388A5E1B0E2AC09AFDED0087D8C5096B04A55FF7BBEBFB49F2ACF344FAC82E
17CE6C1BAFD4CD148F1F6AA8BBB60B211C49B659C0CADCF930EE607FB4896AA8
414735E2E80EB89F47825855462AB8A2AC1039802E5EC50615B77E7DCD2B4198
46AE867EC30329196496603B1B584675437908D7A2ADCD9EEAEBD360E05DCF0E
9F525FEB90F68DA499765579571C63F5CB141496EAFDA35DB8AD8BF4E5BE0B9E
86E7E8619FC933C2DE74DABA1712D03FCF0AA027407CDDF832DCA29AE2141310
D876C589431FC2013458911A766FED9CA2AA073D016952B43EC910CAE3BEE6C3
622491AA7F9267FFEE490D2BB31442AD49D449D1F2E4F30D21590C067C6426F2
DCEE97DD5DAC4A8E97A9FD362CB2B509CB655B008DCDE0E52987B2E12B25F794
708830AA2C2C7F98446D701D1D6941892DBEDC52E7B406EE8D4D04E385899919
7B21636353CE7EC9F9CDC31E876F7612019BB39CF3B377F8190CF3241ED2DFD1
0FAB2CD911C0184D0AB24675E06FFD2F8CC8797E079F29BEA4313ACCC73669A9
DC7518A6CD1A055FC7BD60276D02302F89B0985DE5AFA46D94EE071576F4E698
3993F7C75C1A542332773116830BC985A29F7B230B1765B1BB41C4662F0477A0
B34712BFB57E300E3F5F6B8B759A7426B98C6B664401E57D533BF3919C7BC6DF
E800BD79CCEBDB8525FE4E492C05B3C3A9161F68FC8229394CDDA14A90BC133F
FB82125BDB0A844145CA7EFD12BD9FF9B0C5D0EDF71789BFD1AA4AC79D3096C1
872232FF35E37EFB8614138E935A0266A6C3E27FA87F1CF5D8141B755A00B4AA
2B68269C3AFF9D3A6682BB33C33EF6529C35431FE228D9D90E2FF37383E8297F
6F44019F27CBCFF1C4A3199C2B43BABBC38008B6D0B9AB9E4E820B1586E13EFE
D0D5BC47FB11E90735A852B65EF56B16E95E331432C5D4E6634E80132DEA2C05
B832911EF00CF14AF109CD5F140C100C8268AD731E9480B97CB35FB16E8FB5F1
F018DD514CFE0E99B2B06F338FC151A3D5AB18493059043C0B896B3E6E837F94
B3FF93D2D94EA52F2EE88755E1F387FD55793B5FF30D4F5C8E6310DC46B4249C
CAA27E8CA1A7851B0EF17ECE44CBB06D381F12390DB02F61DAE59E2A7E93848C
CBE7B2AB92D412A26B01063C5993B4FF3B1687374D472EB9E26B0356EED287C8
D734876C30A7CEF14D70888868C3F9922E1749E90CF82BB266AA299FC67178BB
644AA21B7758E947A0A4F47147868BFE38CE3FBEC0C156290604B52BAB9CF95D
64F3172A66FCB1217493C34FEEE7DC379EBBDD59D65508C9D2AE4DB6047E8B56
5EBF86E59D184584761BA651600DA7566502AE2A1141065863576D7E306B3365
57F0EEA16EF7C1C0ED5538CF9EFCC3AE3D57DA985385032610D2917DAB9BC3FD
BFAC5738B32ED275E842E862DA4E6E527B244D29067EAEDAD6C5E8F41AB8B572
0E9087B89EC2E9889066CE170E6A4CF93D2D8A18F0DE1E973F4477E3CCFBAB27
98FC0131964B6E46B77E1FC363AD0BA81D1903901353936C3AAD06BB2CCE7F54
855203E4C51D5ADCB94A9D3D1A762782B85E925421CDAF97683249764D4ADABB
C1D4B2BF80BE22E04224A8D6BA633B092304AB2792082296B7D81C230BF700EA
64FDB20D8492011444CC317216B6F631AD6B2CA80C4CC6E2BD5986F737FF6FE8
A96B5712553BD199B8F882C6548C62768CD15DBEBC458ABDCC793E1AA624F0A0
6568EDCB965A2C977587F1CE129C2F4B796FD7F7DF34A6E5CFAF53CA4F645029
7B80245C841BD7BFB0DE058974823C45AFBE510437133C65461554305C32F4B0
68E69D44D7B8BD799F97BFED8EE83B258DB8582238DBA71F9CDE25DEFE01BA0E
B3942BED2C7608125316898636F67FDDAF50687D9115655A81EC3729CD6E8B72
235F9E0E5B81D0AB7442EE8A2B5002638520F0F1783BF5199A5949F1F91F1FAF
7FD962E249FC2F1392F71ED1A6A150E26F6710F779CF3E42609E5C76108D1C7A
F3E1E27F40959196D59583E693070627361FA9837C78C09CD90765FCFB97EC55
18E6E681066F6F9EFB3B38824AD68ECFBA9EDB8FF0ED64C747E37743CFFCD7C2
C6B5C8346C1F5B3DB0B3842B4EEECA6D363508793392BC8C98911EE44EF49191
654E245CB03BF998EE68FF27FAEA695B1955B78C0CD5DECD3F174CD806A4CD2F
220003459CFBFB0622FF806E0BC05607885E03F59EAEC23A9901632AD17C2E17
4639B592E34008B58B831A17C5846E08739C47D4326B09DD5DEAF792E62CCBAE
89DE94DBB1BF1EF361610320850DE7C117D8E67C209AC262A09D67B52B46F461
8FF21EE6384ECA19923FB35D23F74C67E31B37BE857A0262CC2342F902BCDBDB
1E3209E81F5AD633D2F9C617F20C3E7B99E3064FEC68361BBA47F572DAA8CD53
CA1A0D815706C5BC1974A6B232C688DB22800FBB9CB116502165B470083EB7CE
F2355771CA2AF9FEF64CF75C839561BBFC0D8DD3D1CA41F145F9A67CA97D2239
220D0F8A676B928A8846E2660DB8A96596F35DB689EEBC32EFB8179B006B9FC5
8F008FF5B292660514FF0F3683014AAC4079D8D00E1469AB0F0606300638B7B8
3F522326199523D40425AFDF464FC585CB3D62A1C3363C92159FF040F169EAB8
4990501920C5BF7EEAC26F44E94272090D0908CED12DA03844098254D3DDC05A
08CFC70C8D183219B22262ED5ED38ACF5AA897FB59A5467B5CA7F69714EA1E00
35F01F710F91F10DE7B10F5E228624D134F58BE39E26313CCF04D832CB1D25D9
54DB121F5A312F14C058E1F7B648B393EF78630594ECE3D6B9D688C8B9112F46
1F92E9DA75C7EB8AD5CBF040C59271CE30A70C0BC942E1AFF9A3E03397B2094A
B86DF83135B7A59CE10F081EEE46D613792D142F3D57AB5E34F05EA999B7FA57
4D51AD467BACBC82EF4D0B6EC20574DBEC23153F8A225B71D1E584E312B5057B
222DE3D2DBF1B4B5BA868FF5BA69367F86B2C87857A156D467EE3C32114D14F9
5FE590B09B9A7ABBDFB69C8A652410BE27D5ED40076B5B16A2927981905B3795
9479AD202F220C098D7E1E823D872E78AE38E0A67089265C176F441BB8809609
91ACFD3019E236F937A7D6C7A81BB76C03CBC4C6514902005174B161014E2317
E3EA82F36B0027977D6B375FF35903AED8400BE1C170BECBFDD5C11B8BB54CDB
CCB729CB60F4A4DBD71E3945C6B9880EA7028E44345C7ADCC13F56E2C5688ED7
38787764D6A43E1AD2C9F4FB84FF2E0A1D02915C753667887237A2C5958EBC66
6412789C03D37D5822891E41E8CE6279E40707382416DF4B3C28A9638C099309
977C8DFF1A287DA34E50C1AE78098FDDF5F618CCC80DD5326F494EC693EA4B84
8D19F16A472D391F3CFDD72D2B4BF3CC3DF494ECFE348972A190277F0F08CFDA
7DC96F2574164C09374709C706D9AEADEDEAE8FD846058DB5B5E2699393611B9
2A7A7A776D82B8CCC5B647F3B89B2F6EE1C8BA262F4563B5A866D85BB8740B8C
1A4EADC4C7E1E585D3F0D3EA68E1850EC8231D390110ECF81F82EAB627C39D75
F308269976B0D23EA2547B512B8FDDA8BD03144C2A775091654CD5EA83256A9D
EF7E07B1EB141101E75BD9C98C57ADEF1366B8C7A9D7104A1CFB3998C3420D5E
5F55AB58BF55A67872F3A9FE96D8564D0A075A2A2510DF5FA812735FE85448A5
C3CF596D90B488ECED4FEBF004AE28720F44876C77A081CE336B931A884A410C
7A4C6C4F2855248EB0541FE5C8E179DA10C137AC1E8124B59ACA51A1C9802F68
F88426CD463EE25B2883E35355432DB0F7A102D89E196C36C7730FDB33B54B38
984E6BB98B9E55D15B528E98223485B56A9456474606B11420173A610B15CD27
8A09B21688CC0EE4514C998E1C5BF955B0E8ACAE3777DC9D5DFAB362D4EC4A47
B99894797205D4AE6103FCA256AEA3748C6F51171A57694B8DA7519311CF5626
18DDF89E1D0E707710277A86DEFB192BE1F671EC8BD3F50940BC989FDB6400F5
069568606D6A522632D89F00D284FD95D0C877A83F34984E1E2E872EE063320B
4023FBC253CB247FD3EDCCA78004C28FB88350D763209ED75EC752E6534DF36B
47A6CAA037D3244660810830A37B5F5DDE4A3D6084F57155EB117809A800D883
0437ADAA8C86E3106BD1D62F5BA0C8EFF61EB05533771C6E94D4173D151DFDCA
94F4E887AC5754B1F714B966EB78912997CA3FECF4F087592C932EC1930AC2A9
3022DFA3AE1796D9BAA75E56B1285AADBF225E604CD0ACB022CB89F5E36112C8
D1A532FA01C0C0AFC8D6AD6F0A59F3CCE03693742CB3E367C6422D4922149E8E
255894EEDEE92C6A1B295467A3C6F45E1CD805457439C9C17A9047D37BE6F83E
3771C3B9FCD5544122F4AC7902675FBD40F97634E963C9796ABA5A05408D4D5A
17973D2B4949C4C8307FB623BB09EF053859BD7A2AB2BC9E9850F6031B486A01
FC7936C25C93C0330807762110927B84D030BF5314D15C261A3AEB18C37E47DC
4613242F32B6C34A025994B7CCCE74943DB83F328CFA2F6ECECA1DAA534AAE82
6D9FA83F64543F7AADF7ED0B1915C5B46D66B71E3CB6F7EECF3DB49AFD40564F
4EC9F306B80247AE0CE7E452CA768C3FE8BF311D7B50DF95864EECB1C93FEC37
7445D11BC84CB0B3C6B73C04F1F80A61EE24CB8BBFE752DD630B9E59F0B754C1
B35A411B6F08A5FABC9D9FF7CE41F842D26AAB54EB3434BB4B797BB6A4BF28D9
D2E1AE6FEFA21C92C3DF9D83D0A9F7BBD3ABEA0106440717CC52B17733E83437
9B3477DA75074A1C6CA454F923CE7A4C0EB81E66C71A63D982169EFD4D3F281F
7479830E88E7F228FD1BD3CFE342A0789ECCED9B5859EC4B382F7048ABA4BE4A
EACE4F9FAD7AB977C120B182C998B0C35B11F0DD88522B69A63E69C161EACAD0
1C718898D3B3B6EE37A44AA656289304F0560AA1ADA21CED20D04294F352E538
4B7FA530B0B43AEE3C9E0BE286E4247EFB4FCDFF6A7F639C6D051C6A9441D177
D400AC7E5836257C19E3C931904E86A7B0C387C57C95284498E4FFE504401B76
BF4630229204A4D05E084ADB5B9E45F6BA52C3B8BD6183076DF507E4DBB557CB
366044B207D5F41FA30445EF095D439F4F4AA872010A8318B71E7BA00884E0EF
602575E83E7DCB845464B37E752A7EBEFD63B6D1366CA90DB9AE009CA30EA842
FFAC1019EEBEF540DF77C10E3BE2F115D5C1260AB1BBE52205171CA71B5E5BCD
114DBE2500A55A7711BB2BA2B1F80A56A3B3721F5A20464A27FFD141397A58A7
05D89A7F6A41B24B05A50820DF1D8FE287F191BACB4D175EF28DF2E926A3DB53
DBDEF8986D4ED4B9716FB96984BA7C55F4C6A5F7CB3317AEB71FDF314D724E87
D20AB7FCF44B2FE9B0C0E53323501E5C0E07838E0D553E7E84B15385FADE8DD2
9CF05673E399FA72BEBEF323939981D0353ACB438C8EE02EA12D19751F4A1020
283AFE25EF1CB7DC68443C83520813696512ED96E785F0EFCB37272D4729B68E
8134DCB4E9ACF55D1DA4EF2BDC984DD56AF050BA4B92270B099D001064559634
173E1B5462F73E2EDE2ABFF1103A5D5C60A0B544570BAAC57456E0FE0CF114F0
C92F08700548B9064B279582CA3D88EC4F5C2BF7A81D80B7ECAF2B413DCC6355
9867CF404CE5B799DF6FCE4A70CC22C83C735CED16E6908E8D00F2A6E8A2151B
FECC55E14C102E85A7FAAF519D51CB2F7F4C0719A8450C53BA99873FDB841462
5B5BFF2A8C61402A4CCD0E92F10D8B36F9F6B76376B8ED0EDA0368B6C86AF179
6BCCEA095BCB1A5A28D1E4F630F43B1E4E41ECFB47FEFE041FFDA607BA87DCFC
2144BB3D405569727A78B1483E8FC4C638EBBD4CD258A88C6E71517FC9C335E2
5F539347E32419DBDD066EDDBC0BC43E39489842072FF75E4D1155F4DB926F6F
97DEB10E3D6C09523540E2D482D9600C07C324E366E2B0389BDF73FB4825CCD8
0BFAA011EE01DD25B6BDFA38B4D3263417A539B69BDE16A040AD23B6E2F348AC
207E68AAE35674BAB0690C47D99A012440BBC77B846A8ED78D7813599B0BDC25
99D2B55B941FE366201985B993479D45C56D909AD7F44039502F038B524BB4B5
B41BDE5ED6FDA9DF18708ADBB33EB5486C466A4B6D5207233BE625F72AB7A335
67501B6BCA5323B724A4157C8779CEFDB7905887256E910E40C2E63F4334E278
FDC919FD31451ECD620DCBBA9737787A9BE68C7ED49F0B3B6E8C2A82B9A5CB1C
A49AC2CE93063BEB77942E6CB6D3030FED44B4AA71B043FC606377FD6361F390
6ADB606C0F8ABE30333E17065D0587B95D2EFA7169255232A12E9EF18719A9CA
D98BA1839F168361D8DE5C0637A4FB01C65A6AB0623716F838D907EEA94B8633
1A4BD224A1520705DD463901B9A06F3F9818076FD72BADB6F27DF178B080BD82
C24290327521C1E3AB378231F2E13BC128FE6CE93C051E5C5C232B60CA93A38E
1032479185DF616D79C0E4B01A6834B4F5D981DAE477D46D14B875C38D99F982
9FE6F88A5D215BDBD6528B8D9550506F0AA25234974732FFA38C3434A435768B
04CC8988A42F9D9636CC06BA7A3406AD882DF968FD60A65E9D7BEEB1F0A43AAB
E5B7F43B41F4941FBC2FB63C543747D5AF7FA29010D8A24CD8A5ED804CF9A763
36A050CAEC5D06EB5E0F798D138D52F99519AF8CCD806AA94A6BB8048AF1F0FD
463DBE6D278112EA7D5548545E961908AFEB860ABC13B8DEED7538893490F9D2
4A6CF9C3315FEADC753C6265F62F512ABB64EA74718DC49E0C210753C972EFE3
856923B2C5F615B0F8C81FFEF734F4097AC0AF787A274ABCB0EB4547F2FDFDD1
B4174B4593D18D5A1B8D033F276FEDF55AAF60A0767CA23CD496F11C51BDFD9F
0DFA50BB75CEBD5006A9960491393F142B13B4F52BC5B951648A2DBC1C7F1B23
26F31CAF13F883372870EF70CF36C0A11963CF21FDCE92EA394245F9086798AE
D0549E4AB0E76482F80AF46C6F67639F2039B3225A2804508D2C3EA10F2B4D00
B175A0FB40F449976515D940AF6D12AC1F89F13488D9A233F7BF98D7492D6DF1
B2A048AF9C96D827F07D379F1F3757E311B7FFA2836BE4FEE7BFB5438579BC07
B902CF2B3B6E953274ABEC8D23F0E8D93BBD5DA50B629E2D680BF9A39F03748F
C55EDAF82C1461350E4FD2ED2FEFC52C110DA55C67ACEF6EF56952ACD3A498F5
D0E26C2AB5239A7596DD0E92581D0C579BF41EADEA7ABEB89E4F29A5D2C51683
634F4E671CC1A92D26DA81DC8411B80C734AAEBEB1BCF37492A12D67D2C6EC69
00498FADFA6BD19E87D7CA4E282B3AB28777F41199C6B54A7F6068FC57C7D5B0
23C04702A671A71931B2941D0837C59974B3B770BA1174F55AA11AF64E13E4EF
177761FDD49BDF629720BA293CA8BB1886FB354E1B767071E146A3CC434271C1
4E9C80E2B0958C0A0E002CF6C10CD4B3A911E0972EB2AF6D16D180EB65D6A163
785C42D2C746A98157B2C6AF4E54373ABC59A25A18C5372217474A53345AE3F4
4F0E4DAA32F02AE37593B3827582A99077C9FA1EAE555C667C19639E5EF0E5AC
BAB828FE98570CED410A56F457109E60B34D839CBF7779D90884A8B9A0875BB4
21AB307DDD3B4B78FE7AAFEBFEDC3D63A69685FF793E23AEC076996577D9D6CC
F49E56D8BB67903D86F43517A7E26D043300B9624A0CD2C612F071D00061FE64
450FDAD64780AF7100A6ADCFBB0B9788768B1D980491ECD197C38E6C31B5C99D
786726A52ABF48A9FCD978F0C8539F50256D87F89E74B38C4E3E1B38DD5140E7
BADD348D9B047A88ECFA2324CBA12AD8902C2219481F2E2EE602720C093AEEE5
ADFDE6511AEB9EF29242A4FE07E4A4134358BA09F95D77753A72DE49681B383A
A52EA06695BC9C5446845127FFD528BC33A866144DBA400B6E393486C69C130E
35A88CB52AC5633988BD2E280DFA5455303F0FB2518A5B1DD52BC9BC548373DB
BCCA97D34E46BFF59867CFBCE7B74A048C0FAD24794EA125C26D00BD9A6E4A62
F6D4FD3B92478428851BE27910AFF924FC35E1AF7FD7BDE38DE00B4C7D4C714A
29B1BC7F1EDC67217BF8AC2148900EC9CBF3A03283BE32C9F7EC73A34EE4088F
534642D491E9247C5558F1967EFCEBA99097C6B8C2DFE9C864392C9A8C8460F7
683B2CBC53A27F04ADD96A4326825D0BDB3A322DA040B556DB4AB57D9A3E7D05
A4074329C4A08613375CFFA6EA9B249C151BB22296DBA88C87B993C075C05EE2
3E5DBEB93BFD6BB6CAD6EE6A6F7D926CB740E6F1804219C967C42E3DDBE7EA24
F308890D53425311CE13B2EE793DB8A570372A370981CEEC4B5E3153E5EB3A77
1D3A7EFD82E66BC02878AF5BB253F360A0400C795F2B43B4440AEF57D1413910
73E2DDB39A2C79EAB8A99703B0372A82A08FC67ECD69D4389FA27218DAE31DE0
EC3B29D402EE30558079A07CDDF8A403DC9C2AAB888219F6137AFD0B3ADB567F
59AB18C8F60F1DD3452B0CF067E7DAA583060E06952C5B0DAD39ABB4DD9BA94D
44DC352833D14BBA3B624E94ED4021D20F6914A4D58421D20D8C7C3B0CE2AD26
9116421CC22AF4C9CBA21F074E436FF35D8CDD46D28EB78F04042D7CFCC28076
888B184E6B626748254386810F64E5E0EA7A715D85253F2DCD9CE48901333A01
708318811C775309F77C380D049AC5B592BB190C1F0C4DA4A69D949DEF73A4B5
7E543B09CE4F97CC708E411505910645941884ED5AE3FF0C961207C32C913D21
2A573C2A05DB23B7F670304AC6FD1A0C8618E45FF406FFC84FB8F9F9B4BA8E75
C93B88C67CD89A2CB37C80851476D76942B3D2A086F3D6201CEA9A5334413312
84AFDB6F9F7753A45FBADE6AB8E8BA8F1271CB0C52B23257F947E76344A16328
D71EB36D93FE7CB2A26776608393B3862755D6699D1CE5C53E72852838C02D43
4D2905B6B885D2A3836D7EA0C6971C2DD03973AAC3F3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTI12
%!PS-AdobeFont-1.0: CMTI12 003.002
%%Title: CMTI12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI12 known{/CMTI12 findfont dup/UniqueID known{dup
/UniqueID get 5000829 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI12 def
/FontBBox {-36 -251 1103 750 }readonly def
/UniqueID 5000829 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI12.) readonly def
/FullName (CMTI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 68 /D put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 80 /P put
dup 97 /a put
dup 98 /b put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C5E0311AE44B83C3E
4FBCDB0B74ABB18FDD877252FD3501E05E597A77D142BED9940318B98D508672
4ECF79C43A857674E4DCF2556325CA8CC1C432E54543F706987376A084BF512F
0E4C517917FB1D607C83E479DD094240C3F309A57561CDF8496722F1D3EBF6FA
45CD3D7D810E2C07D39BFE08C0A25FD568DD37C2D182E5D30A7B2855BAD24559
D455B29B1F723BE1C4F827D72B1156DC2C1EEA76C9B27733FBB23ED36F61919B
4A6E8253C8C05F3D4BDC64B99B8494F7C37E9C19DB6A9CA8E9B0F9E7E3346EE0
EF416016CEE932E53A26599DD8CD09D77DF591A9D532AAD3E321CDCB28636809
E61D9EC969F2E27190A475407B90211902429778103D18665A681B0DD51F6E92
58D1288E2AB3FAEF05854938FEFFD3B4F376AAD303ECD28B23649E5D4C3CB85A
5C9CDCD1853BBF3282BCB5CF57720C6CF7AE468048D7AE5BCD2F15DEC1B33B5F
9917BF69BB64261CF101BB47A09E47D6508250374D00ACEC3E3FE8C5330AD9DB
9D9F60CC170F2FD6DEA12DA24CEA846E25ED6683A213E4FFD0BA239894C920B0
EFF562ED994A7A46F8EE2AF98F88317E513A06AB82A629979AAD3ACE316E7074
01EAD920A9E1D54E8FBD623773429C58A2964B498990E8420E5F7A45B3D4342C
1AC109FA67D4BF33C9D1E0E2973BB8B2495DDF5A7F8E306A0C712BD7A7FC98C7
44B26D102D3CD44A320FE89CBA6B3AB39627DA4679A5BB7C27276B34ED66260F
DEB659189A797BC41D05323454CA4600A6D840CA3C1DC31BB7FEE8DE367B8177
3F1546C9EA98FA9F7CD61F177CEC2950526D54A6E7A0038F2B20609E7BE31EFB
51FDB6829852937071FEAAA3A0E51E625D7FBF2F7C224467C7DB77F7AFE006A5
418CF691841AB7A9923506845BFE066769A01A51EA48840E898FC6FF0ED9C2A6
1DB61E8840029ED92A129D38CAFAD4084B17679A84A262D2F9376363D4B5E46B
1C94302E5CD24CBE93A27319A8F79138414B2E94CE6F78C6F06B544D5862C2C6
297EFE524BBEF0CC2C32F63CDCE433E19B52BF0C2C7064E3ACD429E2466BB85A
ED82C6EDC8AF5D75855B43A61504128F75C2DAF7F5C4405BE36C136CB809DF31
A40E0DEE80C10F6E6442CDCEDEF8DD0C01FB2C035A1D136693D366552862A421
81A290080EB8A3C5160FC2CD760A69F8254E8B0EC8E7280EC33802EC2668C149
73CADCFBD4E56A1E7A9CDA3F6A50E00AA536B02B4BBF4CE60B7A791098C3E434
B5A7F17D6E461FEE23C6C8C148C54D14345DECB7A619E56268131F65F86C51B0
E45860D46A1A798134AB3283BC8B73D9B39EC5D0C1241A85AA46B02E51DE6433
60BEAC76351AB35D8DBFD60C6F12F8B32E08C671E0269174E1E142E687B1C558
5668FDA480255261DC29288FF5ED56B50DD8512BD4948F31F14C71CB4F8FEFEC
DD8E4F4EBE9C28312640334BE454634EF26B5FD02A93210D487AA4F3AF284479
303995AD31F4A6DD2C2DCDED3380D50EA1D8743A3C6561CBF4DE91634374DE87
FED0CF17C73B49060648AC6AF2921D19FFE1B7C7E76AA84600078A0160160D5B
BFAA2007AE70640698BBBFEBFA5C11F351610023F563840413AF6934156D93B6
551069D681492EE73D480D648503801A921E37868B4ABBB013B628772DAC3683
3E44C318352E7700094ED0FF624AE560D2A783343B266FB925AE0D990B65F8E4
7A9725F23F0A08EFA08F81616A5D51E5EC31CD1BA229A89AB63ED782A6D716C7
1F00BA66A3158CDEAE3399653D7A29193760AD92F65C066A4DF35F91BDE771B1
74E17E4879428B5692343AA963A349064693B52F14B09C5F4B329C4AF4078998
D3F6C1046538F989C8AE84AE032A112C3E657907EE7A844B14C6A0FA8C9A1CD9
797E195186C478057525CBCCAA0FFB09F67F97E69BC402F6199B6900D9F285E6
47D359B1728728770C95B1A85E22D2132FDE7075F8FA1123F62504E53AB106D7
99B33689D55D0BC0C552745C5129CEF9F874850240FA6BF5F4779E35BF15A8F9
F425ED40480C60FE3ED85173E620320A462092834C0BCF6EFF9F1D5912CEB941
9C18D8EED5CA36CF2C7D3965BB0929EDBF7FC997A9CFE79A9FA9C54A11E1F421
7F3FA4ABB80A3C60E9165DBFB0EA765BD21846FD1260F1AA4644CBE05CEC736E
638311023F9F51F4C0166733A32BC1F615C8D9256E44BE8C2FFEC45B7B612FCB
21C52DB57E87EC8E166498AA8A4528B7C612E3BB8117D6BAF5CA8F9D038C1430
B7EA8699F31ACDC03774AEDDF6B73233944A1A89ECBAED2EFBD30DDF42821846
AF828EC54BEA6E7312B3255A7F55783C5D4AF1D9780A9670C9C7E02A50535A13
6D957F895D53E4E18A4B4263695DF2BD9626E717D5C3B80E908E59EF5D093798
7215550A5613AB86D67C1F89C95FBB0E6ACCAAB397479D483AEE4607E111EF34
2FD92DC7F991B6AE84BC7CB982D819A17022ECFEFFB981A6F678655A6278825F
0EFB5733C5F46529EF1FBB01C6BA7413BA9211251C0A70A470F735A96F6E0D45
DB1342D6B97ABC234790D346C74927F5C910F71918D615CA907984F0229E3F54
4F5F75AFF784C7A470DDCFFC308ADF6EF43979DD3B54C6A8DF3B53DB783B81E3
9C57413C3A317419C190F207720743084DC20288C1AD08B8B0FD4ED805FBA8B5
BB874DCE4AE93AE3B8A117612787DA6C8C7512191BC36F6D8AA38F39099474AE
CD570CB5570BBA932C9C7A63DD386CABF1956FF87C266BF145ED5D27547234BD
943841047FE9A41C24B82FD3D3EA49A56C56840B1B359FB2A3F28E10AB09AECA
2FE2520DEE9B5542591E72ACE610DA4BF31C6E204574DC78033008F019519B2F
E45C99F1B938D212602E824CA1CA020211420C77FF545DF586702451B0923EDA
CA15BFF98CF2F0A56404591E57F7C89CAC6D22E0FEF9094770CF003801E5CC08
110B272A50805F89C0BB5C2966B9385C26F4A5008AAD97A29408A5116BE613CD
5ED9F85D2BCDE96FCF3121D5EE1D455A4CB03BF2AC33493FEEBEB955EF737F7A
EABF96C137DD84B3EA39C61CE95B5967405CEF17D9CF1BDD1199346F95E77CB8
5FA2D38D858DAEF10D0DD660211C8C4C69EF58B60DEDE48DF76300EAB8F0A547
6DBC87BEE8DD4EDFE3020BA56F362503AFA62D8C13BB270C3884560E227AFABB
5D810B2B092531A679485FCFFB88BA8313646B644A35C413053DECCD4B371450
18F54701F610E52E727AE8D25A8093B60093FAF775B6414F66F43F517488B4A4
00AA4F672A34A73531218601904A7F50A045E80CD804D028EAFF506EDA1ED998
ECF16435C6CA8E203F2A813506F4B8CDAC0A3D69F4B704AB80F170EC87B7C732
AEFCBA3BF4050A9CFADB87F7AD4B53BECE197C10A2E84571A640328B90E9A294
73F6CDDE4F4AF9F1F3A257BD130454CF95D390ECA95FC4221D5041E71D65FC21
8323BA5A3335E2E905E33D5BA56BBBC9CC30D25764A066D013B116E693C56762
4F683F112A572C2C04ED041CF7BB4FAB0D899B3F2679B431E8993A650184CB4B
1B391B39929AF803F868245A69C964B560A274B07DFCB88A6508082DD6092E38
80D9187A146B60B225CA22F593AA6B4B7EE1EE41A0D375C4FA69EC6C8E02B54F
B855D385C973A7223DE22465D039D213315C35F0D079E8CD030F62993495B2EB
A0F9BA98565F89D2E09BB60D90B0CFFFF1F0845810ED27CC8F1088F74D48A30D
7FA0728498E78A381B0169B7678520EB5769522BB5838212D32C8C1ED5635753
EAA3C14E6640BC34D43EC162711996E0CABBBDE0932FCB6B2838C22C0E42DCE7
1BC85E372F24C1145655D59CCD50EA6E1A673CB0342BB744A43EA1B9104CF736
324E367D82ED67E01B0608294A91386045C1564E4E417E1A62EFBC148C0B4A56
73A98AE2F2433164740B839F851F9C38124B3C01CD976128DF6A06FEFE14B960
4573E748370D70F9FBFDBF875584852E70264766FA5CE893F74D0D5884889178
078CB149821A743D797E9577A7D27E7ED607349CB2CC6968A7CE402DF9A55069
4A985B517B714C603F993944CC64083DE3D5F969F9C5913C297E8493D310CA42
795C94740A5E5D3415CE7B4A5AA11A940D93992329D8B00213244405BBE73958
37CD65B6AEBCCB2263B937F671FFF3C6314D400983E5AEB6A34709D854FDD0AA
3D27A62BB23E253E6E2CA994294009B857B5F1FFB66E772A0BF9D83F4F72B89F
51B125AC9E495343C9D84A4BB4759DA4D2ADA38A195C7905CE288FD8634ED996
9068F0DC8DD08F3D3A1288A271E7F7EC4AF76EF6A78C47BAD95FA14A3AB690E1
19A13639774593D77FC1610D7F1E25A31AF94C5354B35500B8E57B0F65AC82C2
2A519581B587F5E3C941734A4269842D38F74E89C2AADB8ADB3D16542B0485BF
BD4F1EDB4064E96A330D735F73789614C8D606DC553A0A2409CF4C595AE51505
CF203817971BD7F9B3346C036A18FECA44CE1C2042BA4E7FFA3FFEB6371A06F9
30082F47FE87B207E13A68BCA122968AD74CF6A12EF6767988F0EB0CB64981C9
30D9717F6C7D07F4B37CFDD68EE4480C0CA305AFA4BD21DFE131D6715E839973
E1271BF576F70C2F8C6827B3EF02CCA123EA46A02B2722E06078C3D9B3743CDE
45B43B561743264277D0D1FCACDDA80E5C6185E90F82D1DA4DC076B6BE49D2BE
F03EF513F1861CF66D2B7F8D52C7A5C21DF1276B72CC1CDAAB5A16D20722A95F
8B1EB6E6B605D3878831204A0EFC95CB3C5B588D4F0A540D466D13B8468ECDC1
DB08D36E7FA19709A67A0FA08421053EEC9068ED464D29BB1BEDD0BA88882707
9F41334C3BD3F995321711B6ABDE3C12A8907F930F7AF490D774A05398ED03D6
789D91B4DACEA3D8EE11C2CD850A6EF4128B60EDE9BD37710F43836EF6D53FD2
D8123F81EC6F01A93A8B36FAE49692E7276F7CDCCB09F332ECE359E3E7DB2364
A60B192438FD158B18CB3EB40FD28F74A740367F02D5CB6B53959A0D11BDF388
9AAEE02F0E96AE2F802FF08BF778F26DBBAC8F5AA04CF3AEB180235BFDE493DA
4D0B13E0B61696A8ACE4FF7A09956A1896B2875E5B2BDBA09DA08B9589957E85
51084D76A00FB728E286CCFD2F53088158005599835B18F6F5AAAA6051270AF2
59F7BF641B0AF4E79F4491725189B89E57CD10B442B8EF89345D04EE3E18EC98
217D81FFB1B473B9562605F7B0AC3FA8CFB798A988E5FF20F068A6B2399C71B8
2E3C19E58601B0AD3872170B0AE8FA33F3A50EC5E67EC22C00D3DDDCD7B592E1
0D1CF31DAA48D10F7C6A56CA052A5AE914EE08CEE011FFF20D00B46A7738C434
D70F1040C611168D2C1851DBA89DA526428E6D5DDA244AA267AE3559B0C7DC8F
AAE1687F823CE628AAD59999E74DFFACCF7D3412B466F6C3A315D8AA3350FB18
9EBE417717C42F3201D19E1870A2A3424E96F1A9734F32E85DF220E08C4DDF8A
AE6F3491A3C805578924F36C146CBAF1D38C8C18D18E5A9B38236BD3E6B9E5BA
595F66A2A8DE9F52C9DFE00ABA5B99806A87D2EA39EF2C3A8D94FBFCB0CB5345
9AC36328B89AA13E4BBFAD70314009B0A2588847B7092C9EB938DD069CFA3679
73D9CF01F9756B931B34E70F4A5F1C41FC577515A5CDC49FE2C9A13D62E7E612
2AA5969248241BEAEEA5CAD34154EF5F9153D85ACD6FBD6B7F2834BC65C77E27
5ED803220949B14126BFAAC7728CAE16EF205F408232C5D7B83AFDB9C2191997
38005204EF424640DE1163B577274FB455EC0383BC6CC17F35112AB638743DEF
9954A5B2DF6A50DAA8662967E8E2208A9D1E3506309A9EC4C001CF91896E79A1
F3F6FE998DDF7C7971707CF7DF7415F6D42EE28620C0A225A1B9E389F397F972
552E566F748613EA1FD417CAA7B90A2BEC1AB07F44BB8AB6ED829F2D7F4DD597
989617E6BEF5E701498823382DEFC2D5FD078DF888DDCA99E62890AC0E5BE8BE
0CB662B561A49D2221847151D203457C797A904BCB5A1D68A51EEA20A167047C
36FF0FDD999E46C857864D1CE7568CE9518230418124EE5E51FD96C0FD8EB7BC
2A49F49AD72BB71F849B112147271000A77F41CF476AD687E6BC3DFDDE0CDE1D
ABE816BF31348D25FE0A11FE7F5559BEDFC24A14F91BB73BE7F5FA95DA24D705
3DA96E8D05B84A1E5BFB0F15D7D4638CE4C63B74404128CF56A016180EAA054B
85FEE6937681557D0B5BC3C560947D456F48D7F4CB7A5EED52B103281B152E3F
ADCE8B98497B74B05096AABA261D2A2EF56572904ACE2866C6A081C926BAC3E0
DE02EBB63FA29197B3812809F08A9E3D5ECFFF751E60F7082749F57352040E06
CAF9290336395684E85FA2446FBF1D0223F74B0D3464B06975010B83D0975181
3DB6C0E2967CFBDAFBD555018305184953487AFAE112D36E696DB8A18F3E3A74
C8B123F16D077DBBC85A226A26D406F622858EB7F1646BC0093A7C9711A1DCD2
6302B0611AC20A3870195D8BBA4E8E4F2CC73030B2354308CF8C06D68DD7FA14
87CE9D6FC7A8A356AA2DC356231B4993655A0FF55AF67090E2947C2B7FB9E96C
EAAF52A01ABA6D69B738D6E3D4B2CF1E037D991EB5943BB0E6AB3868138CBF20
A112805F4CC00C65A4BE86D7492C23E34CC0BEEFAA0403E2AC21FD33D7A7FD09
9DCAC0BE550881647B322FE5806735FD993F5ED7C62173AB29095F67A626B9F3
20829E4788786C978B4BC9BAB9B3A750F130F9D4AFDA6EA3A7DF09D7615951D1
0C783A653F0BBFC23902019BA276A6D7944F1A34C1EC7E2710091C0B94CC3938
01C50C5E4A9C19F47D69074023F574D7A7302565EF9920A8E2A5076E6E3DDD2F
409CF1AB8BCE348FE63A136E03A520DDACA32571675AEB94D761B7B625AF1626
8BA9ED761E12A52C511890DAF1F790857C3C9FD3FD033A8330CD8E19266FE888
76AB1F3B3C8BA1FFCF3A6CA570290FC1640B6C4231D8346BD346E647D138B2B7
F7861E2C7C7C4431E3E91E318BA1DF8338AD4EB4AC104EBE7AAD8F5A09E6AB3A
48B9EB51A85277B221E3A22AAF38219B681918DBBB2F77FA8AA27F310159C763
A6E66D93879B592289B919B425FD7A367B7820FF430100E1EAE0877F84326FCF
5F1DD99964BC6BEB63528D2B218CCE41024EA2CE703959071A65EDE99127EFB8
0CC01566E5E52DB32D01512383A7711C7770AE17A71E5D95629642AA79CD5F01
D37FC89696F25C2EE4DD70DBDECEFA4FA2CD5D2F8ACE75937D2B1FEC7A31A893
16D314D800AFD3EA28068983A2ED3A7C75A5570F30A2824A47D6A789AC554C3C
A78C2DE9771B86F73C66EF8E1D0FD046DD4F19A31EEAEE04D5F38B73C623F326
F146C7164C9B18B5EED2113363092ADE0ABF0D7BD4C10BE9766F81C34878B236
1A0FD6D8AB4BC7E3C01F1C880C3A9186E4006210D22EB64CD7690FDA750EAE7E
C87A9D29128D49082578ECC0BC977D91E9CBB1ECC0D3527DC0ACAB39402015F1
B067FC5E7705586D97E81F8911FC2BC8E7C077384AAD4DDDEDBEF65CA4B75F6E
39E41528CF53CADA928537D557B518BB740593A6E4D0100ACBF126FF20888342
A0D3D7C201C4CDE8CBF59A1BA4F924E4EBC3E02883D5FDF2C8249AD8117332E1
BB52D2F621115C0F98037D4962EFAC0FA86B14F3C046A1F7085E40E99C0F2841
8B2C299411F9DC8FA0C8C7E5D7822A10D31D881F6C47B6C47CFA943FF9A9F5E8
D5F1C3E6CCFA324059B942FBA2C6D0E9A3D080DA0CD80D8DF76B0FB6BB706F45
C84054E62F75294ED126A95DBB4FA2D09EF80D1F2C507DF980D3DD2BFA3DBF49
6A99DCC954BE39E51507B12ECDD92C397E82B1E979FBFCE731CDDAE1D9147448
8C312DF818A0E08266A2B60C9C0902AE64276F7A1C6D7BB2EDCCB2E3B7659B13
AEA47A527FB302716624B48AB754218E2E3D99115C606CBC90B5EF73B9F99439
6184472986249C8D8E52A404FE76E17FF814D5BDCA95AC580B44DAE8C593939C
9E7C0ED996B9D2B8118F71BC2F0EBBEA6D7E18FC7CCDC78BF05A034BE39DF9EE
C6BDAE8886C7058B15DABA55E85757137873AE811F25AC7EE3A0CCB8649F6095
7249EDD95E20DF06719DE1E109E5BEFC2A4098E77020110C37A90B5BDBF09654
0F72A7AA528BB009E0FC966D03BF5EC2AB2F109FB09BABE1DE6A9F210B590563
EA94F930201F1676F3D23805CB9620828E3A3B42E9FC4459744013528BFB0E0C
F46A06EA698545C376603E34B998965C47F537F260EB79FA98C230E7ED5D4E50
9039E8A40DA24A30CB183C5CDCF006E69D4F02BE5C215D48178A2457F9D730EE
6938E1BA8AA780B544FD555E35E0E849F7EAB85D41FC56BBAF1D5853A06437EB
67132D3877B5E9635D9C8B937E62FEB6CA192C6358670B2DEB844850C6FD866E
BE3346E4A11DB7767AADFF79080BC9F474F46C7238DBF4A11E5C2E29957788C1
882FB59389791B16AEDF904C7D8B1BB5B7E82A3B5F5D0D13A0DDE5010E3F9D02
6FA0DE17222951840DE5A9582CA9C77407BA2F7D129727D2E465E597FF1153BB
2648B012B093303CE5D77844FDA84DCAA26638142A32F0E944DF7FD4FC9611B8
5A4BF2E81C1FFFADD6ED298E18E2ACD86FE1CB8CD1E0A4A14E151A9CF9F8FB4F
BCB718875E9D8FB720806EBAB3A5764FD364AA45CA53BCE87E52E46BCE967C1B
6B42AC8B3BBE47CC5BF39145317BF67CD706FF40A395914A2E20F8DB00CC1819
76AB3AF9D073BC08F71C5BFB4DC4912B1DC69E7423C4109209C62630334E830C
144FC799F4D2354BF418B8F3093E1812FAD574152B6F88D5CEDFFB171E3D7434
6D1DE1540CE6172E9B004E390E0D06B73C611533754143A2BBDEC834A8FF79CF
9D262F52E9151ED5B46E3230939520E958AF1CDB0386674F20E3887BAB0101CD
A69D5E1CC86E1D7E70845999EDA7DDB342C1EB61C73A276C9C06BC08F49B25CA
928F480716260119CFDC9D03420529C30C989A9C26543FC5162624BAEA58E35D
9FB8500A7B8C903BA5B3787825B0706AF667AFA7C9214825540B01B38640BB89
458AA979498FBC5FA57D392D4286A303F735215DEF4CDED049FA63294BF2234D
92C330B796C87C4C7DB10DBC8203B1A1A35E08710992E4FCB9C2AE1962C54543
D5A194D2E23CA72E8D442E7D6E6C46D73AF907027895E59F65472442273B7613
7614FD3DD3A2C4A4B81A152D5D7B8681377A60698E8958850C8161261F9ECF58
48238F8E9A9BE294D984E1B164EBBE11DFCA7686462F3F436C8231A5B934D78B
6531878E20FEB9F843F3F698B53B030A41C35D531C8081A9B4525D1B687C0551
297BF4D46FA779EDC3BC741BDEF11A8DEC3E22C2F58E97E1B8CA579A3C9CD7B3
047205D5403C92C668559CE149C31F4D189C8AC48750F029FD5FBCED45C24FAD
7C7A61EC61AECE8F46F4A7A0942EACC26C5E09B7D7B99F4ACF1579266B3D6E8D
0D1022C02CA90E8315DD6E87DE34F6235CB0B7EAA1ADDE0802200D4142C444F3
644B7C1835EFFE3FF9BC22D0B8F1CC40160924A47DE2804BF26560B50F38EED8
D0DBD04AB79F44DCD695DC3EE5A5FD2C9D9795E1FC792D2BE1C39ED47351E942
6B7884065A359A7C5A1E53ECB62E49D3EB8D5BB3EF85620BED3B32B9768B0327
9E2E559079C27FC457F9E55D45E29D79429F0B4FE812546785E27A43E9EFBBC3
49755163808CAD1D94EB5B45A2EF4050AE0AECF35D7BCB4E39F54FD921440A0A
62DF9A6A8FC2FEA95F9E2B5E97AF78777FFF91CF06259E47E5C223AD702067A5
F2E7A9FFCC8D9BF6CAA38D7994491F0EEFC7ABC0121BC5201D97020B93F61A91
B60E642288C97221C0D0661D1D9FA83CB0FBC201FDBC119BF2751665C511BA25
4770A2BAEC269510F2660E94CA2F51FE5ECB0BB0D95208D102D96B9AEB40B779
7FAAB526375E59FB17F821D067FF0BA66B73937243046073D03F165942BD1168
F32678769FA047DA54C8AFAFB5D37FF8B6CE113E2EAD9AF030746F9BAB3F71F4
C563F73DF908B4495F833A0AF817AFB9AE0A62D0D0B5EF46FA39594721E11AFE
15C09F27945EA9F4D14C888BA1BF1482FE669853AFBAF74749D7CB58B2887995
DF3F16E2B5BAF960D1AFA7E5DE06145A917CCFA5300050E6F01914267A103FAA
9A06428DEDF3640B813F9E578F29FD9D0211D65D08B2911A62DA6459C6BE8C0E
393A535D6258B89B391B46B91BAF0C9D12A4FB00F7632783C183C814D623F690
D2D3565A638E7AA9B3670F77EB1E31A9091A6E981048D3C05211B9F342E9AD43
D4101ADA1C5E9A489E38C86F7E65A633C225E1F34E68CB16394F94C3156C9E83
72312547C0721466AA8F71ADA57AE95A3B0467AE621E4A89F805864F6AC05622
95460ACB323B2C0EC12FFDF4F635A0C5D90A074FB827992AFC271AE59B211610
20FDE265FE5A908CC7A1424C03BFFFC100B97E39FD9E22A118F77433D434E1A7
4F6020767117C216C23AF9AA9289951060892E11B9A4CB9AC684EB292AE56FE7
6585722024B673A5522BCAD666753A3A95B393550BE25E8F6DEA900627B1F76B
AF86BD4D7003120424A610992E2813F8F028CAE00DF98D5B5F1C8583E5A482F4
9176C3BD6C08C510A80D6C8FD0EB86E31EBBDFADAE45AD65843CE987EE92131B
A636AB0B13725EC4224FA1C0E53E24DE23D0FB31D6996A9F2D3C8154C63616BD
82927763DD11E9BF325C166388689759871DDD6B51897BE0EBDEB6C5A0E9FEE0
FB855979B5D287EBA04B45D00ADCEE23FFDF5A7BE7D10EA7D651D211D1F5BBE0
E64DA36359B6AA3CE56638CD6B46B0C75D79E3A917E9F3D11E4CEE1F25E41FB2
17361FF3AA6D7008988532123EF3767CAAEABE7F7B70D3DC2367A7E77A1B70AD
D48579FB1953E99B2B89629EBA8B0F5537D40A5ADE52957AA132457823FC0D93
0A6292AAF4B891AC725BA544E10675321C54562939A9DD6F98C9AFBDC63AAAC8
1DC036E120594EC4BB6BB55F2130A5AAFDEFDACF1978A149BBA498987DE08497
053266E46F8B9DEBA5BE3700905ABE4D2BEC2E6E32BE390175194444A3BC6109
A7B9CD7A3DFF15A01F38D0244D3267354D5582342C39C6B6FA247C44C924A879
A0805F5219EFBB01F11BE5748C81E49BE39A1DB76DEEF8E4C6BD6A12A1D7273E
ADA2BFF3DFEC0DB42532102C79352F3B059C63CE393BA886699B01D7AB695A98
9BE752A31D5052E9E236F9C4251A6D8E6834A3DAF7A7FAFC665D72F7C6BD1B9B
1CCB1D5CE6CBCA300E8D57EA3FCEC2EB5361109675E87B3425FAA06EC57187D9
1C8D9FE1420785C8CB33C422D2F82E0397770A64D24E107AC160E06EAC28BB8E
6E167B8DE718196AE79B008CBAD433942FCF1DCE3D569A0655DFA17EF75DCE10
C6A8350955811DC6B18D6546AACB5A50F05F709513306D4752AD339FF8987468
A21F1F3DD2B66990C21971CDFE9C0B1C8992AD0123B27947CB31336E00CAEB42
8AC310244F3646515C53946341C2BEED37B65E85E4F1855F7BCF70EB812D7780
0328920DD39989709C5CEB1D15DF8A1737C5F97B38D78F1220C08930E6C4AB5B
EEEEB81E5E1B70EFBCDF8383ED2F837088DF0F42DF3301B978811D5EAB3E79BC
142744974712A21996A2B6601ED26E56A831FE70524FE5CB6B8C5F7AF8EF1587
93E92A3B18313880BAECA6E08892E25E9BC80FE6357B81AC10C0106922AACB5A
15669BF74DF9E6BCEBCEEBAE16B5BD8E124D25A87AD26E8B77116517496934B4
57BE9E681D344BC9DA61776AD528824951EB161191C0BD9F392D44D333689818
13511247D2C435DBFC69FE121EC4131BF2B30F9B7F5DD154BFD2D644F2A363FF
9E1819E301E2A097A39AD5F06338111101327B4D32DA79886D2A5A1579A8F163
957F1173341D743BE1223BE426B878EF35F9CE4C0ABEABCC269B08EE426BC7A8
DDD4747CEFADDDCCBB56AC86C8E36BFB8F5B6B0D3FC69F6E4F5EAC73C2E2F82D
1DC842E12A3B2FDE4844966FFAC4E71CB6F7B5FCF4127FC0F5245DCAF643339F
C63A949259C2A0E02242AC00619C4B880BF4C045D70D7D0B64C0073E97D52076
3F6484AB5ED012C951DA2A232359141DEC2FF2F625F90A36AACC8A8954AB5062
4A2B7511D4E69C53C8C9DCCC07407A1131E1AEE19671772C28C6ED45C726F487
DAD61E6A6E590B5484ED96FA9642EE891031B2B490DC28FC8F6C2183569F249E
E052E2886921D27DE109E1B044852D111E1963A7DDE525F38C29104BA0CF082A
3AF8C556CF047D7ED93BA537D8398BCBB59EC5734A5967954ABF3F21248FC856
F66364E9F650CF173E7DD8EE0912F380A2FA389728487E6551C58AE1428D5941
65CEF9F097727E728F6272977836D28756D41E910D5F6CD040168633408F546A
5FFB64DA054F7D5A08EB5C7166684CE5E3B620B1FD4216983C885F2AFBDE09E2
2A0823B4D85A44939730195C346B815807E09DC9045B0781AA3CBEFD4BBD5719
0F80CF9464FB7EFD48BE8448FB7E695D8C71C8E8ABF883865C8C796A1EEA08FE
146BDC7F8A384341DBE814422C4DE77D69FA2849D2D732A06B22BB58509F260D
FF2312DF6CAC2E9E7CFC16788D2D3F0B6EDF505EBFD66A4BE90FF169830A6BE7
008FC1B1EA14428FB8718D458117E76E84FD4A472B4D7F54508B53AA490EA7F5
7D77FEB5E62CA34686392CAED8D93A6888C435BD29FF54EF9E33CB05FF9E529F
0998D0E55E99A595EF350134368CD98A92A64AE7F4411AC0740E46FD897306A9
2F2BBF85567BD944906FC2CFFDFAA090C44EE31D89680E967D24C3E00706DBDC
DB77BBF111F653756617DEA058A08D6BBAAF55D7E1E178E057F5584C247D5CAB
DDFD09E446D5EA9D6C2304224420432CFEFDFED5AAEE2BA421C693B9C4961EED
01167829075F9D79DFC22E47A2E0F50047FD47DC33A4A34D392C6B572037233C
F31D4F89C65D80B89AE8352DAD748E664ABF38FCFE2DE44EF169A7D77CE6F852
9573DF50C743FBCC1728132F00A1ECB4C9BE1E682DF5CE0AA730347135054EF5
1171B1B3918E4C7B49C36511BFD9F1DE94FC4C24C2412BFFB48EDA3119F2F1E9
6C941EAD3C22E84B7F6294A2426C88869D9664FD119BDB75DA2C5D850C223409
E04A34170B6BA077D0BC9B3EA55008E7A547989C5F21BDCFF5813ACFF26176ED
BB2069AB881F630EF0A4754B61EBB08E0418F27095D3380F65A4921D2DCE2F58
0EC0ABD2330AF284834AD383D516AD39FFC2F489EDF2434A88D44D05D3A59DA2
21BDE91EC97C3DD3142691E25F989D5250434B2A888C9461AEAD4FCFF3DF6F9C
4413D1A60EAA03C3B5EE0B09E865DBB4B140E45DB733A68C3C4ECE63E6996337
2A916AE2ABC7DC5090DA84A77AC0ADBE695FE319E3D529CD00F99A004E3AFB19
EABBCAB412F3B42E4D9AC589031EABDC1E4FABC250B48A3B7414205614DE399E
0C56B0F7BD3C2DF8FAD798E04C78EAFB64266F32BA63414321A68F769CC98FCB
9C75867092BEE82F5C68E88C9336CB4C4549742ACC4F4D2D59AE65B625764396
661320C8C23CD705BC4777DB5B57E235F98C5B9633B67381851E3A29E2E7E640
D6B0B126AF6ECB83FACDECC8394A1FB4E2E75A10A293223B94A56BE8E7B0056A
F494BC373DC576BD36FFAF88DC77C96E98606233CD4BDA65F5A5D1134E117D38
C827F8D99BFD1977898AE37EAA09E8DF32B770C84F7FB8EBE69F8B4775B26607
F07684FEA48A4EA0FFBEEB21A4A7C98B2FB1ECB2B346A7653EECD30C067B0569
6F1B4813D807611E5066F77460F2151EA953C9412F7859F53CE62E5980D0E6C9
387986D750FE214370D9D435D275B691319B1B30C213CA73E7D7352693470C7A
81DE12196133AE8E96A6E533CA3F2733A31CADD94DA5D4FF6B1BCF4C797719C1
A352F917BDDCC0C521B2C50B422A6D03EB17880042494F9B5AF8F38924C60CAF
808FD2A86CF8431A3A288A6709ABFA45189804155AB3331BED942AA45E5B3180
1701C69C5EA48D178A4259754E5C5110C563D1FE2E4981DCE737BA30D9C14974
15C2A1A68676930F7C0D9867603FCBF458D3D69B81927ADAF1FFC0011DA395DA
166A4E3DA4CB112FCDD3F9375BD7649C2C441287FE0C2EB0D7CE8772A829741E
EC252F695FF6F3B8AE35FEC97DA08CD808C24FCF45383A9AB40FBD90B4E0BEF8
0A28FD0E92022474607E2A073E37CF15E87821FE49B018EF21B2B264D9BB9BAC
9951FD3EF633C79607FEC7BBC2E532649EE56FBD01F2765CF57CF24781114E33
90C5D0E2B5E2417FCCB009A77B69B3873A43277DAF9DA8320962F390CDAEFCE9
DC852CE804C96FF834C068C0B330677A9034BA985034576E969F726978AE5287
3D37D215EF7CD0547B04CC054CA8BFA720F87E6184F3E41290EAA3B7003926DF
2157D05DD1CD37F2A02D9B8F8D83BF1E4AF89319F6B06BC19BA81CED2758C166
AE979A16B3F218FBBCB41AFF69E424758AED5B50411DA82374FFB96D60FA570A
393D90041E369B2C4B870B99B4627B0F912B18E882A408BA785F88C5F05F730E
4CF7A70B6641045ED758B5697EF3F23C308056216EBEF06992F5E3FC7C569DC1
1C8F60C38FDB1529D49B7E0D2AD66526F9642AF98983F583073FF4EFD899F852
EFFC66ADC8C375DDAFE21DEECEE1CAF4C025FFEF614F3D05C8F61EE2066644E5
B67FB3EB0D5656E9469C2D5F303621EEB1ED9FACE4841150C13AE2499A8B99E0
33109207516DBF3405281E59CB4A545C517ADB0360E4BAA72A1092CDD127EB2C
7724F97C9DD11EB85D8FBDDA4D48B7F9DECFFB0DC9E9DCF88A83BAC044FA3884
6C3175CFC9ADF19DAB17F9858F3C908DF3A77602A8459A86FA70D6D19DEC7498
EB9E9CD63AAD419834229EB0E7A2897E69408B69F0DDEDF64D18B21DACE89D8A
3D7AA13D659001EC52B5D3D98965F0678006D071F6407692620DE7F47E8FEDD5
A6D41604C75ECDD9F6A67F5E70D19F90848CB6C3DD8B03F573601873E29C3F8A
EE37A53CD06A1D18DCEBF65D1C0076C86952C0DE87BE8874BB72401E9EC9A8E8
D67CB75A14320151D2951B588266BF43F7CD4EF741A75BC0A66E558796AFE86E
F5969EAB68A00939BA0C6271D1D81A771CB8C6B624E1685A43BA042873645BB9
63DCAF99AD0B463BAA0AB860413B2A4C791531F176204D4AAA696A2782A79704
611DB6DEF69BBD197DF760C25D9BF4CFCBBEDF6CDE36D9FEE22C14581F646AF5
85C2BFC72A2F5743259F6F023C4ECB82D0BC48D3716E3070579DBA049FB63812
57782B3C2F70DB0B9D326F1E7DCFE91B188E6C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 33 /exclam put
dup 34 /quotedblright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD10B4729E5749A10EDBE644886443D1249
2C8517DF8D8AE98E2882439FA81903941B363A7D885F93C6DF9E1FD89F2F8CEE
B870C409ED13E78B4C914813B0A01DF8F876EDCC4F384055FD37C575726AD69F
F23D50EC5BEE2FB95A44F2B2E2DD94C933D90BED2C97B53738B4B2ED56EBE617
BEF17B9DF4F314A37F10FDE34C570D7BE76A496A58242F51E7321380CB042424
855F4B53071DF5A0DA5A31B8AAF9FB4F4C491625FF8FD008BD4402918043BEDF
77B840B2BE0DAAB4EF904FFEF935954AFB9BD2041241B1BC8519EB642C89E288
479664226DBB6F1171F9EEBC7E1273D0CABCF6B1BF7F26AF21C21D9B1B916F4F
603DDB68D3614B86566FC91D67AC3F4A4A96E256FA1A3BD35F4465AE4EC64D82
34BEB4BBDDCEEBD9A89D932E55F14CA277683F279A4429B2939059D1893FB106
F1D448AE5E4C701A416692E7C0EDBF299DB408B7B0B38F672C78E76128411F6F
62DAD20DA98A3CBB9BA472B6A9415F94AF74610ED1EB9045A2B52A1914040B14
69E70AB0073D6C92F24B1D59B05C81BE2AD99D3ED86668487ED31BD3A28222BE
66F462F417FC15EE79D98B2F15FFA7271DF32E0B88FF15EED28A636809D1C712
D6A9B8D4344AE230E06954DA9032B1333396FD545000E364E7E6A79BD8A403E5
0F8CD6A2E4D13A42A5C45F3E3AB381C369EF591C48CF27CB5DDEFA1DD5D3611B
DD489D925CA229DB410742EB127441F4B6AD29C2AD58FE632E01BFC732E99A53
FAE0A25995BECDFD0353655C34FFDC52737F0165D8345BD37D96218F26282369
D01B049ED5955EB269FF8E725A79E7E5120F911D26FDB4C7A675F202487188A7
BAFAD3270635A182E82998A2695FCA8526BB20DDFA42B8B7A99CD03BDC2AC35A
A2CB73748ECEFF58FE0FBAAA7523628FE96F015474C93B1DFD20D54984F61A42
558D65D985E4D5FF713903853B66C2E5682DA716B05A65B7782C3B32C02CA912
5AA09D579E58EFDDFE71632C1F0DE74F09722F59D86FFE4215E41F37FA015286
4BE7EA5B517E5331BE0254292465D2D899C2A120C4759F953F03A37C772A3DFB
D5BEB5EB683AE59A4A3B90EE6AD37F383FD0BFBC1508FBCE413C07CC76DDFBE8
615A4D066E47468F57D79041B69F4435DC12710E884911F452C339E3FF422315
84805688C232D2CCD09E81AF06482B4328D45EEFF8F44F5AE4A7BC74E7A8E8E4
45FD98201ECD2D38796FAB8E7F3C78D26C89F1A55E0A830A411EBE698F64C112
22832CB5B997DA5A31B8AAF9FB4F4E22D84054599448EA77982CDE016339D9E7
8D0CB57D7CEC60FDDA6FA0437B9C40B23A37DFAB7F41D9DA081133B7CBC27472
9C142A7803BCC95D2469B40B3D872207EC5F5F673D32FD2FABE8AB73E68516B5
714E25B540CFD10C045215C334AA5FBC519416317B8151B6435405255184A6B5
4F2F0CFCDBB2199A8DC08CAA7C3CCD30D01A188FE10A825C38C92E5FA445897A
B88D05FC6DE3E42B053DFA51F0A495337AE8CF47ADF11B8FE226AE94AE2AD4AC
0320EA84941031B1E8176BDF68261DC400897B7D2D3808E9D4AB856B9CBC75EE
EF8D77DCFD4CD6F5A57F0F302A83B960B624C72D86913A3221AE9CE1E7A23159
16800C801F8773BAEE0CF615967F7F4DECD492A0214408BDD7D6BA0BDFB13866
7D5D69AFF5AE45476130C3F6646E2E858EA2D21B5AA5D6AC95603B2FBFB59DFA
497020F57D55612AF91A19C55CCA6ADE38B085522ED01E3580DDD6AAA4A5F222
848FBBE62E1079FD4BF4FE2DEF5C8F72AEC944F1873D042998E607A891E5DFE6
A27F8CA87D97FB65F5317B98B4DFB7F802AEB5CD937B60978AE0D5C9426E2405
1B2CAF4126501FB987EF947CFBC8BE111593FD6463784B62E682D64D67B315C4
556EA67D8E71E73CD14B200DF449FB9D09F917E5CA703C7E9579A274E3990DF2
5D88067CCECFDBFE75F52D2032C9155B72EEBF0C3E801B71695085C8F697EED9
E8994E35A543B4CC878DC642AF1D72BD2D398BE3C3E16F89A591338DE5C961B3
AA70A4A7D434785938FAF7DE4C02B929B4E8A52BFD265773A5E86A17A4190D02
CDD229749F777687ED8E8879C26149F64F24022206670A2BB62DA3D8642F1E1C
9F38AE9A61C6A3ED2CA064517546F0599F0977CFA15D0C9BBD91885B2ACE689B
F5C70519CCA3CD9ADD55A04D362503CB2528C8CB78A48EA4F3378FF330328CD4
2207B93B56459F1022363D7F93308CC9DC0E2BF00C7B0D2048F56159B2A302B8
01CBA297C940491A4DCF54441D2E2D255D74926A13A7BE787CEDC79A480AD6CE
5925909FD73ADF91D562642BAC2D53944F47E4AC0282271F5A3265A4718DD16B
CDF768640FB271BA917998B40D1F95EF9CAC30822D4AF6E9B50724C67557B49B
9378E431EBCBBD0149BC294A9A29640874F1BC354D3CBDBF84092C9ABE53C544
DE8C78050E31FC4EF0234B6B50333C6AA68D7557A78417E677C1AC919DC489CF
112C663A5F4DB97A6836374EB7584F372B11CD509490AF9AD1CF857AAF3BA249
0664A1016CF09CD3684B90E9FA25639CFDADABB2692B9886E9FDCAC2756E95C1
9E24C0B8B0BC7CA75EBA4593D5CD0B3A818DB9D51A80D39F1B836E50FD156D03
BD12FF9B399DB1AF4B228360673772EF124299AC7887521332BCCB55239DA49D
23EC2BB5EE74761F7EB57C16A763CFC9BE67E7CF119C1F1C69E91AB943E13710
2DC4B721D0DE19C80384B80765EE5690BC5C2E1D8C2C4506ED22372FC9AD355E
97B5B994A0E1FC2DC8AE60D565F519DD4924475D4619111181991F755B2DBA4B
D7EE7159C5E8945B1AF5A33CBA9310BCC8F7C23446D01DD1D65C1D50D791DB75
EB33CCDF1DC4CD54AFA074607EB7FA8FEBF0203CAABAFA063BFEE2915E522C46
8C4529613B24B543241875C14EA3366EB36E57CD92CE36BD9B00FA61A579FD73
672EB6DEC89A9FA5772BD7C4CD819EE077FD3ADA7DEE0A77B0065171CF099A98
02C0E5BFDF26EF89AB428832B7FD2E0A483928FFCE6C27A74D40CE5E663A6F3D
E81E47827D97A857A30F4474201FE75AE9541576B6ECE3E267062E32F4ED1B59
F70E372172B206FD75D56690F7B9C778247BA227A03C996908499357E68D64ED
D6B844ABD02FD2031714CBB8EF011768F1C9B22732A826C8C1B277C4778AF880
7317592B2A96DB3E491C62E50F6D7F8459AC97D824B8D0462B9C428DEC23A2B1
7C29A6BB0B22DE9D6DE379E358B5C7D82FE866AC5DEC8FF6C7CCEA8E66E55BAC
B3C737A5C7CCD52C16F3FEDED9E891EDAC170100B37CDD0C6F6D84DD3B711E97
6BC9C60C8E1FC7692ACD662779BF9273B7F4B866696C0C6E37D3CD6F30C7BC1E
5F7AD6A316244DEA6F428ECE9BA632E5F1C4339519910900DEF856C4BDA4233B
707DB0036C9DC7F68C1936D5A12D93DDA4218476E84A34D02447AD2B3B5EA404
31A79B31D99ED2CEDD1F7989AF542DEA1E4DF9D3999F4AE58671187FC42E9C48
14FD77EC0C2D3AAD49BDAAF8846E1DCBC08B40C7895D5DE5D69CCE1CB06363EB
36E7FCE3C125DC8FDEAF158B62BB900BF6383105A5A218342C18B77BE75E2725
5EFC2423976FD70454252D35EC5F35D5AD07C4CF813F9906274E18FFD4367963
EFE10A46BB662A0348E70A97A46A89D64E626B5CED0623606D4604B8221F0C70
0201215FB1E15AD32326E59E27952649426FBD46FBBEB443AEDD72B66B8DFF75
7D05048CCF86D9C2503E26F73FF3123E5BB8ACC107D8B722419A9C1F8EBE3307
4B5DEDCBEF64FEB4F057940A637CDFF9E3FD95D8002D55E77AB46A81DDCA5F7D
A80BD5CB11FEFC480BCBFDBAC428DDBE132DBB21AA7C04D6ED9CC0F9FA743598
1715F0A3E2F9C310DC6C3DFBEB4E1D1C5ECFA2D9AE13FA389CF21CD6C7110B2D
FE8BADD01B58B8684AA0C7C72324E4F7774FBD896843C02A9DD231B40A5DC30F
0189BA4936B63757743043EBEA32B094585589363F8D082AC5C1C042F1D8BB2B
8F25CEB0D5E7D86CC735EFA66BF3E0988D81FD999A2189D8AF3FE8E4A61F72B5
E8BC31D78AC0096C026C2C2CBB93367A69DCE16AF779DB50594C4E5EA79D4611
AAEEA72B791C22A1822E686F35CE0031CEAACE8D7001935C9D6F5ACD208891E3
E0FF77FF12992474BE1F18381B2E0743E422948E00209EF33DED23A7FBF5534B
0182A6CFCF06490AE5427D9846911C6779A48145C6C5F586DD1AA3B9863D0500
11EA4DFB1C7C768210AE45BE06AD0323D9E0CA294C733E973349BAA7142543F3
9068099B257E2B3F9665E2CFA72064480B071358A6C1E5354FE38939D0571F2A
96FD186D3619A8C4F07C81F34A9C292E4EA7AA4B08231102E217DCCF72815D5E
0A833E3D3AA02FC98BE3871F07CCC61C8EF87CAAE5C510532BEAE3676C8C2816
B91F4D8E98ECEF6A6CA4F671744D3D7BA199C407E90BD43902446533D9460E01
356DE760F0D0CCFC230E4DE06BAFD7E5BDA769D1B7B1C02D5CD155CA5DCA8915
D09784ACA3F8B90588F3B00C6D3B8D24C59E69928DB53E5CD979A15937EA9D94
D236578CFFBE68AE425CF53921DA5D3F2E4484D840AFBC6DD1D3BF09B0CB4CAE
C751FE4CD65D024984036013CCB373179227A74CA2853FF08344B1474580CA4B
A45CBD03E2E5757B4F96889C50853D8A6078AF5F984DEA539613EC312D840A34
635EA134C5F21711AF3E5B9F029FEA98FA0BE5D8EA2FAEC76664AC13DB4E784B
B3046DEE37693F7C1360DD9CD62990EBDF90624BB22393DDB90DF1D8545651EA
776AC7BC2B6C24FFDE5BBC3AF8BC500F13DC2B13DDA60579719EF487981D2A65
4080B52F579EE4EEA4026B84229E73987818C268E8F6DC0CE3023284DC298DC4
A26D080FE547708A2495620B4B7B7E78697D12EF1AC78B3465C70305129E2048
5FCBBF69ED5C10B5BE72CE8809C394033B8ACC132E05C691D4F68AA83AA85BF0
E88C885CEFF8CA39CE22EFD54AF1A248BB08337313EE9CDBDF32C3D1E90E8083
59242A7DB30737B00AF36A105293D877A10B2579BEA70EF055F03D26FCE96B24
DED8A07D3761EE43FF07906CAA5408F7A3E486F984634E1B72AB37F1291BCA13
881DE26DEC7158D5A656DBF48CA2635DD723F74C7AB8D3FB19C90FD69CB0BC45
0BB2917971AFC2CEAE0F72540CB90176437428DEE216923BA2773E6986295044
C628A719D56919D65AB519FB7C4E0E77AF94C00D4C33169E48930294CB4A92E5
FC90AD09CA2E2FB59F3C3A15027E53E2D64C563E78C9B1AFCB0BE38C6ECBC34E
6293D840281804BC8987E0A462594AFB132A3691D5CAF9B64DB3DF60D04C585F
237D1E29932C7B5427E89AA3A8E8CD6CEBF136C036B5CAE49730FE7F35C6EBFC
2B7C0ABF6806812C0986D6FB711F06A8D7A08C5C5B32AD9BC0E7F58ECBD1DC82
42012432387A26A6D46E6BC9EAE4292E4B1CF0DA2E9263AD4AE076E42BCABA11
36FC4B1A9E8FC624FF44D224755D7AFFA757374396389EE71F5DEB6BA3634099
8AC942CA70915677E93853949B23DA82AFB240757740B6D8AD201F59FD6B5FAC
4502073E000F4577C0C06EE45CEF9BDF934259FF62BE75DBE03CD47BC58EEC81
7173E4B0C385343B4F40445C5230EE66EEB4D3F920E55FE4DCD634E78EFFED03
B136897C568AACC15DD12C45CF852123E0A354E7888850278ABF747B151CB3C3
2297E96C71C137CC4FE5002F04DD483592B854C267F148FED79995806704690B
50800FDFA230C579BEA6459AEDB6C7A968DAEE9C58A829AF6C7341D87C9A87AE
20C88B93492773BFEEB085B2CE3EA23C0563672EBDEA00FFFEB8C5F1016E922B
05EC6C759EB8C3038550A95B1792CB27861CB59A57F59ECB7A713A0C022A6D1B
BB7F43310673DE0E392D2E2E7D7FD43C458E806C8DD822579FAFDDFFF208AF9D
7428EBDC74943DBE145298ACB787440A431BB5DA70C38022A69C0001034F1F06
D16F6BD36BFB50F2DFD012A100AC7292A80B370D06F3171E37992AB4EF5729E0
3F787FDAAD1BFE68AE1DBA11D671A9E8516FABF163B9C2759591A04DB7C248E1
4B27BA8B8100E0B2B31BAFACD70A7CC9C52B08992EB7D2EABBBD562AEB8F7874
5A02DE4656441337AA05046A8273BE52A54086BAE69D04F04D492851FD19CE23
CCD0FD19AF4C2F748C4CD8015C5FBDD8558EB40DED19CF2C17FA21E5DBBBF992
AD6169ABCF00230A237DAA44E796D0BA9FE3E2E1C18FDB8CD1AB6853F25AA198
ABE35CDD084BCE79450CB60D82E33196748F5CD59A27D5B9138E476776EE4E13
FA78DA98338CA7B9A3EFABA969C435DFA8C1F00C02F9C9510F6E0BA57B60385A
04B02CD3F7E1DD94CD0C270E2072815F99302F5D73613BF9667646F87284D771
F9BF9F2735C329703D46F39FA01C8996CAEE7347E22215EE71E62F99C480055F
DBBCA9988B5C12827220681F549ACDD1810860780464CE9F88EADB4452E4786B
73D17FFE9F0F518E3C57C1370D4B6CAFB8ACF71C04BDFA19C5D6FA71FFC51BD5
436DD0313AD37AD84DCBEE39AF16DA1877E175AB1003E81C1B5271F2080200B6
25B50535AAA27B694B28427BD7701792D8F9D9FBDB5C749D73063E6B0190DB9C
BDD2711DAC8432AA4E63CC378CFE523EC76E60438320C2D435CB17E8C1D6A4B2
91554020D43851EACB0A403D087AB432F111F111DF0981BF67F3BE0072719691
90F70F99D544FFAB6E6AD8D071EB364E8417C92DDABFAF5C6586C8552127572A
7AAC4BB66170DC7FAE53A55D030CB73B311A0A545CE48BF28215402F617983AA
9DD8B239A59313BC19C6B084CB8090DBE1D2B41EA077DEF33C677DC06FC3E31B
13BC1A1586FB1BCB32015DE5F721E1C83A18C706F43D5038D486A72D49C90927
C3B8A591D1EC8ECD59A87D5EBA1491EBA41D769E42E2B6080C70B91A5AED0281
A21473C20078E31258E05B0CF7CBA22D6008CDC9B5C71D0890A636D1CFC6EF24
A8A552191C4373742F5BC8EF55A622674A0714E0D90A09817EEAB0AF4C08A4F9
90EDACECBBD85BA096F590A6ED3B64274DE37911882E4212DE0C67F12F6599CC
B1926C909CF7FB949B77885C83A2E9B6B87418E2C0FAB5C8A52632D450BD77FD
DF956F6A413BDA4961EFAF2A2E870CDEA0B9E1D92180576FB6D816F54DE8D851
F8965B7C8FFF622793B46B1D4ACA6E4D01BFFB063F3356440483106988E2DEC1
E980238098D3DE517D7FE1EC61D0239E46BA087F9A1E085F57C143F93EEE934F
661B730197677AB94955BCB28E5CAEEF314CD9058F18DDC5135B2A86E014D453
17AADA9FCB3E63DAAE259CF7F5439FE725368390206CA3E13589925CA081D4EF
5D3FAB260C4CEAC9D0EF6E75F7148E8808FB0DA5D9D6B681C398B921F17E0E20
1888221EFC89ED642C899EE7929F72E462E34F1B154DF6614396C337CF7A59BC
84CFD9E22E81BDA8D7AA22F8529445AEAC7CC991B51D0E7F1F4BF9141401B119
5572AAE7BA1CCAD90A57637B5D5AED66334A90E76D7465CCFCB2732134B7DAF8
B37B992D1A8AE4E3C856215E87E0D969837D40323B5D77C9FB9746ACC3B45002
CAC5F1DC410572CF3C2222FE67EC8CDF168DF4D70E80741E92D08BBD1222C8FE
1657080070570A87BCBE1A6C5AE302CEE006EB90F9690713720BDF916E853FAD
F13F42F7FAB844CBCA745791F2A741B3F31AFA9FB8251C7A069E1B8762B94FFC
EDE245D699D642F49D00156BE77326C5C9D48A115105A6ED5AEC3B6E6CF0F967
2D74F2364BF16AC8219E2E4D7EE5B1AC79D937997D9C7E96BDE6EA687B2CBC02
2EF69473E11413879E4F52AC5167B38FD6AB4FF5B2FC0C07A9EC95F5DFF9FBE5
DEAB7EB850CDA8211DB9F393962D5D4FCB9D554333925106F02AE3A7B28ADD2C
51A1DFA18C3B9858FA78440BDE4C69A419907A0E0724E3F290CDD54D7F0A2952
B056E7CB9884F123B167466BBB3D1D711A21647C83E14A1CABB6AE89BEC6FD54
E36BC5F9B9AA5C2502FC9BA8603948A011DE9D5B09930B94CAC6DBB1DB30A217
AC8EEB37F0AF982959BBD4C9290E9DB63AA6D1F6186A5F1852B5D6F1455D390F
EB83D6BBDD7ED89623ED58AEB2C7654B4972B514F0E8F759DFC677504C036BF0
5E67B9DC2CF98BABF1E88086ED3018FDD456D8F2001A3D0E8A24476C016CFCAB
92F9E532ACAE274ACE9542505DC7361A7F16F49DF02B754FFDB2A62D69FBE848
B94D6A9C6D1A9C435270B17B9AFE2EE6E93A892C809351A1DF5296260E174B6B
9E2C27917A257F57B8BFF54A4E05539586017E6E337B0DAEDD63243086422971
53FE5D574A5064E4B5116666BE04FCB02C88BE0416AE2459AA09B0B096E603A3
9EA24078218F0F8645C5573222F7133792FA609E4E01A1F51B9047B03F0BF7FC
E64BA25D8102FE485A9C7A246F08FBB982820215D9B05AAFF539C119AA3F81D2
8073DAAC8E5A3C27F29AA4728F219CFE736A74CB988000B1659ACE2527EF7B0D
6EF5DC868ABD29106070622D8831EEEAC7052B22D804200DEB44AC8D2235C360
9C75A1FBCDCFB3B342FE05A2F981922C1BB49EE2CBA6776A49A28A9DC7427E47
F415DD5CFC1DD52FE20F8BC8D2D2353142C6DF20A0D37ED206AE6DD9D95F4D53
BDB58E4E392A77C23CDA1821D9A11141953A3281E4B5BF993285B8A6ED181D50
84FD921E1395B01DDCB6C0BF13BDB067AA0A64139CF0E71E87B72136B07F4907
AC9DA0B2864925E18893E78274A5EFE61502A58A86490F720CBC3160BF0D126B
7A9811D473FAEDC7E43B3D81AAB946B3020080CA3854D81F426AE1A131C6AF72
77D3F3A3E132884485E9A489FE2983FEC24219F84A30663C80DBEC4858F3120E
ABED2A995E84F85DBFA44D2F9C0D46E7379D19350CB6F0FFFF5DE905B24C1512
152E3F3850E5165A21CCE90DC3C515E4D2AC05288A1BB4C20E9AB9B10F9BCE98
A8C6D37FA7A60F09E5DF909065206842378188372937148838B0A72C225FB215
0D78B5D1BB0C13FF27B3CC5EFD43E93CF2D332B33733A20C627D0DBFCE7DAD79
7BF0E99EE5794059B79097402EA9CE466BEC3855DD320568A928CFC41192D590
0AE2323CA2A6C3CB35BE3648868C3F279275B39A1E7042B24C0E7BD1FCD5EA04
DD27AE23F84579D0FF5094BA43ED64862F41E89BD98E059581BAF1E1C8E3E87D
B4E12C117341AABCA46F17380F2246CCA6A7A8111C6C9B72A7EF5DCF5D258520
8AC59E2FA40064F1A5B8F3BA7A35B4E4B0E490B3490356BE3523041B9F70A0BD
023E3202838CDAC8F9AA3D06332738BFDD178ABBAAEE305F559ECA20CABE0C40
8E9C327277FF79C93D8155BB066443AF2E5D3A60537AF8B711BF3349125670C0
2CBEACFD1A5E877226B20744D618551B8CB1CDD6B7F15ACB288DFD17A65DDEA1
3D4ED1828FCFAE064D741F1D5F7E8749926DF0738CA954920037A2EEA2237C8D
807AFA2671FA848196EB38293B8729ACCAC733780A7FAFA632BC8F4ACD3DA7F7
63E5544C6ED5B89CE08643C4B130BF27423757FEC1C95CFA201C9A20032CFAA6
E9CE74228D3A4DC6B0035A38A3541942518B2D016AA8C834D0E30E61050BD9DC
AFDC166CC9C85D887918E7D3CCCAA658230B3345238165E35163FAA9901D516A
3A12DF83A1237C51AB84C12678452FEEA3CDBDD0020EB6BB585E89EE1F1ABDD9
3FCDD9B27796185794229D7E99EBB9E12D1AD328860BD0CF322F1C7DA5025FAC
6653D30FAA959DAE2E133461A8EBCC73900586B8CF22E34B34F9A85D0AA97921
6BB3ECC7E78915C9DB66D220AE3D450D6EE3F1383C56B4A58060B5EE33495592
393643E32B253820764C334DDE18CF88F8157DE9B45FA2B76571CCCEF169CE77
DDEF87E809A8780A6A98ECCF1F680984C27EF41B208ABDE0FA8A6E3F87EE950A
F13A88513F16E805EBE6779D0B50BC4FCB4D719CB0033D41B987C0DE3C835005
1F511C4C762F9D81DE78455B927D237FC5B0147976354C64E73E5A256A41977E
78C6A99305BB7C1E412520BC90CA5DE0838FB8478B1B33D8DA987ADC9D9DB3C0
4EA72B2CE1EA33CCF9D7B224705522DB11B07F03F715810675CFC1FDD6AC9904
0878A7F2400F81ADD1067C392A4D4F722EEE62475D02CA10B08B6208862B6C80
E3137C30E7BD9F77F823E2A60ABA54808CA3E4683A723FD8095938AA064286F9
6A597A119AAABA743441466EBA1E82EAA3FA7FCEA0C968364FA85E2D4CA568A6
4A16AAF49FE9113E36A27445E445F56BFE4982A4D872C1A93AE70E77B29A90AD
67BA50A770F8A9954A0077B55955A3B622E186F69D36D4FEB838873BE1FAD3D9
AC06E7287F8D958A2F05B9722F4A2894344C29AF2CB6BF59EDC34C9A70F0F173
0FE047050DE44D213B29F0E162E7E51020D6EF15B9A48D67B77E1F2226ADBF12
F626ADA78BD4740C980B0D05B30BE61C92101A5C51CD69D05FB17B667341FDD4
4BD7F223B9E5411F1C0F6EF75E98B8266AAF65EC987FC4E96B4124C71E4D7C57
9CBF766BC1818379B281D06C5B895C7ACD6DD91D943581D45A143AB48439919A
18E6F73221DBD33D47821E3633239B86358F429E1A633688AA28189E9AE852F9
D2B6E24F3405E66AE57D5F62731E93285ED64EC0BE377EF96737E442975D2549
421D218CBEB1865934336FAD1C70C611F69D077174B6ECDFB9E21EEF73EE9E41
08154C176EBAD5CD6C9EE28F82BE5FD449D8B61F5F6E233B6BF1BBDD51D96BA4
1A03DDC1B831A97AAFF27DC9D46BD3400775CFE9564991CECB41B6B9BA4237CA
ED289E8ADCD237A252E3C5255DAFA954BE5CD0DA7D0DB04A54DCFED9788E1C16
F53FC30EA289CC97669390E6922D9A77CBA712827686B95277ACABB9EEBD7275
0CCE86707EAE6A3F676F587E99539C2DE611E9FAC842F77DD8C752BCF8C5ED75
0FC4FCAE7CBC606DE3991E38A0EFCDCDD7C5C7A7499240E36AA71D4111CBE6E5
0732924596CBCF2680DAE41338B7C029B84CC33640F36CA268EF741C595DB18B
B132107B7DFBFCA46ACA796E19FF69CA288733D4D5B60B9593847FF0E23E44DF
40829A3A354D7AD07A2021CE63D56AE6957E0C4526A17A0566F7793D46F3E7B2
9BFCE04B8EF1C711CE9B6241F299E87BCF8FFC890CFE66D5DC45799B63274913
9A43396582BDBE5ECAEA5A91D4456B89DF23D2B5A6DD2A5575EF44C2137A8B29
5CC4026C19A5B8A4C438118137E1ABB49B63A3FD0D34E1B6F2DA7BF45ECE8108
D01B83BF95C4E456D569650E5E260D0D1130A11EEA8C3F133BA6DEA6015335A3
6F4708EDCBB702CC951B7D81FEA54D5195A6A336AB167E149F2E6FD6DDC8A525
B75ADFE2C9B7CEA673BE9327E5DC0A07547EB21985BBB3BEBBA941BC988126D8
1572B6CFCDB2794EB50F09F946514B2C35BB3B74D641734EF6D7C6E1A08A06BB
1AA6A7C2E6C5ACB12F1786563F81F1E0F2DDF77D3FC752453AD50E11CBDF2F03
9FE2E941921FF36A5AF6360561213E4E0567C16A2569959A7B288E1E96E212F3
8755E81EC6A99D5968691B7CB35D878D5BF0BAE67CCF2624F80EAED7452BF52A
6EBB08E9C184051C761BB64D90BBCEDDA4DA2ED5BE31CE81D6185746C26E276C
F6E61D4315A8AABC2D9D9FC96432A0E08609E7DA6C021B36D7AFDF8563AB40A4
61A4FF87379AFBC480ACCF71E6A3F00D7E82A4B805A5D2A480E9585AB5BEFE6B
221286A995B3A2F1B123F79212647B8D5305C8749C54BA9F037D739BC90B6754
A19CEBA8CD6194394681B1E0B291AAB91B45449F5E6677C0A49336770684A6B0
5909125D27A42FA101868661E81413030C56A02B2D3B0B00AAB31CA1E4FA4B5B
B19E2FD4C53937E399EFD1F1C6A5BB2FA9108F68F8FEC90849E01ABB2E3F99A5
04855A51FB2F4BC651848A75B754AAEED78237A4ECAAED18FBD9B66944662220
EB3685099AB13DDA34BE34716606ABB379FEC8B98EACACC22588A4E4C7FECC03
151A504E30A968E13AB2230FB689F0DB5EB89896261BE48A9ABC09B6EDCE0D77
9FE2DA7E4646179992F0E548C9D898812C31C231693E70732562BAA3B2E784C6
F5EDEEDC88DAE802F2FE5CAA04099044C664FBA61316B7014F9B531B26C50D6E
A6A163D1A61A66ABC8C6B72D6A5363E53D534FDAB006998D3A7A2AF088622E08
BAEB023AF905E937548D9CB56736C3D67474B99C8EF5254C6E791634E0995EDA
4540072E6F90BC2505569659E7A4B84570E12B46D9C6189483E4962F5E5F7DDB
E1BCAECD15814942416351EF110E9B0AB9557496E41CB9DC125937D676657A26
2EDAA59AD4484B84DEC6C4F8EF454A0A89D4EC0140BA48A8B11C3E6FDF51E9DD
86F4771C1CD8097AD5988749859751977D463C5EA4098F900C00DD257B53DE63
B2CCC4A706BDF69C49D567A9FC5D3E82B35559950561BA53184111DA5E93311F
86511C7FC8E6A6EDBC73281C3954ADA5B144E796C37213C3CE71C3FA931E7991
2CAF300B0B4FF7606E2DB61785047F21AD8827E04500B722A40D2559D33DA9D5
841E2CE0FCE06DC65DD6A44AB409163B74C6F4EFF2D20B192C5DB1A3C93BD947
4603E293CDC2C2DDB7A73764642C9EB85C58109E5EE98DED4E169957EAB49897
3C4BE811569057119898DBBF9C5647A8473097F3388FB276C5EA893C025037AB
37C02E120339A11FACE39513F69BF362F2DEC44CC2CE20CE1E0DEF338BF7D701
5919F7B91E49D54C2D211FAF2A52A00A139FC4415797D54F1E74F41E3EE268CA
98CD371116B9CECC5A04FEC17CE9B86F1F8DC85AD5C326C3E2A47C097332167C
B76344463CF76B556D619C5D9CD5200377EEE60D4BD3842F514BEE7CBAB47269
7B02DF6E05E03A99787FFD6E433D8765BF28EE13957D3E67B62BCCA468C0FE15
E6415E1B3755A53E42CA0CC3D98DDE58640DB88DC3BC474B68F04ACD44A80461
F5645E33FCE3FE5B83EF2F520417BB8B9A55F78978F93107B5A9E5E7341C6F79
7400501101EFD7E0A7C2F7F06D080D7BBABCC5A34AE6F278734199E5F1B26C87
7CA5851CD726D01D59C970E2FEA79A2995C34885F5A72732B750CE80B6923F6C
8B7E38ABE0C0629921544451D9F81EED840F49ED95600DF98BD50AF1C5815316
815711ED836EFDEAD4AEF0237BA515B967F8AB6E0B6DE314BE4DC3B43CDFDEAA
257365B57463126C427233A21710DDDA169201E22D57CF6FC9FFB5ED688BA721
1D36D0AA17532BE856CD10453F5717890B8E6EE1A73D0B54AEBFF9634BFCACA7
0CF1CE60FAD506B28E4340698B6F150884970A7B1884478C11C5CC0D067F0588
09C20675E86D54907A8F99EB4DC5F8249D79BC223F4CABA9DEE307AAB1F33FD2
0AF2C2AED94B8A94822763E1B84254D9E4D7E01062F1DE29A973EE8F9E6F922A
1211074B2AEA11ED0FA08CFF19DEB616AAB036F23C5788F82676D57CAE869308
6E4C42BCEE895DA60DD0C5DD1B86752F02E9D8C4A469E0D1AA8A5D3675FA414F
69A2809977148D4DB134C3FD293723BD4A098E4F5F20B954D06263EF78C767EF
736014BF96301F49E00B4A15156A99395CC93BC68961523B6FA5FD5B98CE3599
B697D1E1BF42AEDBAB46BEFE5D91A96048A9838CD60494BB7B5F51A6E8386B74
017278001056ED91DBDFDE40075ACD15EBF33E0FFC9EE882FD4D131A35F910A9
26B340620533C99D0E76DE55E2FE538C99645B3CD4F83026F1EB9C569D8FF4CB
8383D9161015D08FA1E09F25A19A09B31827E298607DB96F4B105513F04BC794
E7077E5BCFE4899390B89C1BFC634C4997DBB3137507776EF6F9B03C9810B4BB
B0F3E99DB642D82EB9FC6CF30ED34ACC2B099C03BEFD074CAD6E0B9437666F3B
6F5E02523C7F04003FAB32019EEAB9DF090067104D9F50AE3A2D75887C940410
2FF28BD886459B37BB6BAD95572D1CD9F5DCE97B03C3AFF90FE947E2E103D102
52DC04688C76098C6AE762FE3DC5B27F10BED75A9CF22712CB23F71D6624EE8E
7C33EF953C877750E0A9DACB62902EF77C448B5BE07528853E8E051BF0ACF335
647A5F0EC2D820E9B0A8625077E22E19E125C3738A7ADCBB0FC173922B45DE20
80EEB9A130CC11CD3A15FE451628AAC0B1B80007C1201A8DB021BC84D7EAD070
8D74C42FC85063CE3233AB33EFC7C38E8F89ACFEA971DC5248EE25DBFDC59C3E
716ABCD0290D106D1853AF5F5A8DD525D18CE0E67A37A30F31644BE4E0B1B82F
DD3889F6B5FA6D56A8B182BAB79CE4E5CEE762BB3DAE652FB641F4B9C3C1DAF7
F555DC1EFE18113CD607182D31B54C6191B4A3EA6EC6446A1B65392A5D87059D
A837B4BC9D6B695880A0E2272522153E2A744C97DC920DB9152F51D1A929E5A7
CBE597C5C84EA2B08CBA507216613FE217F4761503986C3CB29E08B394EACCFB
0AD9A1B827C3261527D572242A70BA422F26B5BCD9C8A50B82C5AFB8E9025856
F02426E9AD9CFBA87D29691F56E76E7DB866A2DB1B2BFCBE8AEE291B66912319
F6E7656F5BC076583D5A3487E517F748056A67B15B851526040B6EF5E31BE898
A1FDF52FEAA0B1A6C801591A785F645FA3E9F56654E2CBF1EB6573D18ADE4ADF
799C8FA672EC242D935193DF0A98DC35777E43F929C1C57FB2EA2BFDB362C4BE
0DD1D9BCE558BF361EBE6C7F62277634C07C667B943FC78FAC7343DCB383263A
CA421416B1A884499D05340C6A561DF3A5CA3068633FDC30B58C431018DD2F61
23FD1D5624EC2121A276D1844EB81178F0D5961BEA6D0DFBCD673CA4007C1E5E
77D01634D48DFC6ECD15662B7476C7B82ADB98D0E57F70C964E3B3C319A5CEC5
350DBA7A80006F20B430AE6E4D48BA4CB8DFA98FD0EC3687E0B57C235D4FBBCE
082DBE1386640593EFD90948B416D1E9B78EBF24D33C6905B4156B7CFFDE8D53
E75A07D7D4EE365563F7FD2B8FF6CBA566ACE1C5955E2F5673AB02C37E14B16D
5314F3F4EDC8D8C0335819F0DF67C1CC36ED72A2746A2F74332CD64362A5F4C9
5671EFD887DF6737CE970CFF2A229745DA380584F08AD504D1EF97176C1FC093
D130B7FAFD919182710825294822309C802DCD9CCCADC86AA889965B8D8D6B8C
D63633DD6BA6B4EECE6E68B083D6E3DACA5B0A40ADB0BD7175060CCE8AC5AA2B
2CFE099189F9C3CBEF60DCD82D7193A2A7EB1186206FD9120D25938C52938620
53847FBA13391EEDED76E3B0E830F4FA4BCC6B57740B76088CD14636F95F680A
136BA54E7F8C0EF251C53E2A700973BAC9453B253A94944449A1F998C318A859
97276E06F2D198C5FDD6452818B1B60F0AAA9CE5CCDC6C39B38D71FD3C5491B1
8C7E3F61D7D96AFFDB29A75363F17F3504315B1B0C1C7BB2521EC25B7C4364C2
3CF403F96209D62181B49384BFD72156FF2158DF4B9919205136B93CB9DBF3D1
14EAD1E32D5B9F2DC0F58F2B1C683AC1B96101D01ACA81FB6F8ECF1AC0476D36
73B9423DEDA39B2897D6BE11A9378E12E76BA824FA02BBE9C85D48158C7105B3
43834136C14EF4FE416F8FB3152B4A3D26914E58A867C3D52E91F3CE8260FFDA
5DF3067C4FE2F0D5608DF2721CA0B33D92A0F2E32431051C35768D693E520E83
526828FFFDB347D40F9A7DA20E8BB2664BEECD57BBD1E6760B2C9F0F917C9879
86A7C1D6F98B90059146AC352901D0C90E16E9241D155C5D6CAFB4ECB7110D40
DAF3A5188DEF6B0B725AA9076E81B1C355ACBE8EABC1C11B47E337CB2605E79D
B90E4EA8E29058786B1ED03909333FBC8FE324FC2DFAE225463B613DFA8238DD
E82AB8423BCC6565E17B78A6AF7DBA12E02A6247768206F92AA1D1FB05A7D0D4
A01829E70CA678F9C8500B4C93BDCAD60BBFAAACF79110CA8016852967F6A565
D0B62B1692552C46091584E9CF77F949EADEEF9E225A4BCA947ED526B31FEEFE
70D7ED5B26FDC9AA322103555A84B2A7C29F104D50972240FC8D24E78C8F094C
79C785553DAFD609FE36F0DC3105C07102EC296FEA74AB182CF6D72A5109709F
7C49474B21A18DBA5827A6FD3953ECB1FCDD45818D7514D934B1C08809AC3AE1
D1132A61CDB7B96B55A33A5C707FF439DE35D336D20A3E2EF96E8E5768E04A5F
0E20126CCFFB7D0636B7239D7364CE024BDA2CC71DDD26A41B1BA5093A534DD2
48AB16A8E6A0F355A5982BAF437380F8559638952940BC989FDB5F38DC94C0C2
490644338916C8BE4B64C94114EA3800B34263F0E8CF620A709BCD24C9375778
032FB2210A3EA57D7214CF69299EA5F3B7C2E02171267874D517A7E232176C51
FAE6B79CCFF62391401165077366B77DC7C151778E7FB8FC512F1D86D102AAC3
DACE3698AB415E6CB6014A3DADF8069A9E21436E50D479A6097D8224BF3178A9
E641772FCC7672D4B2E230CF0948C4D732842DD14D43DA7D5BF50BEA8E84FB9A
DB4DD936794B82851084047A6987878D4FBE6A1A8D16DB1A8CA590313263824E
A96C0848DFBA3C42CB2376D933A199E441417EA27A1F01935947BB53DF3289A2
3473BFCBC4D4007B8548B1B4D970EF4740FE94370B2C8B52446CDE6B3AF3F807
3E14A2D144E9388004CC25698997FF14ADC0846CB8F1B93985DEF378AE341F34
F85704C1D6A779990C7B7E78E2442436E4C0434E24CB5DC92C41A94D8B563A04
9F44A975E42B5D8157BBCAC9157FAD57F8354078FEF8D90B196B55D39A280D34
80A7ADA0214B9168FDB2205B90285EEDE56AD2CDD82E5841A8117C0B9DD6DF82
12E91666763147DE904FF6D71F30AE50A9BC226032A4A1F4E20C7F627E51D2B5
2751A4C29585BDB57CB3ED02BB325743C19694031CD047525CE85F7C4BD2ADD4
8B2B6463AE41E1760EE6C5B40734B63FD4EF678A5678A3A30F79CF7A9EC9C8B6
601B4EFF049B99D78FD99C5784B2B767E70E04984D213C6DB32DB1EBDDBFB885
BE222822A638297CF13F0D390AA19074E0118393FD5484C83A76CE4F50E1544D
4924F8E0146DC927547D3D5C3E8DE41BB9D4386C55C3FD68BAF30E00DAC90BA8
9A3F15BF9BC8B474B1322367CB3CC7E73E508328845E20D7C63454C00C574582
AB403AD37A7066BE8333DAC6F08292075E2FE6AE7291BB842E2CC7E5EDCC4269
F870BF9595BAAEB71D4DDCB4A6050A8B83FF4FE24621A0E2787FFCD1BE750485
9617CC69F2AC3DED87A57F7F0798C2998EE85C7416A86719585350D27230C7F3
9F136B6C593F1A51FDAE7C4076AF5FC385578E07E9004A3DA6D0F670899F161A
BC4B323BEE67AD13CE0C1CF3CFF9010A2F20F6F1A97097868A9F6FF54C0F6893
AFA6ED9A8CFE51CB25149A42AC1CBBA7BDD35F63DD307BB1A0E2917272D82941
8D064BB7A8E2C98AC335CF663AE76555E84765AB7E8D61E6F2373A6A96698BFB
023FD519EDAC8355D54EF65464989B1BBA494A52959888AB4399C2001658B9D1
3E7C339C42D5DA6946335516C1BC0C5B0DFB502BEB185A45EF2327822C972E52
D75FDB9690C7C1BAB0DC47C2030C051DDDCB6E6089144ECBFA199663AE3FB0C6
874803F5B8B3A3D41CE2C9DA63131BBECFE28702BBF96D40C148C56754B5463D
297F825192AE2DA57F98E8CF7469C4C3863D5E67F111DDC91C0166720490A124
A7C61E84843828038FBD9666F9632D11C33B8694C23A0193D2C20378E107D53C
0E84960D14EA2B120D09AA09B5E07D6CB33738886FFF05AE6962699C3AA3D7C4
8DC9057A4048B3ADBE5EC62CEC83A0503DF4A813B729E4D65E0C0E50F10B871D
8CCCD2C8465CD29CCB14C7D91ABF05A86D152B289F56A83D6210A808609E7B71
3930C957C632502F63C526D4208CCED4B0577E4F3214AAEFAEBA9DC498013D01
14216E57BFA92FA0510F432B24F7BC7D8A6DAEF1382BD5173BE73E06976468A5
9C6073737B8827474A82E67981CFA7DAB5BA1ECCD207767C756C4F072CC05D35
8A457B771AD046F3AB75514830E4ECD4C7332E5A84363599D7AB5544E34AC296
5DFF65456CC5FF6BA121C66084B208639A43C574520C2ED3F2318586C2700169
DC81AF8616EB74D7ACE9383AF12631406B7AF8A7EF942C0600CCA4C3C1E2E75C
3F9A009BFD1AC11878846637616F66AB805610B5B9C031EEFA6C0E7CCAFC0B7F
8A0F6DF81D91FCA92B1A1FB627575747DD59C0A0660BB15D61E1C7C370D48357
B6E0DACD5BF1A8E5D8CD6BEA745B279CD8C1B5F6E94111F3CCCCA22E974DD4F5
E0B42A60AB13E48B8CB52748E76E6F21071FFF5CFB1965BFF13FD0F1FE140D83
8DCF1566CEAA57D3A98BCAE89E8AB1D7C1E14F4092FB6286EE325C724F088224
1F4BADD19DAA574C407734AEBB59E4EAF874C4F077190A60251307107906CFF3
91CA320D418E2AFC2E4BE039154177880556053AB2DF6D08E6FC49BE15FFE9C9
592356B55E20663082113E162B6375F6E801CFADD97D8EEA23ABB5F32389C9F9
1B798F5D6CBC4EAA15D28AB04DFA99A186EA7075439BC57AE78613D93473C716
D7148AC22FCD48E1F62B3A0EC3B0C61896DB5E0E0EF2438EEC64A8EA4F814BCC
675709F790BE059DEC98F7FA95A86A7113A5909A9A1DB9F5192520B1692412BF
B5783DB3C063216946E08FECD8C513E7FB8355E50E2B107A8A2D836D91FCD467
BAF2389E7DE259857683CFD79BFF1D504E3758CF51F59F6E2FC1003C4AF1AC28
61E8152745B6CA28FE6F33C4120B85194B7E1D058329A959129E2DBCA023F8B8
6F0B6B1B4FA1B1B360921675AE5854B4F389A82023155737854EFD7C3172C5AF
3F7C4EC19E5BBA8E20D9ADAF0A8BDCFFF956A14980C2118ED9A846F5E022D33B
48C94006ECAD865A05280214DA97FA048E568D251E7A9879DE84D218C4DDE20B
D375B9D91EF58C54D4967F61440ACA3C45F41D2EFEC1C8DA79EA9F2383CFA8F2
86A3A4B1F1367A2B32BE3CEB95A6B31B0ACCD652A50568843BEED0B4DE73EEEB
54F291741E7E32BF8EEFAF74A104F98C520995EFBD6A5398187A4089E6FF0D60
F15AB08B15DD9F767F10A36C568E536F569174D6486AB68AB27270839039BDC0
1C0A149C128861861565ADA2E822378ADB1A17B90261B44C217366C82EC077A9
ABCCED1F57607D808638036FE1F50FAC178A24FDA7B671D504047F1E929DD08B
AF01B7278FC917EC1FE7AD628BC607E7EF65D3CCD1543EE63B588CA54C773BB2
4224F12613FE6494D7092887BED9BAD49D275E2CCFC7217E1978A8C397FFA37B
F70D6437346E0A37439A72C73057BA82D9694CDD698131173D5CB075DA3794DD
F0C8529A08DC4F82227587F53CCC7C3FE64127B9B55721826704AC749ACE6216
ADADE20ACD844E3367DE4D224213F503292A77358FC2CD88FE9403696EFFCBD6
61212683390323A711680E592F689B75E2A7E925656B832F94A17F9C9847110E
1A3DB3AFB10673D7950A3348C1F208518D164AB7011119CC21D93B564714C31B
4CC7FBDC53D011FD8564B893E36BFA6F88839C81ED8DA5306303102E7DCB859A
77A09406856783721ABC50464110AB6727612860E2B929B588D620A14C52708D
D7B468EEDAD202BB14FD5BC9505AB18AB87FBA2E37BE865C62128B87F89D169A
69E5B414F3A6183433A3AC6F8410DB3414E0AED167A305AD7D1DBEB0C6ADAD76
95A4AE1E5091828BCE93D0FCFAD4CE4FB396384E718FCBE6414249A001341CC7
94B42A246643ED0170711AECD0B1D1D5B73D80E3567FE97B4036A5B943476D66
80E55C6B146A615B585F21C060E5A12096607214C19E3C11D93B63677752EF07
E9F953FB41A7C57F26302104262B80E6EA4684829806B3D056FBD9607B82DA3F
C340C06674E914B1235E09D2DA5891F37BBA9EEC923FD05112D43FA75D5B90B1
CEB024A1622264619AF6FF3CB42399729E601BB3FD433F3D326B5144FCBCB4F6
1E2C2F817AFC550F551F495C2149AFFCB7EA3D1D44C3044F088F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 30767215 40090613 1000 600 600 (pemberkatan-jenazah.dvi)
@start /Fa 133[37 44 1[60 1[49 30 37 38 1[46 46 51 74
23 42 28 28 46 42 1[42 46 42 42 46 13[51 2[62 2[82 57
70 2[68 5[64 68 18[28 33 3[37 37 27[51 12[{}35 90.9091
/CMTI10 rf /Fb 134[50 3[56 40 42 37 1[56 55 56 86 25
53 29 25 56 55 1[51 56 49 56 52 11[76 73 61 2[70 3[58
2[33 79 3[79 1[73 73 6[30 55 4[55 55 55 4[37 30 2[43
43 40[{}39 99.6264 /CMSSBX10 rf /Fc 138[52 32 40 41 1[50
50 55 80 25 45 30 30 50 45 1[45 50 1[45 50 16[66 3[61
75 1[38 4[74 2[72 65[{}24 99.6264 /CMTI12 rf /Fd 133[57
5[48 1[45 3[67 104 1[63 2[67 2[61 2[67 63 11[91 88 73
84 1[84 1[95 117 69 91 62 40 1[88 1[77 95 1[88 88 65[{}26
119.552 /CMSSBX10 rf /Fe 133[40 48 1[66 1[51 35 36 36
1[51 45 51 76 25 48 28 25 51 45 28 40 51 40 51 45 7[68
3[68 66 51 67 1[62 71 68 83 57 71 47 33 68 71 59 62 69
1[64 68 1[43 3[25 25 45 45 45 45 45 45 45 45 45 45 1[25
30 25 71 1[35 35 5[45 25 33[{}64 90.9091 /CMR10 rf /Ff
134[67 4[47 1[47 1[67 67 67 1[40 67 1[40 67 60 1[53 1[53
1[67 7[73 5[67 87 1[80 2[113 77[{TeXBase1Encoding ReEncodeFont}19
119.998 /Palatino-BoldItalic rf /Fg 133[90 4[100 70 80
70 1[100 100 100 150 1[100 1[60 100 2[80 100 1[97 100
16[120 2[170 2[70 7[120 130 7[90 6[90 90 90 48[{
TeXBase1Encoding ReEncodeFont}25 180.002 /Palatino-BoldItalic
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
userdict/PStoPSxform PStoPSmatrix matrix currentmatrix
 matrix invertmatrix matrix concatmatrix
 matrix invertmatrix put
%%EndSetup
%%Page: (0,1) 1
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
612.000000 0.000000 translate
90 rotate
1.000000 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 468.000000 0 rlineto 0 612.000000 rlineto -468.000000 0 rlineto
 closepath}put initclip
/PStoPSenablepage false def
PStoPSxform concat
TeXDict begin 12 11 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -136
-446 a
SDict begin H.S end
 -136 -446 a 0 TeXcolorgray 0 TeXcolorgray -136
-446 a
SDict begin H.R end
 -136 -446 a -136 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.12) cvn /DEST pdfmark end
 -136 -446 a 0 TeXcolorgray
-128 -331 a Fe(12)p -128 -294 2835 4 v 0 TeXcolorgray
100 -36 a(doa)23 b(umatMu)f(ini)h(dan)f(buk)-5 b(alah)22
b(pin)m(tu)g(surga)h(bagi)g(dia)g(y)m(ang)h(sudah)d(Eng-)100
77 y(k)-5 b(au)31 b(panggil.)45 b(Semoga)32 b(k)-5 b(ami)32
b(y)m(ang)g(masih)f(b)s(erziarah)g(di)g(bumi)g(ini,)g(ter-)100
190 y(utama)e(sem)m(ua)g(anggota)h(k)m(eluarga)g(y)m(ang)f(ditinggalk)
-5 b(ann)m(y)m(a)31 b(selalu)e(saling)100 302 y(mem)m(ban)m(tu)40
b(dalam)h(segala)i(tan)m(tangan)e(hidup)e(ini;)46 b(dan)40
b(semoga)i(k)-5 b(ami)100 415 y(tetap)43 b(menaruh)f(k)m(ep)s(erca)m(y)
m(aan)i(y)m(ang)g(teguh)e(ak)-5 b(an)43 b(sab)s(da-Mu,)j(bah)m(w)m(a)
100 528 y(k)-5 b(ami)37 b(juga)g(ak)-5 b(an)37 b(men)m(y)m(ongsong)i
(Kristus)d(un)m(tuk)g(b)s(ersatu)g(dengan)h(Dia)100 641
y(selama-laman)m(y)m(a.)42 b(Sebab)26 b(Dialah)j(PuteraMu,)e(T)-8
b(uhan)26 b(dan)g(P)m(engan)m(tara)100 754 y(k)-5 b(ami)30
b(kini)h(dan)e(sepanjang)i(segala)h(masa.)p 0 TeXcolorgray
-39 967 a(U:)p 0 TeXcolorgray 46 w(Amin)p 0 TeXcolorgray
-128 1210 a Fb(Berk)m(at)p 0 TeXcolorgray -128 1269 a
SDict begin H.S end

-128 1269 a -128 1269 a
SDict begin 13.6 H.A end
 -128 1269 a -128 1269 a
SDict begin [/View [/XYZ H.V]/Dest (section*.18) cvn /DEST pdfmark
end
 -128
1269 a 0 TeXcolorgray -4 1382 a Fe(I:)p 0 TeXcolorgray
46 w(T)-8 b(uhan)29 b(sertam)m(u)p 0 TeXcolorgray -39
1594 a(U:)p 0 TeXcolorgray 46 w(Dan)h(sertam)m(u)h(juga)p
0 TeXcolorgray -4 1807 a(I:)p 0 TeXcolorgray 46 w(Semoga)26
b(kita)g(sek)-5 b(alian,)28 b(sem)m(ua)d(y)m(ang)h(kita)g(doak)-5
b(an)26 b(dan)e(p)s(erjalanan)h(kita)100 1920 y(menghan)m(tar)33
b(Bapak)h(An)m(tonius)g(Budian)m(to)g(k)m(e)g(tempat)g(p)s
(eristirahatan-)100 2033 y(n)m(y)m(a)d(y)m(ang)g(terakhir,)g(senan)m
(tiasa)g(dilindungi,)f(dibim)m(bing)g(dan)f(dib)s(erk)-5
b(ati)100 2146 y(oleh)23 b(Allah)g(y)m(ang)g(Mahakuasa:)38
b(Bapa)23 b(dan)f(\(+\))h(Putera)g(dan)f(Roh)g(Kudus)p
0 TeXcolorgray -39 2358 a(U:)p 0 TeXcolorgray 46 w(Amin.)p
0 TeXcolorgray -4 2571 a(I:)p 0 TeXcolorgray 46 w(Saudara-saudariku)37
b(sek)-5 b(alian,)42 b(marilah)d(kita)h(b)s(erangk)-5
b(at)39 b(k)m(e)g(p)s(ekubur-)100 2684 y(an)33 b(un)m(tuk)f(menghan)m
(tar)h(Bapak)h(An)m(tonius)f(Budian)m(to)g(y)m(ang)h(kita)g(k)-5
b(asihi)100 2796 y(ini)38 b(k)m(e)i(tempat)f(istirahatn)m(y)m(a)i(y)m
(ang)e(terakhir.)66 b(Semoga)40 b(damai)f(T)-8 b(uhan)100
2909 y(men)m(y)m(ertai)32 b(kita.)p 0 TeXcolorgray -39
3122 a(U:)p 0 TeXcolorgray 46 w(Sek)-5 b(arang)30 b(dan)g(selama-laman)
m(y)m(a)p 0 TeXcolorgray -128 3365 a Fb(Lagu)37 b(P)m(enutup)p
0 TeXcolorgray -128 3443 a
SDict begin H.S end
 -128 3443 a -128 3443 a
SDict begin 13.6 H.A end
 -128
3443 a -128 3443 a
SDict begin [/View [/XYZ H.V]/Dest (section*.19) cvn /DEST pdfmark
end
 -128 3443 a 0 TeXcolorgray 0 TeXcolorgray
264 3537 a Fe(TERIMA)30 b(KASIH)g(A)-8 b(T)g(AS)31 b(DUKUNGAN)g(DO)m(A)
g(D)m(ARI)645 3650 y(BAP)-8 b(AK,)31 b(IBU,)g(D)m(AN)g(SA)m(UD)m(ARA)
159 3763 y(SEMOGA)f(KEBAIKAN)g(BAP)-8 b(AK,)32 b(IBU,)f(D)m(AN)g(SA)m
(UD)m(ARA)499 3876 y(TUHAN)g(BERKENAN)g(MEMBERKA)-8 b(TI)p
0 TeXcolorgray -128 4153 2835 5 v -128 4266 a Fa(Misa)33
b(Pemb)-5 b(erkatan)p 0 TeXcolorgray eop end
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
612.000000 468.000000 translate
90 rotate
1.000000 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 468.000000 0 rlineto 0 612.000000 rlineto -468.000000 0 rlineto
 closepath}put initclip
PStoPSxform concat
TeXDict begin 1 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref package)/Author ()/Keywords () /DOCINFO pdfmark
end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -18 -446
a
SDict begin H.S end
 -18 -446 a 0 TeXcolorgray Black -18 -446 a
SDict begin H.R end
 -18 -446
a -18 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -18 -446 a 0 TeXcolorgray Black 0 TeXcolorgray
-9 -128 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -9 -128 a -9 -128 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -9 -128 a -9 -128 a
SDict begin H.S end
 -9
-128 a -9 -128 a
SDict begin 13.6 H.A end
 -9 -128 a -9 -128 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -9 -128 a 387 337
a Fg(Misa)45 b(Pemberkatan)g(Jenazah)418 632 y(Bapak)g(Antonius)g
(Budianto)1021 2875 y(29)g(Mei)f(2010)859 3139 y Ff(St)29
b(Michael)h(Panti)g(Rapih)1184 3319 y(Y)-13 b(ogyakarta)p
0 TeXcolorgray 0 TeXcolorgray eop end
PStoPSsaved restore
%%Page: (2,3) 2
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
612.000000 0.000000 translate
90 rotate
1.000000 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 468.000000 0 rlineto 0 612.000000 rlineto -468.000000 0 rlineto
 closepath}put initclip
/PStoPSenablepage false def
PStoPSxform concat
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -136
-446 a
SDict begin H.S end
 -136 -446 a 0 TeXcolorgray 0 TeXcolorgray -136
-446 a
SDict begin H.R end
 -136 -446 a -136 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 -136 -446 a 0 TeXcolorgray
-128 -331 a Fe(2)p -128 -294 2835 4 v 0 TeXcolorgray
0 TeXcolorgray -128 -36 a Fd(RITUS)44 b(PEMBUKA)p 0 TeXcolorgray
-128 54 a
SDict begin H.S end
 -128 54 a -128 54 a
SDict begin 13.6 H.A end
 -128 54 a -128 54 a
SDict begin [/View [/XYZ H.V]/Dest (section*.1) cvn /DEST pdfmark end
 -128
54 a 116 x Fc(L)-5 b(agu)35 b(p)-5 b(embukaan)p 0 TeXcolorgray
-128 411 a Fb(T)c(anda)37 b(salib)h(dan)f(salam)p 0 TeXcolorgray
-128 470 a
SDict begin H.S end
 -128 470 a -128 470 a
SDict begin 13.6 H.A end
 -128 470 a -128 470
a
SDict begin [/View [/XYZ H.V]/Dest (section*.2) cvn /DEST pdfmark end
 -128 470 a 0 TeXcolorgray -4 583 a Fe(I:)p 0 TeXcolorgray
46 w(Dalam)31 b(Nama)h(Bapa)f(dan)e(Putera)i(dan)f(Roh)g(Kudus)p
0 TeXcolorgray -39 781 a(U:)p 0 TeXcolorgray 46 w(Amin)p
0 TeXcolorgray -4 979 a(I:)p 0 TeXcolorgray 46 w(T)-8
b(erpujilah)31 b(Allah,)i(Bapa)g(T)-8 b(uhan)31 b(kita)i(Y)-8
b(esus)33 b(Kristus,)f(Bapa)g(y)m(ang)h(p)s(e-)100 1091
y(n)m(uh)19 b(b)s(elask)-5 b(asihan)20 b(dan)g(Allah)h(sum)m(b)s(er)d
(segala)23 b(p)s(enghiburan,)d(y)m(ang)h(meng-)100 1204
y(hibur)28 b(kita)k(dalam)e(segala)j(p)s(enderitaan.)p
0 TeXcolorgray -39 1402 a(U:)p 0 TeXcolorgray 46 w(Sek)-5
b(arang)30 b(dan)g(selama-laman)m(y)m(a)p 0 TeXcolorgray
-128 1643 a Fb(P)m(enganta)m(r)p 0 TeXcolorgray -128
1721 a
SDict begin H.S end
 -128 1721 a -128 1721 a
SDict begin 13.6 H.A end
 -128 1721 a -128 1721
a
SDict begin [/View [/XYZ H.V]/Dest (section*.3) cvn /DEST pdfmark end
 -128 1721 a 0 TeXcolorgray -4 1815 a Fe(I:)p 0 TeXcolorgray
46 w(Ibu-Bapak,)22 b(saudara-saudariku)e(sek)-5 b(alian,)23
b(k)m(eluarga)f(y)m(ang)f(b)s(erduk)-5 b(a)19 b(y)m(ang)100
1928 y(terk)-5 b(asih)32 b(dalam)h(Kristus.)44 b(Dengan)33
b(rasa)g(sedih)e(hati)i(kita)g(mengadak)-5 b(an)100 2041
y(upacara)37 b(p)s(erpisahan)f(dengan)h(Bapak)h(An)m(tonius)f(Budian)m
(to)h(y)m(ang)g(kita)100 2154 y(k)-5 b(asihi)29 b(ini.)41
b(Seb)s(en)m(tar)29 b(lagi)i(kita)g(ak)-5 b(an)29 b(menghan)m(tar)h
(dia)g(k)m(e)g(tempat)h(p)s(er-)100 2267 y(istirahatann)m(y)m(a)37
b(y)m(ang)f(terakhir.)54 b(Nam)m(un)35 b(kita)h(tidak)g(b)s(oleh)f
(putus)e(asa)100 2379 y(sep)s(erti)g(orang)i(y)m(ang)f(tidak)h(mempun)m
(y)m(ai)f(harapan.)51 b(Sebab)33 b(kita)i(mena-)100 2492
y(ruh)22 b(harapan)h(k)m(epada)i(Kristus)d(y)m(ang)j(telah)f
(menghancurk)-5 b(an)23 b(k)m(ekuasaan)100 2605 y(maut)39
b(dengan)g(k)m(ebangkitan-)h(Ny)m(a)g(y)m(ang)g(m)m(ulia.)68
b(Mak)-5 b(a)40 b(marilah)f(kita)100 2718 y(mendoak)-5
b(an)33 b(k)m(eselamatan)j(k)m(ek)-5 b(al)34 b(bagin)m(y)m(a)h(dan)e(p)
s(eneguhan)f(iman)h(bagi)100 2831 y(kita)e(sem)m(ua,)g(terutama)g(bagi)
g(k)m(eluarga)h(y)m(ang)f(ditinggalk)-5 b(an.)p 0 TeXcolorgray
-128 3072 a Fb(P)m(erny)m(ataan)38 b(T)-9 b(obat)p 0
TeXcolorgray -128 3150 a
SDict begin H.S end
 -128 3150 a -128 3150 a
SDict begin 13.6 H.A end
 -128
3150 a -128 3150 a
SDict begin [/View [/XYZ H.V]/Dest (section*.4) cvn /DEST pdfmark end
 -128 3150 a 0 TeXcolorgray -4 3244
a Fe(I:)p 0 TeXcolorgray 46 w(Agar)38 b(doa-doa)g(y)m(ang)g(kita)g
(panjatk)-5 b(an)37 b(k)m(e)h(hadirat)f(Allah)h(y)m(ang)g(Maha-)100
3357 y(rahim)g(diterima,)j(marilah)e(kita)h(terlebih)f(dah)m(ulu)e(men)
m(y)m(esali)k(dan)d(me-)100 3470 y(mohon)28 b(ampun)g(dariNy)m(a)h
(atas)h(segala)h(dosa)e(dan)f(k)m(esalahan)i(y)m(ang)g(telah)100
3583 y(kita)h(lakuk)-5 b(an.)p 0 TeXcolorgray -4 3780
a(I:)p 0 TeXcolorgray 46 w(Y)d(a)23 b(T)-8 b(uhan)21
b(Y)-8 b(esus)23 b(Kristus,)g(Engk)-5 b(au)22 b(mengalami)h(k)m
(ematian)h(sebagai)g(ma-)100 3893 y(n)m(usia,)f(tetapi)e(dibangkitk)-5
b(an)21 b(oleh)g(k)m(ekuasaan)h(Bapa)f(dalam)g(Roh)g(Kudus.)100
4006 y(T)-8 b(uhan)29 b(k)-5 b(asihanilah)31 b(k)-5 b(ami.)p
0 TeXcolorgray -128 4153 2835 5 v -128 4266 a Fa(Misa)33
b(Pemb)-5 b(erkatan)p 0 TeXcolorgray eop end
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
612.000000 468.000000 translate
90 rotate
1.000000 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 468.000000 0 rlineto 0 612.000000 rlineto -468.000000 0 rlineto
 closepath}put initclip
PStoPSxform concat
TeXDict begin 11 10 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -18
-446 a
SDict begin H.S end
 -18 -446 a 0 TeXcolorgray 0 TeXcolorgray -18 -446
a
SDict begin H.R end
 -18 -446 a -18 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.11) cvn /DEST pdfmark end
 -18 -446 a 0 TeXcolorgray 2734
-331 a Fe(11)p -9 -294 2835 4 v 0 TeXcolorgray 218 -36
a(Kami)25 b(mohon)f(b)s(erk)-5 b(at)25 b(b)s(elask)-5
b(asihan-Mu)25 b(k)m(epada)g(Bapak)h(An)m(tonius)f(Bu-)218
77 y(dian)m(to)34 b(,)g(janganlah)f(Engk)-5 b(au)32 b(serahk)-5
b(an)33 b(dia)g(k)m(epada)h(k)m(ekuasaan)g(maut,)218
190 y(tetapi)d(b)s(ebask)-5 b(anlah)29 b(dia)h(demi)f(jasa)h(Kristus,)g
(Putera-Mu.)40 b(Biark)-5 b(anlah)218 302 y(darah)30
b(dan)h(air)g(y)m(ang)h(tercurah)f(dari)g(lam)m(bung)g(Kristus,)g
(PuteraMu)g(itu)218 415 y(mem)m(b)s(ersihk)-5 b(an)29
b(dia)h(dari)g(segala)i(dosa)e(dan)g(k)m(esalahann)m(y)m(a)i(sehingga)f
(ia,)218 528 y(dengan)g(jiw)m(a)h(y)m(ang)g(b)s(ersih)e(dapat)i
(menghadap)f(Engk)-5 b(au,)32 b(P)m(enciptan)m(y)m(a,)218
641 y(Bapan)m(y)m(a)h(dan)e(juga)g(Bapa)h(k)-5 b(ami)32
b(b)s(ersama.)43 b(T)-8 b(uhan,)31 b(dalam)h(k)m(ehidupan)218
754 y(di)j(dunia)f(ini,)j(ia)f(telah)g(dikuatk)-5 b(an)35
b(dan)g(disegark)-5 b(an)36 b(dengan)f(san)m(tapan)218
867 y(T)-8 b(ubuh)38 b(dan)h(Darah)h(Kristus)e(Putera-Mu.)69
b(Mak)-5 b(a)41 b(k)-5 b(ami)40 b(mohon,)i(p)s(er-)218
980 y(k)m(enank)-5 b(anlah)30 b(ia)f(kini)h(mengam)m(bil)g(bagian)g
(dalam)f(p)s(erjam)m(uan)g(surga)m(wi-)218 1093 y(Mu.)85
b(Disanalah)46 b(k)-5 b(ami)45 b(sem)m(ua)h(ak)-5 b(an)45
b(dip)s(ertem)m(uk)-5 b(an)44 b(k)m(em)m(bali)j(un)m(tuk)218
1206 y(mem)m(uji)38 b(dan)g(mem)m(uliak)-5 b(an)38 b(Dik)-5
b(au)39 b(dalam)g(k)m(eabadian.)65 b(Demi)39 b(Kristus)218
1319 y(T)-8 b(uhan)29 b(dan)h(P)m(engan)m(tara)i(k)-5
b(ami.)p 0 TeXcolorgray 79 1521 a(U:)p 0 TeXcolorgray
46 w(Amin.)p 0 TeXcolorgray 114 1723 a(I:)p 0 TeXcolorgray
46 w(Bapak)25 b(An)m(tonius)f(Budian)m(to)h(,)h(terima)f(k)-5
b(asih)24 b(atas)i(segala)g(k)m(ebaik)-5 b(an,)27 b(jasa)218
1836 y(dan)32 b(p)s(engorbanan)f(hidupm)m(u)f(y)m(ang)j(telah)g(engk)-5
b(au)33 b(p)s(erbuat)e(selagi)j(ma-)218 1949 y(sih)g(hidup)f(b)s
(ersama)i(dengan)f(k)-5 b(ami.)55 b(A)m(tas)36 b(segala)g(tanda)f(k)-5
b(asihm)m(u)35 b(itu,)218 2062 y(k)-5 b(ami)24 b(han)m(y)m(a)i(sanggup)
e(mengucapk)-5 b(an)24 b(terima)h(k)-5 b(asih)24 b(dan)g(selamat)h
(jalan,)218 2175 y(ba)m(w)m(alah)33 b(selalu)g(tanda)f(k)m(emenangan)h
(Kristus:)43 b(Bapa)32 b(dan)g(\(+\))g(Putera)218 2288
y(Roh)e(Kudus.)p 0 TeXcolorgray 79 2490 a(U:)p 0 TeXcolorgray
46 w(Amin.)-9 2693 y Fa(\(L)-5 b(alu)40 b(jenazah)g(dir)-5
b(e)g(ciki)40 b(dengan)g(air)g(suci)f(dan)h(didup)-5
b(ai.)63 b(Keluar)-5 b(ga)41 b(dip)-5 b(erke-)-9 2805
y(nankan)34 b(untuk)f(menyir)-5 b(ami)35 b(jenazah)f(dengan)g(minyak)g
(wangi)g(yang)g(sudah)g(di-)-9 2918 y(b)-5 b(erkati.)42
b(Seb)-5 b(aiknya)33 b(diiringi)g(dengan)h(lagu)e(yang)h(sesuai\))p
0 TeXcolorgray -9 3203 a Fd(RITUS)43 b(PENUTUP)p 0 TeXcolorgray
-9 3293 a
SDict begin H.S end
 -9 3293 a -9 3293 a
SDict begin 13.6 H.A end
 -9 3293 a -9 3293 a
SDict begin [/View [/XYZ H.V]/Dest (section*.17) cvn /DEST pdfmark
end
 -9
3293 a 0 TeXcolorgray 114 3406 a Fe(I:)p 0 TeXcolorgray
46 w(Marilah)31 b(b)s(erdoa:)218 3555 y(Allah)h(dan)e(Bapa)i(k)-5
b(ami)32 b(y)m(ang)g(Maha)g(baik,)g(k)-5 b(ami)32 b(memp)s(erca)m(y)m
(ak)-5 b(an)32 b(Ba-)218 3668 y(pak)23 b(An)m(tonius)g(Budian)m(to)h(y)
m(ang)g(k)-5 b(ami)24 b(k)-5 b(asihi)24 b(ini)f(k)m(epada)h(k)m
(erahimanMu.)218 3780 y(Kami)j(p)s(erca)m(y)m(a,)j(bah)m(w)m(a)d(sem)m
(ua)h(orang)g(y)m(ang)g(meninggal)g(dalam)g(Kristus)218
3893 y(ak)-5 b(an)33 b(hidup)e(b)s(ersama)i(Kristus.)48
b(Kep)s(erca)m(y)m(aan)34 b(ini)f(mem)m(b)s(eri)g(k)-5
b(ami)33 b(ha-)218 4006 y(rapan)22 b(dan)h(menabahk)-5
b(an)22 b(hati)h(k)-5 b(ami)24 b(dalam)f(k)m(esusahan.)38
b(Dengark)-5 b(anlah)p 0 TeXcolorgray -9 4153 2835 5
v 2068 4266 a Fa(A)n(ntonius)32 b(Budianto)p 0 TeXcolorgray
eop end
PStoPSsaved restore
%%Page: (4,5) 3
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
612.000000 0.000000 translate
90 rotate
1.000000 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 468.000000 0 rlineto 0 612.000000 rlineto -468.000000 0 rlineto
 closepath}put initclip
/PStoPSenablepage false def
PStoPSxform concat
TeXDict begin 10 9 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -136
-446 a
SDict begin H.S end
 -136 -446 a 0 TeXcolorgray 0 TeXcolorgray -136
-446 a
SDict begin H.R end
 -136 -446 a -136 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.10) cvn /DEST pdfmark end
 -136 -446 a 0 TeXcolorgray
-128 -331 a Fe(10)p -128 -294 2835 4 v 0 TeXcolorgray
0 TeXcolorgray -4 -36 a(I:)p 0 TeXcolorgray 46 w(Aku)21
b(p)s(erca)m(y)m(a)i(k)m(epadaMu,)h(y)m(a)f(T)-8 b(uhan;)23
b(jiw)m(aku)f(p)s(erca)m(y)m(a)h(ak)-5 b(an)22 b(Sab)s(daMu.)p
0 TeXcolorgray -39 172 a(U:)p 0 TeXcolorgray 46 w(T)-8
b(erimalah)31 b(dia,)g(y)m(a)g(T)-8 b(uhan.)p 0 TeXcolorgray
-4 381 a(I:)p 0 TeXcolorgray 46 w(P)m(ada-Mu,)29 b(y)m(a)g(T)-8
b(uhan,)28 b(ada)g(b)s(elask)-5 b(asihan)28 b(serta)h(p)s(enebusan)d(b)
s(erlimpah)100 494 y(ada)k(pada-Mu)p 0 TeXcolorgray -39
703 a(U:)p 0 TeXcolorgray 46 w(T)-8 b(erimalah)31 b(dia,)g(y)m(a)g(T)-8
b(uhan)p 0 TeXcolorgray -4 911 a(I:)p 0 TeXcolorgray
46 w(Hai)29 b(para)g(kudus)e(dan)h(para)h(malaik)-5 b(at)30
b(Allah,)g(datanglah)g(men)m(y)m(ongsong)100 1024 y(Bapak)k(An)m
(tonius)f(Budian)m(to)h(ini)f(dan)g(han)m(tark)-5 b(anlah)33
b(dia)g(k)m(epada)h(Kris-)100 1137 y(tus.)p 0 TeXcolorgray
-39 1346 a(U:)p 0 TeXcolorgray 46 w(Di)d(hadapan)e(Allah)i(y)m(ang)h
(Mahatinggi.)p 0 TeXcolorgray -4 1554 a(I:)p 0 TeXcolorgray
46 w(Semoga)21 b(Kristus)e(men)m(y)m(am)m(butm)m(u,)k(sebab)d(Dia-lah)i
(y)m(ang)f(telah)g(memang-)100 1667 y(gil)k(engk)-5 b(au.)39
b(Semoga)26 b(para)e(malaik)-5 b(at)27 b(mengiringi)e(dan)f(menjemput)f
(eng-)100 1780 y(k)-5 b(au)30 b(k)m(e)h(pangkuan)f(Abraham.)p
0 TeXcolorgray -39 1989 a(U:)p 0 TeXcolorgray 46 w(Di)h(hadapan)e
(Allah)i(y)m(ang)h(Mahatinggi)p 0 TeXcolorgray -4 2197
a(I:)p 0 TeXcolorgray 46 w(T)-8 b(uhan,)26 b(b)s(erilah)g(dia)g
(istirahat)i(k)m(ek)-5 b(al)27 b(dan)f(sinarilah)g(dia)h(dengan)f(caha)
m(y)m(a)100 2310 y(abadi)p 0 TeXcolorgray -39 2519 a(U:)p
0 TeXcolorgray 46 w(Di)31 b(hadapan)e(Allah)i(y)m(ang)h(Mahatinggi)p
0 TeXcolorgray -4 2728 a(I:)p 0 TeXcolorgray 46 w(Marilah)f(b)s(erdoa:)
100 2877 y(Y)-8 b(a)25 b(T)-8 b(uhan,)25 b(k)m(ehidupan)f(dan)f(k)m
(ematian)j(k)-5 b(ami)25 b(b)s(erada)f(di)g(dalam)h(tangan-)100
2990 y(Mu)30 b(sendiri.)41 b(Engk)-5 b(au)30 b(telah)i(menciptak)-5
b(an)31 b(man)m(usia)g(k)-5 b(arena)31 b(k)-5 b(asih)31
b(dan)100 3103 y(cin)m(taMu.)83 b(Y)-8 b(a)45 b(T)-8
b(uhan,)47 b(lihatlah)e(k)-5 b(ami)44 b(putera-puteri-Mu)g(y)m(ang)h
(kini)100 3216 y(b)s(erhimpun)33 b(di)k(sekitar)g(p)s(eti)g(jenazah)g
(dari)f(Bapak)i(An)m(tonius)e(Budian-)100 3329 y(to)j(y)m(ang)g(k)-5
b(ami)39 b(k)-5 b(asihi)39 b(ini.)65 b(Kami)39 b(sem)m(ua)g(b)s(erduk)
-5 b(a)37 b(cita)j(atas)f(k)m(emati-)100 3442 y(ann)m(y)m(a.)58
b(Maafk)-5 b(an)36 b(k)-5 b(ami)36 b(y)m(a)h(T)-8 b(uhan,)37
b(jik)-5 b(a)36 b(k)-5 b(ami)36 b(b)s(elum)f(sempat)h(meng-)100
3555 y(ucapk)-5 b(an)35 b(terima)i(k)-5 b(asih)35 b(k)-5
b(ami)36 b(k)m(epadan)m(y)m(a)h(atas)g(segala)h(k)m(ebaik)-5
b(an)36 b(y)m(ang)100 3668 y(telah)i(dilakuk)-5 b(ann)m(y)m(a)38
b(k)m(epada)g(k)-5 b(ami.)62 b(Kami)37 b(juga)g(men)m(y)m(esal)i(jik)-5
b(a)38 b(k)-5 b(ami)100 3780 y(b)s(elum)26 b(sempat)h(memin)m(ta)h
(maaf)g(atas)g(segala)h(dosa)e(dan)g(k)m(esalahan)h(y)m(ang)100
3893 y(telah)34 b(k)-5 b(ami)34 b(lakuk)-5 b(an)34 b(terhadapn)m(y)m
(a.)52 b(Ak)-5 b(an)33 b(tetapi)i(k)-5 b(ami)34 b(p)s(erca)m(y)m(a)h
(bah-)100 4006 y(w)m(a)e(k)-5 b(asihMu)33 b(jauh)f(lebih)h(kuat)g
(daripada)f(k)m(einginan)i(man)m(usia)m(wi)f(k)-5 b(ami.)p
0 TeXcolorgray -128 4153 2835 5 v -128 4266 a Fa(Misa)33
b(Pemb)-5 b(erkatan)p 0 TeXcolorgray eop end
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
612.000000 468.000000 translate
90 rotate
1.000000 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 468.000000 0 rlineto 0 612.000000 rlineto -468.000000 0 rlineto
 closepath}put initclip
PStoPSxform concat
TeXDict begin 3 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -18
-446 a
SDict begin H.S end
 -18 -446 a 0 TeXcolorgray 0 TeXcolorgray -18 -446
a
SDict begin H.R end
 -18 -446 a -18 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -18 -446 a 0 TeXcolorgray 2780
-331 a Fe(3)p -9 -294 2835 4 v 0 TeXcolorgray 0 TeXcolorgray
79 -36 a(U:)p 0 TeXcolorgray 46 w(T)-8 b(uhan,)29 b(k)-5
b(asihanilah)31 b(k)-5 b(ami.)p 0 TeXcolorgray 114 164
a(I:)p 0 TeXcolorgray 46 w(Engk)g(aulah)20 b(k)m(ebangkitan)h(dan)f(k)m
(ehidupan;)j(barang)d(siapa)h(p)s(erca)m(y)m(a)g(k)m(epada-)218
277 y(Mu)31 b(ak)-5 b(an)31 b(memp)s(eroleh)g(k)m(ehidupan)f(y)m(ang)i
(k)m(ek)-5 b(al.)44 b(Kristus,)31 b(k)-5 b(asihanilah)218
390 y(k)g(ami.)p 0 TeXcolorgray 79 590 a(U:)p 0 TeXcolorgray
46 w(Kristus,)30 b(k)-5 b(asihanilah)30 b(k)-5 b(ami)p
0 TeXcolorgray 114 790 a(I:)p 0 TeXcolorgray 46 w(Engk)g(au)43
b(ak)-5 b(an)43 b(datang)h(dengan)f(m)m(ulia)h(un)m(tuk)f(memp)s
(ersatuk)-5 b(an)42 b(k)-5 b(ami)218 903 y(sem)m(ua)31
b(dalam)f(k)m(era)5 b(jaan)32 b(Bapa.)41 b(T)-8 b(uhan)30
b(k)-5 b(asihanilah)30 b(k)-5 b(ami.)p 0 TeXcolorgray
79 1103 a(U:)p 0 TeXcolorgray 46 w(T)d(uhan,)29 b(k)-5
b(asihanilah)31 b(k)-5 b(ami.)p 0 TeXcolorgray 114 1303
a(I:)p 0 TeXcolorgray 46 w(Semoga)46 b(Allah)f(y)m(ang)h(Mahakuasa)g
(mengasihani)f(kita,)50 b(mengampuni)218 1416 y(dosa-dosa)31
b(kita)g(dan)f(menghan)m(tar)h(kita)g(k)m(e)g(hidup)e(y)m(ang)i(k)m(ek)
-5 b(al.)p 0 TeXcolorgray 79 1616 a(U:)p 0 TeXcolorgray
46 w(Amin)p 0 TeXcolorgray 114 1816 a(I:)p 0 TeXcolorgray
46 w(Marilah)31 b(Berdoa:)218 1964 y(Allah,)38 b(Bapa)f(k)-5
b(ami)37 b(y)m(ang)f(Maharahim)h(dengan)f(p)s(en)m(uh)e(harapan)i(k)-5
b(ami)218 2077 y(men)m(y)m(erahk)g(an)32 b(ham)m(baMu)f(ini)h(Bapak)g
(An)m(tonius)f(Budian)m(to)i(k)m(e)f(tangan-)218 2190
y(Mu.)52 b(Berik)-5 b(anlah)35 b(dia)f(istirahat)h(p)s(en)m(uh)e
(terang)h(dan)g(damai)h(dalam)f(k)m(e-)218 2303 y(ra)5
b(jaanMu.)72 b(Ampunilah)40 b(y)m(a)h(Bapa,)k(segala)d(dosa)f(dan)g(k)m
(esalahann)m(y)m(a.)218 2416 y(Semoga)27 b(ia)h(b)s(ersatu)d(dengan)i
(para)f(ham)m(baMu)h(un)m(tuk)f(menikmati)h(caha-)218
2529 y(y)m(a)g(k)m(ebahagiaan)i(k)m(ek)-5 b(al)28 b(dan)e(mem)m(uji)h
(k)m(ebaik)-5 b(anMu.)40 b(Kami)27 b(juga)g(b)s(erdoa)218
2642 y(bagi)h(k)-5 b(ami)29 b(sem)m(ua)f(y)m(ang)h(masih)f(b)s
(erziarah)f(di)h(bumi)f(ini,)i(terutama)g(bagi)218 2755
y(k)m(eluarga)f(y)m(ang)g(sedang)f(b)s(erk)-5 b(abung.)37
b(Engk)-5 b(aulah,)28 b(y)m(a)g(Bapa)f(sum)m(b)s(er)e(b)s(e-)218
2868 y(lask)-5 b(asihan)26 b(dan)f(p)s(enghiburan,)g(Engk)-5
b(au)25 b(mencin)m(tai)i(k)-5 b(ami)26 b(dengan)f(k)-5
b(asih)218 2981 y(abadi;)46 b(Engk)-5 b(au)40 b(mengubah)f(maut)i(y)m
(ang)g(gelap)g(gulita)h(menjadi)e(fa)5 b(jar)218 3093
y(y)m(ang)32 b(gilang-gemilang)i(b)s(erk)-5 b(at)31 b(k)m(ebangkitan)i
(m)m(ulia)f(PuteraMu.)43 b(Mak)-5 b(a)218 3206 y(k)g(ami)38
b(mohon,)i(semoga)f(k)m(eluarga)h(y)m(ang)f(sedang)f(b)s(erk)-5
b(abung)36 b(ini)i(dapat)218 3319 y(menanggung)29 b(duk)-5
b(a-citan)m(y)m(a)32 b(dengan)d(tabah)h(dan)f(menaruh)g(k)m(ep)s(erca)m
(y)m(a-)218 3432 y(an)h(serta)h(harapann)m(y)m(a)g(k)m(epadaMu.)218
3580 y(Demi)24 b(Y)-8 b(esus)24 b(Kristus,)h(Puteram)m(u,)g(T)-8
b(uhan)22 b(dan)h(p)s(engan)m(tara)i(k)-5 b(ami,)25 b(y)m(ang)218
3693 y(hidup)41 b(dan)i(b)s(erkuasa)g(b)s(ersama)g(dengan)g(Dik)-5
b(au)44 b(dalam)g(p)s(ersekutuan)218 3806 y(dengan)30
b(Roh)g(Kudus,)f(kini)h(dan)g(sepanjang)g(segala)i(masa.)p
0 TeXcolorgray 79 4006 a(U:)p 0 TeXcolorgray 46 w(Amin)p
0 TeXcolorgray -9 4153 2835 5 v 2068 4266 a Fa(A)n(ntonius)g(Budianto)p
0 TeXcolorgray eop end
PStoPSsaved restore
%%Page: (6,7) 4
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
612.000000 0.000000 translate
90 rotate
1.000000 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 468.000000 0 rlineto 0 612.000000 rlineto -468.000000 0 rlineto
 closepath}put initclip
/PStoPSenablepage false def
PStoPSxform concat
TeXDict begin 4 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -136
-446 a
SDict begin H.S end
 -136 -446 a 0 TeXcolorgray 0 TeXcolorgray -136
-446 a
SDict begin H.R end
 -136 -446 a -136 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 -136 -446 a 0 TeXcolorgray
-128 -331 a Fe(4)p -128 -294 2835 4 v 0 TeXcolorgray
0 TeXcolorgray -128 -36 a Fd(LITURGI)43 b(SABD)l(A)p
0 TeXcolorgray -128 55 a
SDict begin H.S end
 -128 55 a -128 55 a
SDict begin 13.6 H.A end
 -128 55
a -128 55 a
SDict begin [/View [/XYZ H.V]/Dest (section*.5) cvn /DEST pdfmark end
 -128 55 a 0 TeXcolorgray 118 x Fb(Bacaan)38
b(I)p 0 TeXcolorgray -128 233 a
SDict begin H.S end
 -128 233 a -128 233 a
SDict begin 13.6 H.A end

-128 233 a -128 233 a
SDict begin [/View [/XYZ H.V]/Dest (section*.6) cvn /DEST pdfmark end
 -128 233 a 0 TeXcolorgray -39 347
a Fe(U:)p 0 TeXcolorgray 46 w Fa(Ap)-5 b(akah)34 b(yang)f(dap)-5
b(at)35 b(memisahkan)f(kita)f(dari)h(cinta)f(kasih)g(Kristus)100
501 y Fe(P)m(em)m(bacaan)27 b(dari)f(surat)g(Rasul)g(P)m(aulus)g(k)m
(epada)h(umat)f(di)g(Roma)g(\(8:31b-)100 613 y(35,37-39\).)100
767 y(Jik)-5 b(a)38 b(Allah)g(di)f(pihak)g(kita,)k(siapak)-5
b(ah)38 b(y)m(ang)g(ak)-5 b(an)38 b(mela)m(w)m(an)h(kita?)63
b(Ia,)100 880 y(y)m(ang)36 b(tidak)g(men)m(y)m(a)m(y)m(angk)-5
b(an)37 b(Anak-Ny)m(a)g(sendiri,)f(tetapi)h(y)m(ang)f(men)m(y)m(e-)100
992 y(rahk)-5 b(anNy)m(a)20 b(bagi)h(kita)h(sem)m(ua,)h(bagaimanak)-5
b(ah)21 b(m)m(ungkin)f(Ia)g(tidak)h(meng-)100 1105 y(aruniak)-5
b(an)31 b(segala)j(sesuatu)d(k)m(epada)i(kita)f(b)s(ersama-sama)g
(dengan)g(Dia?)100 1218 y(Siapak)-5 b(ah)27 b(y)m(ang)g(ak)-5
b(an)28 b(menggugat)g(orang-orang)g(pilihan)e(Allah?)40
b(Allah,)100 1331 y(y)m(ang)25 b(mem)m(b)s(enark)-5 b(an)24
b(merek)-5 b(a?)39 b(Siapak)-5 b(ah)24 b(y)m(ang)i(ak)-5
b(an)24 b(mengh)m(ukum)g(me-)100 1444 y(rek)-5 b(a?)100
1597 y(Kristus)39 b(Y)-8 b(esus,)44 b(y)m(ang)e(telah)f(mati?)72
b(Bahk)-5 b(an)41 b(lebih)g(lagi:)63 b(y)m(ang)41 b(telah)100
1710 y(bangkit,)48 b(y)m(ang)d(juga)g(duduk)d(di)i(seb)s(elah)g(k)-5
b(anan)44 b(Allah,)49 b(y)m(ang)c(malah)100 1823 y(menjadi)25
b(P)m(em)m(b)s(ela)j(bagi)e(kita?)40 b(Siapak)-5 b(ah)27
b(y)m(ang)g(ak)-5 b(an)26 b(memisahk)-5 b(an)26 b(kita)100
1936 y(dari)21 b(k)-5 b(asih)20 b(Kristus?)37 b(P)m(enindasan)21
b(atau)g(k)m(esesak)-5 b(an)23 b(atau)e(p)s(engania)m(y)m(aan,)100
2049 y(atau)31 b(k)m(elaparan)g(atau)g(k)m(etelanjangan)i(,)d(atau)h
(baha)m(y)m(a,)h(atau)f(p)s(edang?)100 2202 y(T)-8 b(etapi)29
b(dalam)g(sem)m(uan)m(y)m(a)h(itu)f(kita)h(lebih)e(daripada)h(orang-)g
(orang)g(y)m(ang)100 2315 y(menang)f(baik)h(malaik)-5
b(at-malaik)g(at,)33 b(maupun)27 b(p)s(emerin)m(tah-p)s(emerin)m(tah,)
100 2428 y(baik)35 b(y)m(ang)h(ada)f(sek)-5 b(arang,)38
b(maupun)33 b(y)m(ang)j(ak)-5 b(an)35 b(datang,)j(atau)e(kuasa-)100
2541 y(kuasa,)26 b(baik)f(y)m(ang)h(di)f(atas,)i(maupun)c(y)m(ang)j(di)
e(ba)m(w)m(ah,)j(ataupun)d(sesuatu)100 2654 y(makhluk)h(lain,)j(tidak)f
(ak)-5 b(an)27 b(dapat)f(memisahk)-5 b(an)26 b(kita)i(dari)e(k)-5
b(asih)26 b(Allah,)100 2767 y(y)m(ang)31 b(ada)g(dalam)f(Kristus)g(Y)-8
b(esus,)31 b(T)-8 b(uhan)29 b(kita.)100 2920 y(Demikian)i(Sab)s(da)e(T)
-8 b(uhan)p 0 TeXcolorgray -39 3138 a(U:)p 0 TeXcolorgray
46 w(Amin)-128 3362 y Fc(L)j(agu)35 b(p)-5 b(engantar)34
b(Injil)p 0 TeXcolorgray -128 3613 a Fb(Bacaan)k(Injil:)49
b(\(Luk)m(as)36 b(23-33,39-43\))p 0 TeXcolorgray -128
3698 a
SDict begin H.S end
 -128 3698 a -128 3698 a
SDict begin 13.6 H.A end
 -128 3698 a -128 3698
a
SDict begin [/View [/XYZ H.V]/Dest (section*.7) cvn /DEST pdfmark end
 -128 3698 a 0 TeXcolorgray -4 3788 a Fe(I:)p 0 TeXcolorgray
46 w(T)-8 b(uhan)29 b(sertam)m(u)p 0 TeXcolorgray -39
4006 a(U:)p 0 TeXcolorgray 46 w(Dan)h(sertam)m(u)h(juga)p
0 TeXcolorgray -128 4153 2835 5 v -128 4266 a Fa(Misa)i(Pemb)-5
b(erkatan)p 0 TeXcolorgray eop end
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
612.000000 468.000000 translate
90 rotate
1.000000 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 468.000000 0 rlineto 0 612.000000 rlineto -468.000000 0 rlineto
 closepath}put initclip
PStoPSxform concat
TeXDict begin 9 8 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -18
-446 a
SDict begin H.S end
 -18 -446 a 0 TeXcolorgray 0 TeXcolorgray -18 -446
a
SDict begin H.R end
 -18 -446 a -18 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.9) cvn /DEST pdfmark end
 -18 -446 a 0 TeXcolorgray 2780
-331 a Fe(9)p -9 -294 2835 4 v 0 TeXcolorgray 218 -36
a(satu)26 b(tah)m(un)g(menghadapMu)g(kini)g(b)s(erbahagia)g(b)s
(ersamaMu)g(dan)g(p)s(ersa-)218 77 y(tuk)-5 b(anlah)23
b(k)-5 b(ami)24 b(k)m(elak)h(dengann)m(y)m(a)f(serta)g(para)f(kudus)f
(di)h(surga.)38 b(Dengan)218 190 y(p)s(eran)m(taraan)30
b(Kristus)g(T)-8 b(uhan)29 b(k)-5 b(ami,)p 0 TeXcolorgray
79 408 a(U:)p 0 TeXcolorgray 46 w(Amin.)p 0 TeXcolorgray
-9 702 a Fd(P)l(emb)t(erk)l(atan)44 b(Jenazah)p 0 TeXcolorgray
-9 793 a
SDict begin H.S end
 -9 793 a -9 793 a
SDict begin 13.6 H.A end
 -9 793 a -9 793 a
SDict begin [/View [/XYZ H.V]/Dest (section*.16) cvn /DEST pdfmark
end
 -9 793 a
0 TeXcolorgray 114 907 a Fe(I:)p 0 TeXcolorgray 46 w(Ibu-Bapak,)32
b(saudara-saudariku)e(sek)-5 b(alian)33 b(y)m(ang)f(terk)-5
b(asih)32 b(dalam)f(Kris-)218 1020 y(tus)38 b(T)-8 b(uhan.)63
b(Seb)s(en)m(tar)38 b(lagi)i(kita)f(ak)-5 b(an)39 b(b)s(erpisah)d
(secara)k(jasmani)e(de-)218 1133 y(ngan)26 b(Bapak)g(An)m(tonius)g
(Budian)m(to)h(y)m(ang)f(kita)h(k)-5 b(asihi)26 b(ini.)39
b(Mak)-5 b(a)27 b(dengan)218 1246 y(hati)43 b(y)m(ang)g(tabah,)i(kita)f
(mem)m(b)s(erik)-5 b(an)41 b(p)s(enghormatan)h(y)m(ang)h(terakhir)218
1359 y(k)m(epadan)m(y)m(a,)34 b(k)-5 b(arena)32 b(kita)h(b)s(erharap)d
(bah)m(w)m(a)j(ia)f(ak)-5 b(an)32 b(bangkit)h(b)s(ersama)218
1472 y(Kristus)26 b(y)m(ang)i(telah)f(diimanin)m(y)m(a)h(un)m(tuk)e(k)m
(ehidupan)g(y)m(ang)i(k)m(ek)-5 b(al.)41 b(Mak)-5 b(a)218
1585 y(air)27 b(suci)h(ak)-5 b(an)28 b(direciki)g(di)f(atas)h(dia)g
(sebagai)h(lam)m(bang)f(p)s(em)m(baptisann)m(y)m(a)218
1698 y(dan)37 b(jenazahn)m(y)m(a)j(ak)-5 b(an)38 b(didupai,)h(supa)m(y)
m(a)g(k)m(eharuman)f(amal)h(baktin)m(y)m(a)218 1811 y(di)30
b(dunia)f(ini)i(b)s(erk)m(enan)e(k)m(epada)i(T)-8 b(uhan.)p
0 TeXcolorgray 114 2029 a(I:)p 0 TeXcolorgray 46 w(Y)g(a)25
b(T)-8 b(uhan,)24 b(siramilah)g(ham)m(baMu)g(ini)g(Bapak)h(An)m(tonius)
f(Budian)m(to)g(y)m(ang)218 2142 y(masuk)30 b(k)m(e)h(alam)g(k)m(ek)-5
b(al,)32 b(dengan)e(air)h(k)m(ehidupan.)p 0 TeXcolorgray
79 2360 a(U:)p 0 TeXcolorgray 46 w(T)-8 b(erimalah)31
b(dia,)g(y)m(a)g(T)-8 b(uhan.)p 0 TeXcolorgray 114 2578
a(I:)p 0 TeXcolorgray 46 w(Supa)m(y)m(a)24 b(ia)g(hidup)e(bahagia)j
(selaman)m(y)m(a)g(b)s(ersama)e(para)h(kudusMu)e(dalam)218
2690 y(k)m(era)5 b(jaan)31 b(surga.)p 0 TeXcolorgray
79 2908 a(U:)p 0 TeXcolorgray 46 w(T)-8 b(erimalah)31
b(dia,)g(y)m(a)g(T)-8 b(uhan.)p 0 TeXcolorgray 114 3126
a(I:)p 0 TeXcolorgray 46 w(Dari)44 b(bumi)f(aku)h(b)s(erseru)e(k)m
(epadaMu,)49 b(y)m(a)44 b(T)-8 b(uhan.)81 b(Sudilah)42
b(Engk)-5 b(au)218 3239 y(mendengark)g(an)30 b(seruanku.)p
0 TeXcolorgray 79 3457 a(U:)p 0 TeXcolorgray 46 w(T)-8
b(erimalah)31 b(dia,)g(y)m(a)g(T)-8 b(uhan.)p 0 TeXcolorgray
114 3675 a(I:)p 0 TeXcolorgray 46 w(P)m(adaMu,)48 b(y)m(a)d(T)-8
b(uhan,)47 b(ada)e(p)s(engampunan)d(dosa)i(agar)h(sem)m(ua)g(orang)218
3788 y(mengab)s(di)29 b(k)m(epadaMu)i(dengan)g(hati)f(y)m(ang)i(gem)m
(bira.)p 0 TeXcolorgray 79 4006 a(U:)p 0 TeXcolorgray
46 w(T)-8 b(erimalah)31 b(dia,)g(y)m(a)g(T)-8 b(uhan.)p
0 TeXcolorgray -9 4153 2835 5 v 2068 4266 a Fa(A)n(ntonius)32
b(Budianto)p 0 TeXcolorgray eop end
PStoPSsaved restore
%%Page: (8,9) 5
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
612.000000 0.000000 translate
90 rotate
1.000000 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 468.000000 0 rlineto 0 612.000000 rlineto -468.000000 0 rlineto
 closepath}put initclip
/PStoPSenablepage false def
PStoPSxform concat
TeXDict begin 8 7 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -136
-446 a
SDict begin H.S end
 -136 -446 a 0 TeXcolorgray 0 TeXcolorgray -136
-446 a
SDict begin H.R end
 -136 -446 a -136 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.8) cvn /DEST pdfmark end
 -136 -446 a 0 TeXcolorgray
-128 -331 a Fe(8)p -128 -294 2835 4 v 0 TeXcolorgray
0 TeXcolorgray -128 -36 a Fb(Doa)37 b(P)m(ersiapan)h(P)m(ersembahan)p
0 TeXcolorgray -128 46 a
SDict begin H.S end
 -128 46 a -128 46 a
SDict begin 13.6 H.A end
 -128 46
a -128 46 a
SDict begin [/View [/XYZ H.V]/Dest (section*.12) cvn /DEST pdfmark
end
 -128 46 a 0 TeXcolorgray -4 143 a Fe(I:)p
0 TeXcolorgray 46 w(Allah)29 b(Bapa)h(sum)m(b)s(er)d(k)m(ekudusan,)i
(terimalah)h(bahan)e(p)s(ersem)m(bahan)g(ro-)100 256
y(ti)g(dan)f(anggur)g(y)m(ang)i(k)-5 b(ami)28 b(h)m(unjukk)-5
b(an)25 b(un)m(tuk)i(k)m(eselamatan)j(ham)m(baMu)100
369 y(Bapak)44 b(An)m(tonius)g(Budian)m(to)g(.)81 b(P)m(erk)m(enank)-5
b(anlah)44 b(dia)g(memasuki)g(ru-)100 482 y(mahMu)31
b(di)h(surga,)h(dan)f(an)m(ugerahk)-5 b(an)32 b(k)-5
b(ami)32 b(sem)m(ua)h(k)m(etekunan)g(dalam)100 595 y(p)s(engharapan.)39
b(Demi)31 b(Kristus)f(T)-8 b(uhan)29 b(dan)h(p)s(engan)m(tara)h(k)-5
b(ami.)p 0 TeXcolorgray -39 823 a(U:)p 0 TeXcolorgray
46 w(Amin.)p 0 TeXcolorgray -128 1090 a Fb(Doa)37 b(Syukur)f(Agung)p
0 TeXcolorgray -128 1172 a
SDict begin H.S end
 -128 1172 a -128 1172 a
SDict begin 13.6 H.A end
 -128
1172 a -128 1172 a
SDict begin [/View [/XYZ H.V]/Dest (section*.13) cvn /DEST pdfmark
end
 -128 1172 a 101 x Fc(Kudus)-128 1476
y(A)n(nak)f(Domb)-5 b(a)33 b(A)n(l)5 b(lah)p 0 TeXcolorgray
-128 1742 a Fb(Ajak)m(an)37 b(meny)m(ambut)g(k)m(omuni)p
0 TeXcolorgray -128 1824 a
SDict begin H.S end
 -128 1824 a -128 1824 a
SDict begin 13.6 H.A end
 -128
1824 a -128 1824 a
SDict begin [/View [/XYZ H.V]/Dest (section*.14) cvn /DEST pdfmark
end
 -128 1824 a 0 TeXcolorgray -4 1922
a Fe(I:)p 0 TeXcolorgray 46 w(Saudara-saudari)31 b(terk)-5
b(asih,)32 b(T)-8 b(uhan)31 b(Y)-8 b(esus)32 b(b)s(ersab)s(da;)f
("Datanglah)j(k)m(e-)100 2034 y(padaKu,)c(k)-5 b(alian)31
b(y)m(ang)g(telah)g(memikul)g(b)s(eban)e(b)s(erat,)i(mak)-5
b(a)31 b(Aku)f(ak)-5 b(an)100 2147 y(mem)m(b)s(erik)g(an)38
b(rasa)h(lega)h(k)m(epadam)m(u.")g(Beban)f(dosa)g(kitapun)f(ak)-5
b(an)39 b(di-)100 2260 y(hapus.)84 b(Mak)-5 b(a)46 b(b)s(erbahagialah)g
(kita)g(y)m(ang)g(diundang)e(k)m(e)i(p)s(erjam)m(uan)100
2373 y(T)-8 b(uhan.)p 0 TeXcolorgray -39 2602 a(U:)p
0 TeXcolorgray 46 w(Y)g(a)29 b(T)-8 b(uhan,)27 b(sa)m(y)m(a)j(tidak)e
(pan)m(tas)h(T)-8 b(uhan)27 b(datang)h(pada)g(sa)m(y)m(a,)j(tetapi)e(b)
s(er-)100 2715 y(sab)s(dalah)h(sa)5 b(ja,)31 b(mak)-5
b(a)31 b(sa)m(y)m(a)h(ak)-5 b(an)30 b(sem)m(buh.)-128
2951 y Fc(L)-5 b(agu)35 b(Komuni)p 0 TeXcolorgray -128
3217 a Fb(Doa)i(sesudah)g(k)m(omuni)p 0 TeXcolorgray
-128 3279 a
SDict begin H.S end
 -128 3279 a -128 3279 a
SDict begin 13.6 H.A end
 -128 3279 a -128
3279 a
SDict begin [/View [/XYZ H.V]/Dest (section*.15) cvn /DEST pdfmark
end
 -128 3279 a 0 TeXcolorgray -4 3396 a Fe(I:)p 0
TeXcolorgray 46 w(Marilah)31 b(b)s(erdoa,)100 3555 y(Allah)40
b(Bapa)g(sum)m(b)s(er)e(k)m(ehidupan,)j(k)-5 b(ami)40
b(telah)h(Engk)-5 b(au)39 b(segark)-5 b(an)40 b(de-)100
3668 y(ngan)25 b(san)m(tapan)h(k)m(ehidupan,)g(T)-8 b(ubuh)24
b(dan)h(Darah)h(Y)-8 b(esus)26 b(PutraMu.)39 b(Ke-)100
3780 y(hadiranNy)m(a)22 b(mem)m(b)s(eri)f(k)m(eteguhan)i(bagi)f(hidup)e
(k)-5 b(ami)22 b(sehari-hari)g(dalam)100 3893 y(b)s(erusaha)27
b(memen)m(uhi)h(k)m(ehendakMu)h(melalui)h(p)s(ela)m(y)m(anan)f(da)g(p)s
(ek)m(erjaan)100 4006 y(k)-5 b(ami.)76 b(Semoga)44 b(ham)m(baMu)e
(Bapak)h(An)m(tonius)f(Budian)m(to)h(y)m(ang)g(telah)p
0 TeXcolorgray -128 4153 2835 5 v -128 4266 a Fa(Misa)33
b(Pemb)-5 b(erkatan)p 0 TeXcolorgray eop end
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
612.000000 468.000000 translate
90 rotate
1.000000 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 468.000000 0 rlineto 0 612.000000 rlineto -468.000000 0 rlineto
 closepath}put initclip
PStoPSxform concat
TeXDict begin 5 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -18
-446 a
SDict begin H.S end
 -18 -446 a 0 TeXcolorgray 0 TeXcolorgray -18 -446
a
SDict begin H.R end
 -18 -446 a -18 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 -18 -446 a 0 TeXcolorgray 2780
-331 a Fe(5)p -9 -294 2835 4 v 0 TeXcolorgray 0 TeXcolorgray
114 -36 a(I:)p 0 TeXcolorgray 46 w(Inilah)30 b(Injil)g(Suci)g(Y)-8
b(esus)30 b(Kristus)g(men)m(urut)f(San)m(to)i(Luk)-5
b(as)p 0 TeXcolorgray 79 170 a(U:)p 0 TeXcolorgray 46
w(Dim)m(uliak)g(anlah)32 b(T)-8 b(uhan)p 0 TeXcolorgray
114 376 a(I:)p 0 TeXcolorgray 46 w Fa(Hari)27 b(ini)g(juga)h(engkau)f
(akan)h(ada)g(b)-5 b(ersama-sama)30 b(dengan)e(aku)g(di)f(dalam)218
489 y(\014r)-5 b(daus)218 638 y Fe(Ketik)g(a)23 b(merek)-5
b(a)22 b(sampai)g(di)g(tempat)h(y)m(ang)f(b)s(ernama)f(T)-8
b(engk)m(orak,)26 b(merek)-5 b(a)218 751 y(men)m(y)m(alibk)g(an)23
b(Y)-8 b(esus)23 b(di)f(situ)g(dan)g(juga)g(k)m(edua)h(orang)f(p)s
(enjahat)g(itu,)i(y)m(ang)218 864 y(seorang)31 b(di)f(seb)s(elah)g(k)-5
b(anan-Ny)m(a)32 b(dan)d(y)m(ang)j(lain)e(di)g(seb)s(elah)h(kiri-)f(Ny)
m(a.)218 1013 y(Seorang)25 b(dari)g(p)s(enjahat)g(y)m(ang)h(di)f(gan)m
(tung)h(itu)f(mengh)m(ujat)g(Y)-8 b(esus,)27 b(k)-5 b(ata-)218
1126 y(n)m(y)m(a:)49 b("Buk)-5 b(ank)g(ah)34 b(Engk)-5
b(au)33 b(adalah)i(Kristus?)50 b(Selamatk)-5 b(anlah)35
b(diri-Mu)218 1239 y(dan)c(k)-5 b(ami!)43 b(T)-8 b(etapi)33
b(y)m(ang)f(seorang)g(menegor)f(dia,)h(k)-5 b(atan)m(y)m(a:)45
b("Tidakk)-5 b(ah)218 1352 y(engk)g(au)33 b(takut,)i(juga)f(tidak)g(k)m
(epada)g(Allah,)h(sedang)e(engk)-5 b(au)34 b(menerima)218
1465 y(h)m(ukuman)h(y)m(ang)i(sama?)59 b(Kita)37 b(memang)f(sela)m(y)m
(akn)m(y)m(a)k(dih)m(ukum,)c(sebab)218 1578 y(kita)f(menerima)e
(balasan)h(y)m(ang)h(setimpal)f(dengan)g(p)s(erbuatan)e(kita,)k(te-)218
1691 y(tapi)31 b(orang)f(ini)h(tidak)g(b)s(erbuat)e(sesuatu)h(y)m(ang)h
(salah.")218 1840 y(Lalu)i(ia)h(b)s(erk)-5 b(ata)34 b(k)m(epada)g(Y)-8
b(esus:)48 b("Y)-8 b(esus,)35 b(ingatlah)f(ak)-5 b(an)34
b(aku,)h(apabi-)218 1953 y(la)41 b(Engk)-5 b(au)40 b(datang)h(sebagai)h
(Ra)5 b(ja.")42 b(Kata)f(Y)-8 b(esus)41 b(k)m(epadan)m(y)m(a:)62
b("Aku)218 2066 y(b)s(erk)-5 b(ata)39 b(k)m(epadam)m(u,)i(sesungguhn)m
(y)m(a)d(hari)h(ini)f(juga)h(engk)-5 b(au)39 b(ak)-5
b(an)39 b(ada)218 2178 y(b)s(ersama-sama)31 b(dengan)f(Aku)g(di)g
(dalam)g(Firdaus")218 2328 y(Demikianlah)h(Injil)f(T)-8
b(uhan)p 0 TeXcolorgray 79 2534 a(U:)p 0 TeXcolorgray
46 w(T)g(erpujilah)29 b(Kristus)p 0 TeXcolorgray -9 2776
a Fb(Homili)p 0 TeXcolorgray -9 2835 a
SDict begin H.S end
 -9 2835 a -9 2835
a
SDict begin 13.6 H.A end
 -9 2835 a -9 2835 a
SDict begin [/View [/XYZ H.V]/Dest (section*.8) cvn /DEST pdfmark end
 -9 2835 a 0 TeXcolorgray 116 x
Fb(Doa)36 b(Umat)p 0 TeXcolorgray -9 3010 a
SDict begin H.S end
 -9 3010 a
-9 3010 a
SDict begin 13.6 H.A end
 -9 3010 a -9 3010 a
SDict begin [/View [/XYZ H.V]/Dest (section*.9) cvn /DEST pdfmark end
 -9 3010 a 0 TeXcolorgray
114 3123 a Fe(I:)p 0 TeXcolorgray 46 w(Y)-8 b(a)43 b(Allah)f(y)m(ang)h
(Maha)f(m)m(urah,)j(Engk)-5 b(au)41 b(adalah)i(sum)m(b)s(er)d(k)m
(ehidupan)218 3236 y(k)-5 b(ami)36 b(y)m(ang)g(selalu)h(setia)g(men)m
(un)m(tun)d(segala)k(langk)-5 b(ah)36 b(k)m(ehidupan)f(k)-5
b(ami)218 3349 y(di)28 b(k)-5 b(ala)29 b(suk)-5 b(a)28
b(maupun)f(duk)-5 b(a.)39 b(Kami)28 b(p)s(erca)m(y)m(a,)j(b)s(ersama)d
(dengan)g(Dik)-5 b(au)218 3461 y(k)g(ami)38 b(mampu)e(un)m(tuk)h(mem)m
(buat)g(hidup)f(ini)h(menjadi)g(makin)h(b)s(ermak-)218
3574 y(na.)i(Karena)30 b(itu)g(y)m(a)h(T)-8 b(uhan,)29
b(sudilah)g(Engk)-5 b(au)30 b(mendengark)-5 b(an)29 b(doa-doa)218
3687 y(umatMu)h(y)m(ang)h(b)s(erhimpun)d(di)i(sini.)p
0 TeXcolorgray 85 3893 a(P:)p 0 TeXcolorgray 46 w(Allah,)39
b(Bapa)e(k)-5 b(ami)37 b(di)f(dalam)h(surga,)h(k)m(epadaMu)f(k)-5
b(ami)37 b(men)m(y)m(erahk)-5 b(an)218 4006 y(Bapak)22
b(An)m(tonius)g(Budian)m(to)h(y)m(ang)f(k)-5 b(ami)22
b(k)-5 b(asihi)22 b(ini.)38 b(Engk)-5 b(au)22 b(telah)g(men-)p
0 TeXcolorgray -9 4153 2835 5 v 2068 4266 a Fa(A)n(ntonius)32
b(Budianto)p 0 TeXcolorgray eop end
PStoPSsaved restore
%%Page: (10,11) 6
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
612.000000 0.000000 translate
90 rotate
1.000000 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 468.000000 0 rlineto 0 612.000000 rlineto -468.000000 0 rlineto
 closepath}put initclip
/PStoPSenablepage false def
PStoPSxform concat
TeXDict begin 6 5 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -136
-446 a
SDict begin H.S end
 -136 -446 a 0 TeXcolorgray 0 TeXcolorgray -136
-446 a
SDict begin H.R end
 -136 -446 a -136 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.6) cvn /DEST pdfmark end
 -136 -446 a 0 TeXcolorgray
-128 -331 a Fe(6)p -128 -294 2835 4 v 0 TeXcolorgray
100 -36 a(ciptak)-5 b(an)36 b(dan)e(menempatk)-5 b(an)36
b(dia)f(di)g(dunia)g(ini)g(un)m(tuk)f(mengab)s(di)h(k)m(e-)100
77 y(padaMu)26 b(dan)f(sesaman)m(y)m(a.)41 b(Engk)-5
b(aulah)26 b(y)m(ang)h(memanggil)h(dia.)39 b(Semoga)100
190 y(ia)28 b(pan)m(tas)g(b)s(ertem)m(u)f(dengan)g(Dik)-5
b(au)28 b(dan)f(b)s(erbahagia)g(b)s(ersama)g(Engk)-5
b(au)100 302 y(di)30 b(surga.)100 453 y(Marilah)h(kita)g(memohon)p
0 TeXcolorgray -39 665 a(U:)p 0 TeXcolorgray 46 w(Kabulk)-5
b(anlah)30 b(doa)g(k)-5 b(ami,)31 b(y)m(a)g(T)-8 b(uhan)p
0 TeXcolorgray -33 878 a(P:)p 0 TeXcolorgray 46 w(Semoga)40
b(Engk)-5 b(au)40 b(dengan)f(m)m(urah)g(hati)i(mengasihani)f(dia)g(y)m
(ang)g(telah)100 991 y(k)m(em)m(bali)32 b(k)m(epadam)m(u.)100
1141 y(Marilah)f(kita)g(memohon)p 0 TeXcolorgray -39
1353 a(U:)p 0 TeXcolorgray 46 w(Kabulk)-5 b(anlah)30
b(doa)g(k)-5 b(ami,)31 b(y)m(a)g(T)-8 b(uhan.)p 0 TeXcolorgray
-33 1566 a(P:)p 0 TeXcolorgray 46 w(Semoga)25 b(ia)f(y)m(ang)h(telah)f
(Kau)g(m)m(urnik)-5 b(an)23 b(dengan)g(air)h(p)s(ermandian,)g(tetap)100
1679 y(Kau)30 b(sucik)-5 b(an)30 b(pula)g(dengan)g(k)m(em)m(urahan)g(b)
s(elask)-5 b(asihanMu.)100 1829 y(Marilah)31 b(kita)g(memohon)p
0 TeXcolorgray -39 2041 a(U:)p 0 TeXcolorgray 46 w(Kabulk)-5
b(anlah)30 b(doa)g(k)-5 b(ami,)31 b(y)m(a)g(T)-8 b(uhan.)p
0 TeXcolorgray -33 2254 a(P:)p 0 TeXcolorgray 46 w(Semoga)27
b(ia)g(y)m(ang)g(selama)h(hidupn)m(y)m(a)d(memp)s(erjuangk)-5
b(an)25 b(k)m(eb)s(enaran,)i(k)m(e-)100 2367 y(adilan,)k(cin)m(ta)g(k)
-5 b(asih)31 b(dan)f(damai,)g(Kau)g(b)s(eri)g(pahala)h(di)f(surga.)100
2517 y(Marilah)h(kita)g(memohon)p 0 TeXcolorgray -39
2730 a(U:)p 0 TeXcolorgray 46 w(Kabulk)-5 b(anlah)30
b(doa)g(k)-5 b(ami,)31 b(y)m(a)g(T)-8 b(uhan.)p 0 TeXcolorgray
-33 2942 a(P:)p 0 TeXcolorgray 46 w(Semoga)31 b(di)f(akhirat,)h(ia)f
(Kau)g(b)s(eri)g(tempat)g(y)m(ang)h(ten)m(teram)h(dan)d(terang)100
3055 y(b)s(ersama)h(dengan)g(orang-orang)h(kudusMu.)100
3205 y(Marilah)g(kita)g(memohon)p 0 TeXcolorgray -39
3418 a(U:)p 0 TeXcolorgray 46 w(Kabulk)-5 b(anlah)30
b(doa)g(k)-5 b(ami,)31 b(y)m(a)g(T)-8 b(uhan.)p 0 TeXcolorgray
-33 3630 a(P:)p 0 TeXcolorgray 46 w(Semoga)34 b(k)-5
b(ami)34 b(y)m(ang)h(b)s(ersedih)d(hati)i(atas)h(k)m(ematiann)m(y)m(a,)
i(terutama)e(k)m(e-)100 3743 y(luarga)f(y)m(ang)g(b)s(erduk)-5
b(a,)33 b(Kau)g(hibur)e(dengan)i(harapan)g(ak)-5 b(an)34
b(p)s(ersatuan)100 3856 y(k)m(elak)e(di)e(surga.)100
4006 y(Marilah)h(kita)g(memohon)p 0 TeXcolorgray -128
4153 2835 5 v -128 4266 a Fa(Misa)i(Pemb)-5 b(erkatan)p
0 TeXcolorgray eop end
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
612.000000 468.000000 translate
90 rotate
1.000000 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 468.000000 0 rlineto 0 612.000000 rlineto -468.000000 0 rlineto
 closepath}put initclip
PStoPSxform concat
TeXDict begin 7 6 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -18
-446 a
SDict begin H.S end
 -18 -446 a 0 TeXcolorgray 0 TeXcolorgray -18 -446
a
SDict begin H.R end
 -18 -446 a -18 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.7) cvn /DEST pdfmark end
 -18 -446 a 0 TeXcolorgray 2780
-331 a Fe(7)p -9 -294 2835 4 v 0 TeXcolorgray 0 TeXcolorgray
79 -36 a(U:)p 0 TeXcolorgray 46 w(Kabulk)-5 b(anlah)30
b(doa)g(k)-5 b(ami,)31 b(y)m(a)h(T)-8 b(uhan.)p 0 TeXcolorgray
114 203 a(I:)p 0 TeXcolorgray 46 w(Allah)26 b(y)m(ang)g(k)m(ek)-5
b(al)27 b(dan)d(kuasa,)j(Engk)-5 b(au)25 b(senan)m(tiasa)i(men)m(y)m(a)
m(y)m(angi)h(umat-)218 316 y(Mu.)71 b(Engk)-5 b(aulah)41
b(k)m(ebahagiaan)h(bagi)g(sem)m(ua)f(orang)g(y)m(ang)g(meninggal)218
429 y(dalam)27 b(Dik)-5 b(au.)40 b(Semoga)28 b(dalam)g(k)m(erahimanMu)f
(b)s(eristirahatlah)g(Bapak)218 542 y(An)m(tonius)42
b(Budian)m(to)g(y)m(ang)h(k)-5 b(ami)42 b(k)-5 b(asihi.)75
b(Kabulk)-5 b(anlah)41 b(dengan)g(rela)218 655 y(doadoa)31
b(k)-5 b(ami)31 b(ini.)40 b(Demi)31 b(Kristus,)f(T)-8
b(uhan)30 b(dan)f(P)m(engan)m(tara)k(k)-5 b(ami.)p 0
TeXcolorgray 79 894 a(U:)p 0 TeXcolorgray 46 w(Amin)p
0 TeXcolorgray -9 1219 a Fd(LITURGI)43 b(EKARISTI)p 0
TeXcolorgray -9 1316 a
SDict begin H.S end
 -9 1316 a -9 1316 a
SDict begin 13.6 H.A end
 -9 1316 a
-9 1316 a
SDict begin [/View [/XYZ H.V]/Dest (section*.10) cvn /DEST pdfmark
end
 -9 1316 a 123 x Fc(L)-5 b(agu)35 b(Persemb)-5
b(ahan)p 0 TeXcolorgray -9 1721 a Fb(P)m(ersiapan)37
b(P)m(ersembahan)p 0 TeXcolorgray -9 1805 a
SDict begin H.S end
 -9 1805 a
-9 1805 a
SDict begin 13.6 H.A end
 -9 1805 a -9 1805 a
SDict begin [/View [/XYZ H.V]/Dest (section*.11) cvn /DEST pdfmark
end
 -9 1805 a 0 TeXcolorgray
114 1905 a Fe(I:)p 0 TeXcolorgray 46 w(T)-8 b(erpujilah)32
b(Engk)-5 b(au)32 b(y)m(a)h(T)-8 b(uhan,)33 b(Allah)g(semesta)g(alam,)i
(sebab)d(dari)g(k)m(e-)218 2018 y(m)m(urahanMu,)41 b(k)-5
b(ami)40 b(menerima)g(roti)g(y)m(ang)h(k)-5 b(ami)40
b(siapk)-5 b(an)40 b(ini.)68 b(Inilah)218 2131 y(hasil)26
b(dari)g(bumi)f(dan)g(dari)h(usaha)f(man)m(usia)h(y)m(ang)h(bagi)g(k)-5
b(ami)26 b(ak)-5 b(an)26 b(men-)218 2244 y(jadi)k(roti)h(k)m(ehidupan.)
p 0 TeXcolorgray 79 2484 a(U:)p 0 TeXcolorgray 46 w(T)-8
b(erpujilah)29 b(Allah)i(selama-laman)m(y)m(a)p 0 TeXcolorgray
114 2723 a(I:)p 0 TeXcolorgray 46 w(T)-8 b(erpujilah)32
b(Engk)-5 b(au)32 b(y)m(a)h(T)-8 b(uhan,)33 b(Allah)g(semesta)g(alam,)i
(sebab)d(dari)g(k)m(e-)218 2836 y(m)m(urahanMu,)26 b(k)-5
b(ami)25 b(menerima)h(anggur)f(y)m(ang)h(k)-5 b(ami)26
b(siapk)-5 b(an)25 b(ini.)39 b(Inilah)218 2949 y(hasil)c(dari)g(p)s
(ohon)f(anggur)h(dan)f(dari)h(usaha)g(man)m(usia)g(y)m(ang)h(bagi)g(k)
-5 b(ami)218 3062 y(ak)g(an)30 b(menjadi)g(min)m(uman)g(rohani.)p
0 TeXcolorgray 79 3301 a(U:)p 0 TeXcolorgray 46 w(T)-8
b(erpujilah)29 b(Allah)i(selama-laman)m(y)m(a)p 0 TeXcolorgray
114 3541 a(I:)p 0 TeXcolorgray 46 w(Berdoalah)41 b(saudara-saudari,)i
(supa)m(y)m(a)e(p)s(ersem)m(bahanku)d(dan)i(p)s(ersem-)218
3654 y(bahanm)m(u)29 b(b)s(erk)m(enan)h(pada)g(Allah)h(Bapa)g(y)m(ang)g
(Mahakuasa.)p 0 TeXcolorgray 79 3893 a(U:)p 0 TeXcolorgray
46 w(Semoga)g(p)s(ersem)m(bahan)d(ini)i(diterima)g(demi)g(k)m(em)m
(uliaan)h(T)-8 b(uhan)29 b(dan)g(k)m(e-)218 4006 y(selamatan)j(kita)f
(serta)g(seluruh)e(umat)h(Allah)h(y)m(ang)g(kudus.)p
0 TeXcolorgray -9 4153 2835 5 v 2068 4266 a Fa(A)n(ntonius)h(Budianto)p
0 TeXcolorgray eop end
PStoPSsaved restore
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
