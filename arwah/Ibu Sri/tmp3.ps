%!PS-Adobe-2.0
%%Creator: dvips(k) 5.98 Copyright 2009 Radical Eye Software
%%Title: 100hari.dvi
%%CreationDate: Wed Jun  9 12:01:58 2010
%%Pages: 6 0
%%PageOrder: Ascend
%%DocumentFonts: Palatino-BoldItalic CMR10 CMSSBX10 CMTI10 CMSY10
%%EndComments
%%BeginProcSet: PStoPS 1 15
userdict begin
[/showpage/erasepage/copypage]{dup where{pop dup load
 type/operatortype eq{ /PStoPSenablepage cvx 1 index load 1 array astore cvx {} bind /ifelse cvx 4 array astore cvx def}{pop}ifelse}{pop}ifelse}forall /PStoPSenablepage true def
[/letter/legal/executivepage/a4/a4small/b5/com10envelope
 /monarchenvelope/c5envelope/dlenvelope/lettersmall/note
 /folio/quarto/a5]{dup where{dup wcheck{exch{}put}
 {pop{}def}ifelse}{pop}ifelse}forall
/setpagedevice {pop}bind 1 index where{dup wcheck{3 1 roll put}
 {pop def}ifelse}{def}ifelse
/PStoPSmatrix matrix currentmatrix def
/PStoPSxform matrix def/PStoPSclip{clippath}def
/defaultmatrix{PStoPSmatrix exch PStoPSxform exch concatmatrix}bind def
/initmatrix{matrix defaultmatrix setmatrix}bind def
/initclip[{matrix currentmatrix PStoPSmatrix setmatrix
 [{currentpoint}stopped{$error/newerror false put{newpath}}
 {/newpath cvx 3 1 roll/moveto cvx 4 array astore cvx}ifelse]
 {[/newpath cvx{/moveto cvx}{/lineto cvx}
 {/curveto cvx}{/closepath cvx}pathforall]cvx exch pop}
 stopped{$error/errorname get/invalidaccess eq{cleartomark
 $error/newerror false put cvx exec}{stop}ifelse}if}bind aload pop
 /initclip dup load dup type dup/operatortype eq{pop exch pop}
 {dup/arraytype eq exch/packedarraytype eq or
  {dup xcheck{exch pop aload pop}{pop cvx}ifelse}
  {pop cvx}ifelse}ifelse
 {newpath PStoPSclip clip newpath exec setmatrix} bind aload pop]cvx def
/initgraphics{initmatrix newpath initclip 1 setlinewidth
 0 setlinecap 0 setlinejoin []0 setdash 0 setgray
 10 setmiterlimit}bind def
end
%%EndProcSet
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o 100hari.ps 100hari.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2010.06.09:1201
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 90 2009-01-30 10:58:51Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.06, 2009/01/30
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionaray
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
/Rand { rand 4294967295 div } def		% a real random number
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/PenroseFill {%	 on stack: scaling factor
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
  pop pop 
} def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
%/NArray { 
%   aload length 2 div dup dup cvi eq not { exch pop } if /n exch
%   cvi def 
%} def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  showpoints { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED /c ED /n ED 
  cvi dup 1 lt { pop 1 } if 
  /s ED 
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if
  /dx ED dy div round dy mul 
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput { 
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
} def
%
/BeginOL { 
  dup (all) eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 26 2008-06-14 11:50:02Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.01, 2008/01/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.12
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower IsEndingFactor { pop exit } if} loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
end

% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 26 2008-06-14 11:50:02Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2008/04/18
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def

end
/PSTricksDotFont exch definefont pop

%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 90 2009-01-30 10:58:51Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.02, 2009/01/30.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
end
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  /next ED 			% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge { 
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  GetEdgeA GetEdgeB GetArmA GetArmB mark 
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  GetEdgeA GetArmA 
  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
  GetEdgeB 
  mark 
  xB1 yB1 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def
 
@fedspecial end
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/UniqueID 5096651 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 15 /bullet put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B15A0
657F5ED27D204449A841ED19E01432CFFE928E921321113780D036D34F2797DE
D4459CFD15BB117B5C9745EF3CD2B296D91FAD48C80B136D94476967E255F808
AD2B5D522ADEC64176833756510391815A1D4A8DA1D0AEE7CAD36A1D161889F2
3347D5B6BC503300FDDD48F594F391D5FB42C42113C538E707C16EE24A3F375E
7C506E8F49CE50FF9DEF3B4A4C1BEB3848EAA3477349833BA22D2A9012287D8B
A8C4CB4307A1188ACC0E6E9338E1559BE5FAFF381BD82A6C71C267409468B3C0
2C1A29F4281D565836EAE57F680490FEA4A952FF64C8CD11C377C294DCD1EC25
CEFB2B6DCE959D0208F85B6E32E9B44FD455F9B134A5306D95EA29F37BB8B86D
9E592159338E1293F449380E13C21AE42E692F6C00B521F7AB2F32545952358F
0D39246DE215D0A7EE67F377E81F9E65B25658B7FD97FAF98C7EA9161530404B
62B9AB7A91C863095D5433BB06F9A29488DA84D58A1394AD7878BB27E3CF4AF1
BC29DC64F319758518AB652F9E8BCA586D3D2021CA860F84DC0A2F61A93B6B44
F08A7F7C5F36FEE9F5D450D19F72C09580DDE2B3747D8A1054981BAEF31D6C42
040D7D5F37DE6DE019849E7C7754DD27E9511F9A9AFA4FB727695444F739448F
3D2021
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.0: CMTI10 003.002
%%Title: CMTI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI10 known{/CMTI10 findfont dup/UniqueID known{dup
/UniqueID get 5000828 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI10 def
/FontBBox {-35 -250 1124 750 }readonly def
/UniqueID 5000828 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI10.) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 48 /zero put
dup 52 /four put
dup 65 /A put
dup 68 /D put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C5FD29DA32D34C95E
2AB2ADB3F60EEB0600C8ADE15A2380DE10AC5AAD585FBD13097B1A7E8E210D4A
EE96785449E07F0C8EBC2EC5EFBFD0897DFDC15E5BFAC9584D8DE95C5AB288CD
8AD8B9BEF0B8E5F887B3B0B331542FC8184DCCB753DB6ACEEF98B85756B988DF
CAF1AE0DBE7D37D5F44A2E760AAE3A5197C27B15E32275A64946C3E4D0476FD2
7FDE148C788DD2106F7C825E270588AC05B57E625AB17BDD02306F9E5FC851DC
32A5A6EDC43C770A71419B2C0C8074EF3F222C8A2097CD81A91F333A521B3A09
482A4FE1CB231CE344AD126AA284C3280AAC3AD162CF0EE241BFB4C8F20502FF
118507F5D1B5FD898571015E73E5CF2281085072E00D401F6F59761EEC3E8381
1F26F75DB66C504AB6BABA87D121B1E7040A07AA2FE01F80DBC246CC03C4B2DC
C2A715980C52B7F96BC1A78FCC7F4F52EEED5F705E08FC1E5BBFCAD121FA88AA
8EBE58172C162AF409DBB0728F14923ED02A65EA24E5D52B6AD07777455A70A4
61833D3789C719BA92E901232599767E423D5AD9C807670BE0E7B5CFF8256A20
C7BF7214FFE0342809570F5966A2C43E784F35015D9040BA34FEAB6A6F089504
3A40A9E9D711A2721D3F4998371430FB3C94BFC619559B97D49627BB630F4B70
9D0A8FE4E916235335C3962F3CFDB04C4A3CF714DB5E260F4E66FFF2F27CEF2A
D4AA26BBCAED23B8BDC98F8F453BA27AD7758537561E766B82DC3032E92A9EB0
125D98A22C5466AF069BF72A9BFA052A8628FEC6A6AD0B711DFFEDE3AA2D7CE8
34EA487038EF50F953B8B4471CBA6FC3C53877EC1BC94582B1123EDF44B4056A
30F49394BDE22CDAD7F01951C7013D26979277D18EFA594E8F4F2B5E615187D9
39E842EC28461B9ABA52020A127D2CB9002A673A435B13C10602EEFDBBA6BD49
9DDEAB9E68D655443A5C2492BA061C1391A51592BA8C353A6F6A0708E8860184
2B5D031D2CAB87D618E9F6F7A0BF3F66B3FD5A25BB91F7F1F5F99CFF56EFF4FF
0A35C55658001ED2E97B26C869292F6274D433A5443179DBB8EE987196306348
3F9E87C6422AFFDD30080C9AC4EE7FE5E2DCBFEE4974331F4AAE479FD8806D4D
9C2B85FC69EB0453AD827A1E767E5C484BDFBF5C8D6E2B3C96298B390F22D757
802643A79D5E29CF3AEDF0E12CFBECA4663444FC87F2027571DBA9ECF688BF28
FF0DDB3AEDBA0FB28447CB4B5D5205F40C1E7A525FD7373392EEFFD910AC82D0
98E71660A1B3227C4A2592F3E853CA4CDF64DF19A52582E167234F4036FAAAB9
5446BE102DE2BF43E82F0112C2A20F15A3F92C6571AC761665A905362C4F8BDF
AC8705519C99862CD9C0D75113C4AB5FBB83C880E46B82715B5628890D9103AD
A2329638B95D93C4DECDC5E6C588C9D5183EE6FC28FAF9825F02DCA567306D93
5440987A81B51EE7291107A08F201C609FEF91A8F0587E8B13D4BAF74A5A6815
DE9E4441F46AF8E1DDDFA2D611C889614040B144A5EC064DEE4638C04EAB2E37
4CA8F50FB8C4D65BB296DCCCD39F1F554CFBED96670A91F515CA10EF896874BC
8EF48C6447752C70FF5A06F928DB55586354076773BFF7E94C4C3A7A1C1F421B
A9B4E3936EC26E0C19BBBFC90F021E877F54B62108F6DD1C7F6D5B8E64FC9362
E173F01BF2904B7E5A08B3543611562C2714099DE7D4FA330DB148B560A9601F
42A84452811CE213DCE782A0D7809CFD954D6BC1EBF2BA4D1B18F50FA8174C96
3E0120E266AD5DDB40B3F6798AC28CDC5C3C4BC34583528F5B5DC8A222B80B59
A3A93DC715D061EC6915E6E6E21A25425C25E8747C60F170D61047108826F96F
7830E220C108B441B6EA3198E33C49BAD8D43086E49F5A2BC7958A1A8CD011C4
49045193394696EC3DDD0BE084E8F2E9F0B9496F035C0DEC1CE11409DF566428
D50043CFF5CDD1092F6E0807E660B68163BCA738E8D98FC6EE3F713164CD204C
0BA84FFF4F33F47BC31750B448603D7ADB9AE92FA91AEBBBEC0DCD66980E6955
CEB425ED07115B24E40F53B29B9D840842EAC691B4F591F866DF27556474B485
1C6F53DD72499847109B16C7093984A6B8487D4F3870DD517945CD90E648C1BB
8A6861E540FCF9D75B984B5009B5CC760CBE297042C240DD624111670B703388
6FE6FC0E89C6B4C88F51DFF3913D0CC1FB4770C8CBEADD4B86393605C0B6C468
83CA5594754411B6FC331EF56D7CD6D247FAE42E966583C29239A8F862348D29
60B177984B6B957E733DB4D275015691D91443BBB13C2DA96097A29733CDB284
42F89C85A7A743338C9DD3BBC4EE53F695E5163E6E1ABE5791ABF100B198B9B2
1C21E2FA2FB4AFE7F9BB2D381260CDD3A2CC05BF513AA1E80ED69FA27BC5ED5A
21445BF00BC2F997B356D94AF13736C6D3B0613EB6F4CD96A685FEB672661DCA
206105EDC3CA07900676EB2FAB37F48D2E8207BDE1463894DA3C5B1488AC1EE9
D39DAF691648048F5D7A384B8927F8DA2BE3602669F71D80686E427F395134E7
7ADCC611BA91AD4B7A0237213C60CF2C905359C90795230344FC3C50A22BD44B
55B2044792509F50F5C21F53D9F9E9F063ADBED3AB99E2613B23334FE8DF70B4
6120F2EDF69F50BE793EE145B9FF9C73179DE640FC2ACEB5C6617F918CEEB762
4CD81E665B2E544864D13230B058717B207D3CC5D6647D5343DB4D0356082392
871EFFA896631A7E0D6477942B632074A9A4EF7B09D4701B1639BAAB4E03A40E
9B54A7A4F845CD63F88831EBFA4FB847847CB98F3455CB5957F2E0A0F5623645
DBB5C5564C7F8B117D6E27E65C0F3EA81AE67B4AE4B201E7C4FB0A8364FE53F5
41A7CE8F834C2C4B322809B353A5E63BBA7BF3B7DC1A85EA700BD287C2BD3FC8
2832B0BB4695FC937FF5EF06FCD87DCE6DE793C2B1EE10E6450352C17726155F
220D550B1759E15AB2C1D5968E52C8080CD280E99D3CCC0E80C2EF8BBFD96001
A226FEED7311EFB4B67F424B557A877379A15BCA54780F0CD2CCA00400B9B39D
981C6B552AFD2506D1B23618FA9AE6D8143CD7198A8482CB416CCE62B992347F
337D505A4078713BBD91E5535BD58EF0351EBDCD749CC24D4AD39F8CECD7D6C8
139756680A4C03A58B3374CEC658D30160AE4863A3938A891BB59CBE02BB451B
1BA4B2B6E68AB61DEB85F95E3C909B8B66E220B9F18280161C279F10F7093CDC
100A53D542F071CC0A5AF834DC1D18738F5DD62A5573E884E1FFD22BD810828A
1EA47F8218C15A2E97CBC609927DA3CC2B802EA4A0D7EB57627C135E3B065905
F97597D818A2C5CC6F328AD25AD11FA50F1E4FE637980B7474D6F85A521892FB
72989AABEBE02A2D0EFE88A6F67AC29F5D8DDFEDAAF465C439983C6B84389FF7
A6434462BEB7B07DBE4BBA61ACD4A60C55B5C0AAE527DE381DFECA2E6BAFDC8D
310364ECB42CAFF72BA93C067B2F02D1CA7C34AE7CDC46787A0E234C8BE8A928
7A6F3DDE0338FAD532A9886E8E3525B85DD39364AB03EC4C0DD25DC179CC1989
1BE232E387E857C78332D834679195E10F1E7B87B7966DA3B2238F53D1E13FE2
8F55ED6A92A750C7250C9B91E29796621E7E9520373214D7DA81B2875A986D33
80382AFF6DE1F829F048E57664D9C4ACE91E4684A51023943A4964AB5657D610
3A5405EFD4CFD1EBA684243E15093C9667797BB47617B66054EE02C41FFEC45C
C1BAE8AD56B00D323FCB1D2744F061FA16E161988741A319B1564E04BA210996
4F9F02A3268CABE450D166A763F5284954564A1C86B76544C5F5ACDFE0D758DB
865A1CFCF9FE8CD5F9C3B2998C56468FD52DF8EE60C6935A3D221EAEC7714E3B
301371C7DDA0B03A2416238F2B47BAD3A2C5021C886DF51C695AF9C87A864B48
3BB3FE0B355EED5454B59B25A0D8A1B8CBD356C24F64D9B55E16C30C011365C9
1E0380753BA3EDC0868788D5F50B9353D0227BCEE1BE36998B2622C0759BD66B
E4444250589F9CEDE766D8B940770CB6B89503E925B35C00CBEC2873D2DC4A29
0823FB7A3717B69A7DEDBAAECC067949932728E89BEECAA91DE3AF9BF070B9C0
30EEFA8C0A55C8388CAA2F0515915C98E67FA095BB98967D14B0DCAFA9622E4E
2E0EBFC768D80585ACDF28D8A5C2B6EE2FE7AAF62FFB90F569F84A0903996DF0
C1D5723366C436E4088F3E2BB9B47F9789052A71CF5C49908CDC1DDA194BFB89
14D7E3D7D4D72A150FD6FFD8303E9DE5A97A71B808B8BDF2AE466F31BF5D7A4A
44F81230BBE2B456A221E2F72A8B59F8FEA8D31F8A005A5BD93B9F49CFDC3DCC
CE2B67090460F632271C7157BDC2F05BC2749FD562FC28682A616A52D1B67654
DF78B7843A9EC26A7DE2EB168F874904C2915B97534B2D4D9F74A9573A771D34
9F7BC855E8F794621BF6AD471BCC347E2DF5F620F5C209E33A4CBF1EA85AEA87
4492A77342DD33EF615FF34037D660B713C908786D9022051B825226545827A3
2AD1B05D654DB6E6D261B4E8AF0933AD1F0FCFC7201E1A7C1B4199F160C38676
21ABA2DDF1CEB655B3EC3226E0B122976EEA998F7A5241F062E54AD1DFD6ED26
47C99A439E0AE95415059179867CDD3F0FF751F3141309F40E00A6C7C28433E4
F649BCD5DAA64177580E05C495EE7BCBCC5FBF104DAF360CC2711386655B26F9
D349D887EEB32ADE595241560FD5924A1745A22E6A01DB9C285EF14596EBFF0F
03F36EB2E0A7C3864F819EF7B0855121292D49482F046A55CD7271FE03F02EA5
886864D9D8EC22A68C23089EAEFFF03DED6484D8C341861EF8B6FD3C5BDF5AC8
352DA4E13A1E30D0CB71E090E9CFB9AB2CAFD0CA7C34AE7D8E3B2EB4666834BD
9CCD1AC2108348AFEF6071796F4BB2FFA4A67ED917E76A109FA2DC2A30D744A0
9AE653A748C1D18FB52595D84E87F1C1FB6B2F32667FE203262C66627AEFFED3
92B23861E5EB238BB4EDCE09DAE1C65BAFC198CDD1B45D42CDF93E16BB82D35F
821E9E49067E966AFAB2AB52928F8DD6359984071FC37AA652FB834A09E5BD93
3AFAE161140E74C6531E413E8FBBFC42BFE8A464B71EB1D8CAA93B33D7BCC3B0
47C7EEFCD3E9FCF26FF9441DD9BDE68D77AD7251C06BBB9A2103049E8827CAF0
F26BEF33F656A690235DEEC623CC519AFA82DE2AE16FB99F780FD7D8290DA40B
9B604AEF36B529FD184239E7D50561A07428D28E51B55546590A1AEAD4B7F2B1
AB8C5B9022C1FA03E33F8F409B24911AB8BFCF6EF4A8E415263C789F89063E71
C0910DC20347469380B7FC1EEB87D4CED7F4A361E58B61C91AFCABA35C03F978
B9FB5257C31657EE48504C355CE893FE3C553274C641DBC4004F5D5B879CC5ED
D3F21F867F6DF054127067DE86189F0B59A1B90FDABCDFEE61423609D888EEFD
F4A1367129962110C651D9481CEDDB8C5C2576A59AED64E95F7ED042AEAE2F7E
81AC0C408E593DC30DCAC334EDE9EE27D932B98F040DDCD195D6155607DD2038
970EB78221A94C52BD4F0EAC65F1FC10E5DAA93C17266F351669CAE56F42B68C
6D01E1EA03AE554D63CE76D800FDD9CFD89F80A241EAEFF7EDFA41794EA25CE7
97BD5028464D2CD45B53834B4AEF8BF0B9E7C6ECDEACEC887E8790A47A93F668
A9095E5FA1116A122C0E5B74E2226C654D3187C6CFD8807917820423DA3EC1DE
AA020EEEF2280C44A15209EE2F3FC1776875308CEAD38571E7BF889F287E4594
971A83605E0B4169D4A23EE790515223DF8724054EDAD905F57918FC0BC64F96
514B4BF7DC9BA79E763C22C977FB6146B10D26FEA1BAA7BAF21312F78D1625A7
8E242D743471DB5821408AB786E4A7EA9D35E30E85533C617689F95758FB2C7C
392E759C299DCCE36689686DE0C4DCE32649493650BA194A6208C5EAB670B170
3F2C70BF0EF0E3BE2FB0A79224FF4ECECD6BB3388C6D06867A0E5E3DB93C1B2F
464C23E44D3132E7D4086E3B59B1D13F49EB4772DEDF8EDC4F603217233FB7BE
C13C28648E9AA51D53F11FB896839F97AEDD8834BCA53CB0021AE91FD8E95E2E
F8A094093AF556B9639F508A401542B06821FF9DE1A745FE9AC5CACD5E8E1053
911442FC15CA5333751ABFE2C617D38FA1DC332BFEF44AE569DC631C93EC54D6
261583A695F5A392867A57F59B741EFCD2DCFECBC55D1EA5F2317601C9DFE9ED
D1EA466210FFA905A8F85BD58B98991BEA58DFD1CDED5C9B086D42CCE632DADA
147941917B879139E016B0DDEB8446BA017FC8EE5A354533D667B0835F5D027D
C2D580C16B80B3D05CC92C0465CAE077729F0A15B2DAFC89DCD349B3F81D0516
C65526EB5C10E45A8A85D716EE35FB9AB201FD7C89ADE5AD925A174169DA20FB
61E96C73A143DF964C20589EF24A0FCFE6195317F2FA0D2249C0D8E649C3D9AD
FF13332EA2E4C9CD36D8443EC8F027B61CEF92C6A6B72DD4ACBACC16E429A9A3
F5F29C1631360E32F8C1C93ACB22F810B86D2969A7480F486F62F8488BEEC74C
2C1AF13BB92BC578E8CD30BEA6BC8CB68ED730F54CED0167605FA76AD7B7E88C
7AE7688E598F91C471BD65A542E96D64B1EAF19FB4F1234308C48C2DC86E2193
11ABDB4C6189C6F201627C693691A86DD07FF55C30FDB3F72381E09C6080FD7C
9182762E5001E30F52A216E0B71E4D2D4E2F3B20F95DF3A11FDB2D2B5B5FAA66
C46226D5E0C77066349770514E5675550FAC9394FB27CD2C2F974F1FD58C04A3
1EF53A8AB3B2202CCA1CEFA66228E1480A0709436C44BD3319C40CF888AE4692
5DBBB52B15CF3A518F627F672135A24D5DB9B2EBEF04C860AECF231EBB5A3BF5
6DCCD5E72FE4B6DD29E896691868A7DE4120AD06AC573F5608B8449B38E71CA0
EB5CDA3F942482EA7973661170F81DC88D54DD5B92323F46F833DFA757107E9E
F62A47CC50FAA1B68ED535C3E0E1073532A05ED339C8D70B3B9864808ABACD23
AA95E9FDA43D54C66A675FA074E0A5B8777D3C07850A09087F36852B5351F35D
8BC4DDFCA35CF29CD5E3DE118A741FAC4DED36847F2E2C6CFE08669301722D94
376F540982958074E7F1383C409652F6C99DA39FE90B38221E75BC1ECB93ABF6
B00F410A0C5651DB418566AB350FDA1789AFD88286AF3BCB42B98386F7BC144B
02DEB8940D20A6B3062F0C4244EABC50923390064F1D027A8BACC3DE45156E56
4A942D1B87F1C4A76B0D4D6801AE792CCAE3009BF25368B31B6AD5476FBD3BFF
9759EF463EF5E78E10B7BF64005B2ABE0E8813950A08A1808587A98E0021D0DD
751AD515E8278F1A0759E85D8A084490BBB0F8206484AA36388B1013643D3198
3509078847BDAE08E76FA5BF3E3A73C323CE093DCC148E3C02C2DE1E26C94D5A
40EC8308ECB02FF7DD04EC1005A2A0DC74D4E587F10A3EF349E828F69FD38962
2F0C74D5DAB3ED6CC9F97008ACCE74C086A503948DEF1AAF58FC8BEC703CD360
D32098A56AC776B1BD08442052A2A4EF6C8798F7CDC102AF1A2009657254762A
0793F79A39DCD6ADBAA5EC84A7ED6018BBE727E5D477893D84F157074B24C13E
8D4881C7DF8ADC13EBA0D89745EF93B7616EC5355600BB0D2B630AABA3CF2946
AFFD0B2B724EF0F28393F3C731AC72A38427511974305A4D86CCFCD4F291E0BB
1A9D796DCA451DCC4F5A374F838049EB984BAB5F5CEEE85CAC6CC6D3429CB2E2
86375D6713CC49A2775DFFD6711A61D97351C40339BBD717BA15835815C8E29D
6BD5706D9F0A6B105DCA9D58467BAFD6F42DEA149D44C84A2FFD5AF562683076
4344CCF1B9E4FA5283CBE6AB5E0A537D6B45F1FABF411AF961F6E6BED4A1655E
DC31C235D20B206326C7E3DA0B2F5191C2C721CA94A3F62DF5D6AED3AD275F04
A5355BB9C6E760AED8929A4EED593836DC944115C3734157442A161BD5A9818A
95AFBD19A4965820046666AD30B65C11C377B8756144A925E5C17E27CE4388D7
15C1F56885B36AB435E9C8813CB052EFFA1AA603DB7C65046CFDE4172E5134BB
F95DE7945F482C2AD3A949D41A94C28119DDC415526A257154FE145DFD6FA4ED
3D2B15998D02304F1F8BA19D607C5179BCBF3B1FE46D4BF402D864759BE81002
EDE3E49CB9193F4A9F02506DAA39886CAC4D93D6E6823E197EEC09D1BD84D00D
951D4CF9252A4443EECCAF1E56E5FBD7C545BC4D21C7EADB5AD309E2D327457D
09F34BAF7397A07F5CB058FDFBACABB8859781A88518AD8F61BFBC34A074CB3B
C8C1754662B5D3FC0462AC496092E6BBE6D10EF49349387EA298200DE19882B5
A306DE901D7508E17C81A5199A57BA3B720C1693D02E3A547D0ADCC055264CF3
8070833FE36F3E9E75ED639DFDE977B6BE8BB8B73909AA1117B78A5506192B15
0CAF3916DE4271273CF39110B40FEEF6B961452F14E08BA8682674E24838BF99
B06FA68C91E1797DB85D919052E2B9229A62EF76D4422E27F4227102CF7D5683
F89FCDF14E112CA917B5EA3E96F99B310834A0C6D1DD0E52E08CFBF052D1DB42
2D245201FBD6463F31D0E7F52B464FE65352F56E78D58BF1E0922FBDD3D7BEC5
45AB58388D6060D8095361657973BEE789B157868AECE7FE647F18E3C3615CA7
24A5DE4FF8D33B3D5F1AB05BEE28D7C7B2A151CB492A289E74873A4547F8501B
0613715081F66780BDF6C0033E6FB2A47352A306C2A477CBD1EF75B55DEABAB8
982D6AE5E796ADCE88A7DAF4C3871902506AFC059D24FA744AE8ED107618EED2
6B3A0F90F6D28862998F74B32F2DC260B3347F7D862EADBBC271344EE3309283
C16637C89647853487B44A5765332A0498E8B89451F218B6DC58AED2F84B18F2
2D5FEB8538B736238140E6998BBA0706D024C4B08590598FD0D72F5E8A10EE76
F246AE8375E73C862E030F2F5353E1FA4BADE4B196DE9E61C256F4BF37AB40F2
DF4E6AD3AA2AE5101210DCC72947BD7E007974749727B0380831B0C3FB020D7D
CA0782E78357F8A8690C5E6F7F3C437BA65A6C53A80ABAF100054DAC4D4A57F4
362046B50F9AC28FE77BAD910B4226229646AC703167B2CB7DA20C3481A5B1C3
C65F18C7FD65F73EC51116244DBB1BC5AE83CFE9CAA763CD150D472A625CA467
EC7EF8F34D00DF889396E7593C9F37F0210FB1CE0908DE561B224DE635CEEF58
C3CD492EE4D97077D435B06DD775397C8446881E5A769720A8ECA7A838AA7EDC
36EDAED19E986DEC6F2889ADC7DDAE3704EFB24FE0191AE65F9788563B6CFEF8
6CCB464C70CA47E2BA8127CF2534438097964D5FD4B95705A5F87B523A206058
6418B6770F89C1B08A0F9F123D0AB5C3DC10D40186A40A01BC60ABB15E8B5D6C
0154BFC4513999F17BEE0C56CFE6E178D009058FAAF994C2DE4CE146C04EF749
215E07CF414EB6272DBE5BB751AD261AACB939CA78972B7A25B74FF735483267
2006C7071A2AAEABDABFFAE459EC1589961B8533030C940FEC43402F2A896338
8A867CEB29DF48565F61709093C3B0131AD19D97811CFE6EB8A946445E7C1D5C
BB3A4F47906A09156C93994992C526DD531D21F6A8A812C1CC027C7FEA0A1B3A
F89372E08A57654DE99E0AC88121A279AF959FC3BF0ED249587E406A6A2EADA4
52F82097ED5D72A6AC8CC56CD1B4E94B5E24859F71B7C8AEF1EE5D597FB87468
4F273AC09670ED96FB06478699D8BE71C27B63104B1F3A2893A2280FE0399E8B
3034B8CFAB22BC7C7A3CBA031A70419875C5E7902DC8A7CFC020FDF67DDE3765
B97E068272EA687AA0A288E79EF6D236BEB2A4BE36818173ACBC96E2A1C8DB22
9964C26E4525B403C7124182AE046B97554F383D440E38579DAA7490C29C5365
014A749998D072474F40B8EF0BA796FBA383612A6B2745D738BD0D0E3272562D
54662CEAAA5AAD018619D9006B5CAACD896CDDD92A84953FFE10BAEF790A59B2
63606864AD13B5C4F3E888932A7F37E2EB144C3525068748E6D109B6FC5BA237
74802BBFBA1BFD45B84444E038D5D0CC8E662AAFDE396964019EA0171148FA29
A3508914CA986D90864B1D1F7CC2A3E0C89FC37DA511B1625C0205CD946045BC
0B9F1EB2A91390E601A7BBDF0A269025FF25B5F70D3F1EBC12469A901D40166E
A3EF03E55DC7DE0D002CF22968F20EFB2DEDBF1E0D857264BCAE2FD99DE1EA63
A75225E3D74921881C44350A3D6FAE2E9E40C1C16B243976C71DE7BEFE12A094
79AAF05BD2EB6F9FB4CF2D2A023CC425D850B006180C20AEA756DB5DBA501665
9C68332A917015527444063D3741C5438190F5B6A0BD18A0243AE0BFED65B696
639C8EA3F5572B245B6AFFE97F6EA5B57C9131384D66E060A53404974AD8B5D1
C068F0F6C695EC708D2E98699943E963030B3D3F7436A5F49650F7F0D078E208
FF34DEFDE07932D9C585F45627CFC522E7AE680F461918D3F0C1C2D9470D08AA
61A42FEF0755C7B3F96A60995A6ADB202B826F09C2E10BDFC1A11D8FBA3193B4
6780E7606B5C6E85BDDE1EBCA8DC2DEA7E3555B3F8FAFA1293BCA8CC5A796A24
C9F86DC4EC51AB3D75C9D5B45B0DF90623DEE2E6E977A93FE0B995B36D195F19
D014E77BDB80E04357FCA1E54141C0DD3125618D95DED31DC129A3E0EB248A28
C1936682FC5B65C77636A789B0F5BF6D9E8802A5E78485B740144850FBDDE138
EDC5445681AD69D47EAF1E085FCE1138E5700C19275026E6917CA64EA18A5DC9
E0E9842BEE34585EB504B54AFB74F13954B8821523619B415E0344D4A17F2A58
D0CF2A6BB9DBEF68B7266E8A010F44EA4E2C1A570927067BFA5137A6637DE09F
CF612C69AC2F94423BF1B7CB655AFBB7B81BD2B96375D28029E17C800E1141E7
5E237E7A3E351A0A97FA05D736781F6C84407305BDAA9574632C1B92FEDC73A3
ED0886C0CF3800A5D8D9CC7E660F2DE4B2DA5ECCDE3A9EA0B4A9E45C5FBBCEBD
EEF87161DE4997333C5C38DADEE5CDBE323BED474987BC8532DCF4613F2380A8
51ED5DDA5A06A232BBEF5F527B745093189E9D50EDE68E0DE91F26CC25297C1D
5FBCE5876A778E9A90C8F8FDD0EAA0406B20AD0E7A6A25109EDDE5DFFC0BD941
A38933BB69DEB4C11B44F535EF5A68A1254BE8192B1ED4253F8B56F06D2C4C19
423B89DDC2AAAA24DD578B3C2276402B0F1103668BA282054589B1995839D140
E2F9A74F4559B69BFA3C9D4FC342CB13183A94FE2DE6D78594FC7E1F4286844B
CC6AE0D768DDC92307F5146C8B5CB8B55CBB6D67AA9092B8B3CE81D42EBAAE50
EF93CD2BE1E5FF8F2AE0E514409DD20E3B05159F26F18137F1162E95BE9AA8B0
86BCB3960DB1D9BB831DA43C743589C85EFAA0DC2E8036491C130B4ACFED6074
293F722C7279B2AFF6BC2D770BDBD5B66263F0E79C0CA92EAFC77C33E2D6370A
00C29EA9CE6FE35AA61008BC592198C6A1504A640A316F6DF79777330E216724
59F9108566A03F3118AC3C0ED336125A662947DEBAC3ABC02D757BD661D7EA47
F203D8A427B226B8D5103A57A29FA91BC0A7D57F956ACB73616C22302ED53EB9
C7B16551FBF2D5E63A5D4F203E931A22DD431BBD420E7DFA7D5BF6B82D857B03
33CECFB7A070F488016113BF1C928E9F28DC8713102F5B807DA58FAD79176A32
ECFE49F21A836820795FAC01854C1FF520EF6211F1600E46068E2352149DD3AF
F50B2F2A6FF8095FF4FB4ABAC8CB60033647F5C506AD772A94C71888C0861F3C
FFC76AEFD33D4BF55848F678EF4A75DE7B641FD061BB54739F70675B68F27D02
A82CFB269C6C1F6F361063A499BB9B6E5C1C2504F1241894EC1762DAD8522AA0
8ADC53EB074F03E8EF7F25B8E61572B3342E065294751578375AB4362F41B146
227DBBACC36AFC2D776453BF54286A44436BA6308CC10F3194687169B39CF7B3
9DE2D2A4C48E0D4340D32B4E3A5B1C0EFD65E36FFD8444DE6EB1FC4D54B4D095
CCA49DEA391AB24C7B876E6D0710F08BACDD0A1DD544823B5D2C764D76642FA0
8CB7726CC19333C7626752E3D011B93DC96D7200510ECE957D8125FD379EFB1B
9A09A46192D6976537271A19E1951530A173A51A694AB4E1C965D5412F37DC3B
C232B9D37C46FF5DF88558BFC6499CD31CD66C3B2542FB96C159B1F392F33B5A
12C68BAD098C4CE7FED70391CA7FCAE62C66E342162FD4974C80B923BE8CC550
0344FDDA791D2BE47D7805397EF99A2F035447299C4149A5AE4E4F6E7508155D
CBD548428045028D570E2825234F56652AF9B62C56C91D89BCD1C111E4FCC1C9
219E960D6744714D0A7C89DF26471B1552949DE94C8C2666F69DB57F4A921607
74F9C206D1526EC26482DE165479C14B5EE5D92075290AAE021CF397EF78775D
22CEFBB2EBB776D23F75FF0D4E5207203065923ADA6A8501C3FD8B64694DFC2C
755338FF6B5852121BB42DC5C14AFF79FBE12EF642F1C3714297C2C5A814E823
24E8846CB3A5A9624B1432C3E1876A379523B6A5F4EB6516837B4B6F812A9CBD
9A75856C0485CD514C571C6DA95E41A1C35C3CF08D18C5ABB12A42079DD0CDE6
9E057D838626712EF4CC1E38A4A663BB4C6EC46D68523547A3D23EC9A9D3D815
2FEBD4B91FB5BCF1A634AB0C4C6977931449E388F333780BD6DE0B8A48B11BA5
A35A01CCFFEE49282257B0AA8DBEA02CEA350366F6F1073DCDFA8946F8D51EC3
38358F46E79D8E8BF39CB1257D37578E305BF6F9E72F35EA3D23D61F5DF16855
BFB600EC5CE474028802C49C9F80BCCF1B8F7B3AC325AA54B18870443D70142D
993323DEF8AF02192B9C4448D03A0602C8B06FA975B0A29A84E4E6ABDB452FBF
37C450C45AFB1BD6903D8D3255B4EA53A5AFD11FBF58144780F52A4FB87A8E6E
783277F218DFC0C5255455190A2C8722342AAE0457E0A4D0A53B116706B51B3B
780FDE975A32C326DBE22079D5981CA4ABC9791C845DE57AD421D5E4FDB83CCE
8849508A78E4678845B9C94645F3BD972ACAD1A44856228A3E9FDF9677DF8DBF
09E5D01A6BF89A16BF79C770C6B04DC33F2900BAC6A8EFD7B3D059C09ADB1933
35C097AC7FDE1A9DCFD336D3161B3911AF66ABBEB4289B47D5903254C63EFDD4
EB26FC950034819E940DC5E130A5F37F107E78CAB44B30AE7BCC0A23005A35D2
963E47EEA175D6127C382E7BB5ECCF070DAFE7ABEAED49C9B3E8AF70A40631D8
3E92DC3AD73E46E820821A8300B63747FA5C6713A4B7B8E91DFC757BB3A9573A
C059BE5BBDD1BB6C788EFB75B2D2F9124FD7CD9341AB55195220D6FBC90BA1FB
694C9A8E979AF0D1C0D76CF962553F1262F4B8F35C173FCBD87F1666A2E85A66
5C7A9EE035784413A504EC6A55CC58342547F651F4003147F8410EB118E3D0DB
208949527CBBB6A8508423634A01B6F8C7A91335EB8C43B14D1944AC418A558D
96B6F54E87FE3BB5A5E7DC884FBCB80922512B60B3EF1D843D31434DE947266B
FFD5534C5A53FB8157406D57C740334B886AAEF045BB578DBFD7C595D8E0115E
148838BD260A8E1CCD1D1A189506070CC18F7D74C518CAC71AD887DF8198BC15
B3D950A773300187624B93E575F03E28A870F9823389CA6C48B0BED243528749
6D63FE83A5A4A7BD523EBCA2E02BB7F628FEF7E2E78BD2DC7FB9A544BEC072CF
3E0004CD755D791591864AF963AFD39B434D1C4AED4C900BB2FFE002D236B866
0CAB734223A5FEA06C42CBDB1D6ABF367F42753E4BDEB4402150F57C406DB653
A2B0CB7712F716B24EDB1D504A1269B60CD44271C103BB5EF4214194E4652F02
643BA24FA668526284A0322DE31AC1705578750AEF7286F4CBDEDE6CA3C85AB8
07AB4B165254A3389E8AD440B2622A285FF53B4EF40F86B0DBE5D69A4E2592BB
6BCD0CFC91FE8B8888D4EF2F7138D7E4393FCED6EE633F663042AFCB4C860DC6
9EEDC01B4113C79EB3F07E8A13D3889671D885FF2EFDACFBD92EC163A33B144B
F139A514CEB65D9A5112678AAE270C12A9B74022B80191E9EF7FA4EFCCA30C35
0A18451738241B50560CAC9C7C25EFAD8567092E7F8D3DED7946D33F63DAF4D1
E0F109F1EFAC1FCA2A6709EE4F26798A3705F933CE3ED09EA6E646D86592EB3C
C9E0C2F9CEC6EE61C6BC9E03202C52ECE9426CDA651B1DF45D9481F6A94228AD
34DD8F60A6F4DD2F6E96C52AA07F08C6A0BCB98A23D79F1A78C97B8574BACB91
F1234D79B604D06C25FDC513F0393A08304E981022C05D77489452B8313D8EC9
8BBEC5D2F4EB1C4C919C9FACF6139A099980E4E580FDC5A0BD23A335BD889253
641500B72D50108CDA1BB1966E15579E57C3B4124E27C4038457A8E2BE60ADDD
E340663426EFC8BA686BF9F88AD6F900FD44B520380FA04B338C48A4C6ADEB57
07C3B2889C0738988C4E2B32B733A8009C54079B608C4FCE5563B4CC614A0580
AE83D12B25908BEEEA0668CCADCBF1F460246DA59F378A3A732560A8D26D101A
7BAFC3B53E9719136FA0FB0F7EDF920FF4B014804AF596893803EE5DE35F3029
58C74A9CFD7DA862DC3D3E6426D4DE56C0CF0373B837BB425D3CEACCFB2C57CA
FFCC06B2596295C24DF594E058CC58F6BC4E54D5079FA3AE133E5BDEDC0D16D5
FB3C38998F86F82CF56A8917E2620DCB69DC857BAB2091DBDCE065B4A7BE30AE
32346B984F96F66BE73318B622F1A2D1DFB1ACEE6A946977EF0718FE4B803C35
8670C58D219517DDBB91C668332F92076D73D8647A5B13D157CCC8A0F396EC7E
149EFB9B532E117C667C8BC46EA055F52476756C5A9A1CE698E0D280B21A09E6
FEDBB31502696A2FC6C88A6AAFDC3062A00770F7503E5A6A1180825E04217B55
C74A42AAFA03E40B13A3ED43DB3827975A9B5CAEDB9142340A4F437C34D86409
4DAFDBA4D40F829F484E8741F35CF28067DAD42F8DB0A6E7E607ACD16191D659
97176115A31709101BBE9A7487D547C3486781C5F1C1EECE62C70C434881967D
928C4AC257D94B1963B5CC24D9366C410AB3A298156B2B4385996AE7775C4817
D8A1585F8CC9BACF0A6F0B2E878407D4BFAE4A5CEB81DB84C75315CE41797108
83F8848A995E9D1F23447DDB458912A62D4527D391CBDA32E9C2A16E4B554E7F
141F54F78B462F7D32276E2FA3A3ACEFAC3E0A30DAF6C1F4975A2D6212A9BB5E
090BB87AE557B7AF451252D559EDBABD82C4C3E5B6227EA646255F0BC9CB0C73
527B4F80FA846977873B7042908CF6036351DF3CF47451C25A0DBF875D28A034
39CD441C889F129A102D85699E4946E18D80D157A2781AC754674E827F4EA1F7
A42C599B92A8C1DADB39A8063C5E2F369C175D8AE7CCEDE07D84E36BD399B800
2F6210950694C429837AA82A65550A4CE7A1501D0BF9EC9BD92096C54A89F200
C74B93BD417A2C840BEBABCAF60F0A17A7A98BFF46D702C0AD7AD710DF26CFE1
9B515BC9B588412A426E0E6EF0BB579FD1D651B16BBA7C077E16B8D1DE001165
1D3E57E86B598B0AA1F6446CC59A820CAB955C46D79FF5EE1B7779F3B5F4FCFB
4ED01074918FD603882F7CA111495ECBDD767BEC84491AE8C3291B5D5B1C1E94
C79F41B2A4D3930CD6C3DE4134D3EFE805B490A7328913779F0BE62765EBCBA7
6136FA55921649F25645C25722AA62BF8702B25E9B678901DBB801CBC5562A8C
CAB46EBFA84B8F1C5EE101B080173E9A479186E514F321F6109D53F761B8F2C9
0F31EFA586E5377C57F5C291134AC7E74B7DAEDD5A4A701AF3D4FA7432A8FC88
8CD97BE64726DF588FF79B0517C60CB807C1B030FDE1E609B0381FADFD5CBE42
96EE16348DDC7367CDDA4D5C2EFDC8E1C0A928954A9D2378E608411B76BFFE8D
88F1605CEB7402F244D595A1C7241F44B9BF9469F6E1519232F6EF54C20E6003
A01B52BF31C100ADA63609F3884455A5750EC4219ECBADE619C232F5746C2C01
AD1AB2CAC1CFFB527551F6EC87C710B09E05551E2B5E578A813BF8426530B554
95C9446B518478A231B6DB7599F75228E4DD450FD6030EB23938D42C5F2305BD
96B0255FA80F1E77ED95CA1452463D05BE015A84A6B8F79B95415B4E4DE2FD55
F3F41AA0E58F79CAE48DB008D68B14F76D21C6145F25EA7AA06B5BD6582F0AAD
564E05546ECA75B8CD5D43E5B001C3947C8B80620B5E2E084FD7530B3F2D2A59
FED4E48D2B1BB448531975A3CCD09E5EF16CBD009421CC731E175DA86C24BFDA
168CB4B03E9A490AE96A9A5CAB183B81CDEFD572F9FC4FF828FBFA981C643AC5
4B57F3BA06B68099045CB9D8BFFA7A343DCFE1D000B71DE9F9C9075388760E21
26CCB07FA96B04B98071AE985DA052BD0B8C588BA9435279AB9CFA63D29EDA31
E569B85B52F799CBB0B793CFD06BB8385EDD042430086B7D69EBB8CE6C48AB99
5878F79695926A394EB994025AF011C56C0EF36C5C12AB68FC5D297CCD7DD75F
ECAAFD908A6E321625B6FBCC881B83BD00DB7E456DD4FF0125C44F60D93B25EF
814966462E7DE5E6FE618D8B4910B1FA6628605B96A4520E577752E5DE82987D
3F014C0371D5A3E7233FF12A2661AB1FC21C6BA76D8D7FD45A15712FBAB3A366
BB1691613A54BDD0227B294D3E7C7F2A12606E079A93E0DC85B03C44F1A098AE
D024B43221E65E86F6CB29587C990DC158BF682921F19D07F04CC6B41964C8DA
71F032EDC9F904910F99B19BA053F0068F184F97F8CC017F45C9713721C63565
42F744B80D974A7EBA16E38E608336DB522C814A1F32E6A5930225AB884DB0BE
D7E64C94106BF2A3A5DBB634732ADDBFD4D94492D137AAE3EA3C77BC29A4071C
3650C63B9EEBEAEA0309002E92BC70B0F045EF6607813EEA406C9956CE7F9146
E5F53E28399AFC26402FF8E0B391AF8281617279B7692041C5EA4C75E33768BF
EFCD02AF0FE6858A563C82C04C83ACFB579088A890A3C797935104B132249635
C8E14A7610BF3D1249798B1D725D5F228BBA10505707783AE1354E2F6E5A22BF
ACF48B3BE1CCC57B100294D64646836C9525B92B2F2D9E73861B23B8E0BD7800
8B0695E30DE1363D3258B7E7F2B2057CC76ADF70A816A248D38D7DC789A23417
5640D1C6AC4C49673711CC5BFCE5013E2A6E66F934B9FB926DC51FBC5C8491D7
A715B9CA424DC86D4FE7E573957E6ED22D4617D20C9AE61EA614AA2FFCB5088B
75B91284F8AE0AF568E7E58B7506E1DD3D0ED991B728234E43C6965090590CC4
D50A168AFB08C908E934052226A4D4310DCF77FD2248524B436AD0F1AA144A71
D8D5530779A13D111DC421E1981121462A2BCB4FACAC7B8CDAD63BF6CEBA2785
79E571DDD748E92A4D382ED9071E230855C8E06D6342D313D30DBB16A7F246A1
F659432D5B821A39BBDD7610ECF13C503081679034815C7CC5AE53F2CB00A716
9C7C460E1D51DDAFAB9E65EE59CAB3AD8336E9B2D284A47869C847447771D798
30E1C4885AF1CB153E220E542ED60B5DBB18F817A2DDEC317BE5E5ACB665D027
E27CF45B39F1B38995B3C4718FCCFF445E82F07A7D0D0C73DCEFCCD98BFF0A70
7358B376D63286503F1AAA7B0B3ECA44BD2FE1E0713BB5471B95908548D4DF94
DE4642129076C10C7066670575DF2C97DC18597B5B808BCB1953A1B551D3401A
A8C611607F386909B7E181220534F39F1864823057E752929416835F3CA70E54
CCFB050E03D3DF32430DA19A3389B06DB5DFEC4466E7B8F03E124E49158C2B8B
2D24CFC89E44DE865BB69A8E3EF07F15C1A398F382B32AEDD6D9E6D4737B4B21
BC6AAC96867F72B67C52B44542933E5965D0B5E1202A94CA9883670D2DEC32D6
7AAAE1E4AECF700C50EB18AABEB5FAF23E6C19906919DA3B5A7C231EB8C9CEFE
734B685C107D52CDDA16813D1D13B6F47BC20DBE9604E087962B792490FB9229
C0E6B4D7AC5C7D08EF756BD57C791E9AE08348C08BDECA75FC54F381C263D390
35B8AEA3FD8003D86237CFAC852C367ACE0DF76C0A09664CCFF32A7506FD243F
6CBE4C91B21904F1F3789088E115D3A7A29C275DD989ADC03529AB7F1B1A7DB6
A4FE4DC68A7C447BDDCFDBB2EDC668AD91DB334DCBEA67F7E760C30D1F82A5FF
18D71AE67D729A8C6E66054FA8E609313C71EA1DE4E44D792B45CAA8AFEF2BD3
6A62ACE858CE16381A54B24DF210A62DE0028220611BDAA81B3DD4B88934801C
90CA813ED90908AB496B1C01922068FB2D98CACB068A7102AE58AB90D235666A
E98B8A14FEFCC49264E7DFB373E9C896F8A089251FDE2AE98EB6FCC96F1B09D0
12B5C421D97C49EC9CECF1BBF6F85E4CA05C2A30C36F8C32B99DF0CDD0952C2E
478B660B341535B615D07908928B5D37E7E05B9A8D44314BDB789C3CB2222E90
6E87BF80D8605DF09B2821D0C6A080460BC837E19CA9566A35C79FC0BD9798A0
916FD142BF018A86CD260335D2F5A75198F613BC8283512DC0E53AE38B196842
97AEC003E5ED8049DFB7253B8FB00F8DB55EC1A1A3913D2BCD972ADC2F364A28
9585EAA7D8729D3E2F45285EBEB87D01EBC1B341AD844748C29766FE96FD71A3
3D8CFE9B9D98A1B7068199F3661387ECA9DC248D50714F5E162854022116D268
428C2CC4F3E8A8FCDCD65C8934E22AE2DE8EAB1E31B106B283016F70594E57D5
EED470116991F653757988174684CD7007EB7D86EF734CE34389BE5D2F8D333D
E9EBF26E54A71D67AB78A0F9B735BB14ADAF8FC74B7D8241967C2A6808B0CB4D
BB6AE4476506DFE1A20EA264D9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSSBX10
%!PS-AdobeFont-1.0: CMSSBX10 003.002
%%Title: CMSSBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSSBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSSBX10 known{/CMSSBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000806 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSSBX10 def
/FontBBox {-71 -250 1099 780 }readonly def
/UniqueID 5000806 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSSBX10.) readonly def
/FullName (CMSSBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2919BE7F4437ED75BF2F7BA7
02F85142A4EADC8C9C7F11ABE2AE2A9DEA79CBF9577DD8627E31D25A7E4DED9E
FBB1C413696C88A07E5C937451D40A9211B29E24C9424635CD4FD6B16FA7D76F
5BA1DF0EC26097EEADD70EAA577531177A26B5017A32675C68052E90E68538DD
E779AB23150FCD1653460CDDCC713599EFA381C3322175809A73447720F6911C
6BFBDC0458C477D2CE69BBAFD05B5C2DA1D2E3E8378A2112066B045243D3D080
DAB211DCC25430973C18E7FC5574A814E3EB79F34FF5197453873C8AC66E47AB
5EA57CB3C8365D5235E7746C8584734F002E9A28C38B0C25E3753D85A1D2F3CA
B8DECFE14A7AFBFB76CF3E91A1E0203FBC8052C2DF967693C9BA0ABE86B5D264
BC345D7954C9523B3E70C4AEBBB0F2D56BAD6D76E095F9390FBE2CD607F3060D
F713ABF47F0FCA5D5C27CBCD4140C668F733F769FF5326917C0AC5D4C72F99BC
5AF4540DB169622644D320872947BCF1D30DA4EA150AA22D6D53777345858DFA
3286EB68314E30EC650C8BCC572D72879E431FB4297AAD6533C8F4802E0B9902
8360C57504D4176C1DE7F57382FF2E2C0A3D5285A061CE91D3149E3096B91076
1E914125CCA8D1C9230B72427990ED4468CE79C11E8F0CB89A3213C535B040E4
0C5784E6D53C96696EE45C87B5E0DAA80D3A06E5759D0676ACF99020DCFC3E8B
50002675B01959500133BC30223C75A54948DD28FA83F399924D4ACBE33F1F2E
D85095A76AF6DD92EAD139A8D5673A35B3633D25EF3B10A40A7E28F329D6E7AD
DBF1DAD1E666931611FB107D1FD3576F11A22B50943C536DC2BA477EBAA52BDB
B65A98268602F26DCA5EC761526CB7F33CB5B345110B7A90E1D078A21E332F78
33A0CF88EBB2CE852384DE3435F7B3564A0AFBB2024F79A633BA5B6EB7CC5389
C43621C82972D60F7DAC71FD9DD38CAAB865D7DE4ABC39D71879BF31549DE649
4B9CD8C149880504E5B34C2153E963B3FEEDA0D59F70E0ADCD24EDBBB8EA961A
90E5AE4ABB26E1AB1757E25572622D5A2541CFFACAB673665C7693855473D78B
847FAD590B657CC0B8289034AFEC3C54FE97B010535F70AF67ECC88E21B077D3
A9C2C52D25CE9714EE430735DB57991AEC946C96B6988B2C85D17C8BC80EA844
3A076618A686040ABCAC347F1B1C14676B05E13C239E99C3A2B63D0388CB50F2
BC119D6F74F70DD96BB5343D5458950070576BD6E319AAF5792EBB9DA5778CA2
58DE0976AEB766DA6A865F09FD6753FB4E7E0E9A06AA1A06C2636AFACF787460
9E73BAFC4A56A99277DCB14F52555EBF6DC5E5785EF7745521FA061227B725B0
7A5BA223D5EE9239A7A1694D4F9EC1132FA23DA44ED0FB0AFD8987A01F9FAE15
ABD485BE098CA7B1AC780A9A02AC58DCF0425D4D110226DC7B5982FE31BB78A1
C0AAF9B712E8D478FC4F85400B5E6D71AA653F9BB2E967A76D02B04887CEB9F0
0EF50A956AF7F790400EBBC07467D9A8BF8BFE8200F8F7EEB5DF3E62A9A332B4
513120FD9F8A93ED683CC47551C629B5313E4E20A207845CC37491ECC3945EE2
71A0C5633B353B03B1A7727D5D9A0478D20D67A981F6E5CD8737548ED4348A91
82F2CE805724A028E346E6B7C542FC69CFC7935E6CF3320ED9701C6127FBDFD3
B20F0DC2D1F92DC69E4FEE57B457E82D5721D932B140CD6DB9BC86B961E7E6A7
5816F42AF937D97C3149DC2AB0054564592448D0CF52427B766FD38E3B040B81
59AA9030CE06A9A9E3A0572A11BDA85531060B75DF8791176CDEC0A9BBF472EE
BD433BCDAB926689B8806CC8044D0925814C1784A41CEA48ABB9AC039485BFA3
026FD30CCE84AC57DF09B1581ED01B3A840AC5E9208465BC160238EECC7A6753
D5B65B159FB08E0DFE4C9F2EF5986352C0E0C4DCA0EE62EE5C19BB6C486FCADE
99D3519723B70B20FACE685ED8D364905EA64A15981B00A6DC06D7B0E3D38FC0
9DDF04221696F7A8F3CC7FDBC25A61D9AAF9F65D3A64BCAC4084CF13BBED7195
6BA4C2445676804C333DA6569E4AB7E6999505DD1988C3E62495DF61B722A6E3
00ECC4EC698E33F7B8225FF591B746E449D2D178880741074D0C3CA740312D21
1F8B0B1A855FCA081AF1E69D14C9131B1769943EA6D5D6210E10BBD9E404B445
FC3E2ADF8C9AB6AC07BC2FC0482515625523C04303F7884283D5CC35A4A6ADAF
59738F3DDDFB51E7134327AC4CA577BAB076F3B588FA3828971FE9D561F46358
24BEC4C7F84D8FFEEAC94E2C632AFA5AED635E867AD362E373CEA718C750B4B6
954A7CB6E4CB2614A4E1C707412B7B09F8969EBD5B6510B66818A2F5AE4EFEE5
9DD7690A3520C477DECB7D61FBE5F84D1C655971FAD7CDA78E695C18908016CA
48B468BB6B43EBE1DDBC49F43B7CD667B4131D7B0C9BB048178A31D0CB70A76F
527DD352F7A9F0F35226117FF305A9DF4AEDF474FCD5C7F31FB06D4B2CC40629
1BE1F40B6347201F84BF35CB5155BC4D2E1DF2A5C7613C27A0EE77BE55A744B6
DF7DA5741AB55F133D518660751B0A91E6BE43B527E9C97E2F06FBEB58DD0215
BF4105DAE1B2A29DB05FA204D0EA6E574C7344C3B3F44092F7F997654D61EA9D
4C811CE6087BA1615A31F8D107DC64F1CFF707234135B728EAA0ABB475E678D8
9200950F24A8A61AE6AA18F34A067849825FB3925A8E01D64E849546FF7F4418
19C0FFC2EEEEBDC7805612F7849BBA7BBD954BFDAF2E6FFE3CA520B79070F8E6
B1509EE0040714C9F5023816250F40FD1C6867F77FC8ADD3A16A3A6275CD6F5A
21BC03274B350EEFA6EE929AE91DEB8D8B309E3B3524807B4562C7758794A8C8
4E3C6EE0C0859AC9B799428EAC242BC4AD9564F2444E3C79F11D4C1D5672DCF3
2E191E25165C77EEA2DB51753ADE07F5E7E748704000265649A2E1DF68909F38
68F0D5F415330C9537A065728D2104C34CE05458AC1B2A53946890DFDD67563A
E044E7AEDA111FCBF431546D410D67602985F6E13988999E46C80A983C7F12A9
FB56C6735454F1E194F63A1B6B21683A281AC6164B3229AE25B1189366C9DDB4
09D1BBC8429AC3D64F8BBFEF1265611E7C2FE1D3A2FE24FBF3ED96A5CBA6FCA7
847F5E3AD4D14C0C77C225588FBD0DA2E960FA3901DA1B46B796121DC804FE82
C382F75AA0495312A80EF9350CE0F80CE0D18316E5D02B7BD78667C2DAABD879
E17D5EB8F274DD2B1BFBC04EA2F72EE5376D01DAA129FE257162BD19D19B13CB
C13181E6DBC12826AFFD87AB152A59D67D0FBBE5D9CADDB1CAA8C27689355AA8
FDC556015E4A9708995E51E46D6D1ED7B68A61625561FB594B9BEF87A1720222
64E4F8A47637705CA32B1B4CA5B8473F1D67FCB7E4041502B7ADA9FA4B16CC6D
282FB636979D3DE7C76F3000ECA08AD6E116B1558FADCA251D67FDEB4607CD3A
84BCA7DF488C97FAA4FC195661D7977A08EF04A7D9A2D619EFC7AE291D7DA633
C6DBCA7DA01EF336E378764F6B4E4D6C517BE05F10BD1FCDB20E5ABA7F65A8FF
17D93CDF1E60787712C40775A5C3808AD05A2F276C94B05E10C6042604F592C8
AF1F25B98A0C78AA7BE1DE9ACF2273965F0795B0D79ED6CE2753FD0FD7B41A18
FB490B06B5467561DFE5161C27F58E48EA5F38A5477C9CD0C2FA13683271E55D
8B08DA0C96BDE97C653B0B18096EE7C0E6BC3894057F14E83A902FAAA4C2AC7A
566A9EB8F9D622476DD4E722F55F28230124F67501866FFE952AE93DF5BBE2D9
4B9CB9955320A9E256E611EA3838ACD9073107936226140ABEE92A096659764C
4ED2485B33E75BEA57CCF19AB9409B684EB14103ABF6811E7A8C0AE0C0C11BBD
87801F3F0260D04A8921FB9EBDA2A2048F4B5C47DF63051A0BA6DDBBD895E0B5
F9F0F3CE62CB118B86AF595F4F34359DABD9EA354798E8561599CB32345A43B5
93B217C43E316BD10BCE1C66A10C9A8041A14570ED7FFDD95AAA76E92EF52042
69F0B8FBE21CA4E37647DDC890D13AF489606195900063DB0CB8D71968C1311A
D56155D2B2382119E603AA85E9ACF1785E4C0ECA137E7E4F5EE7915E8A080509
02FFCD2494DA2D3B2AD27DE5F11684BFFA2366B6C834AE309D8E07F98B7B556C
DF3E0B42559610F1B78C79254AEBD7B0F5B3D7F420BA725AAA91EA20D014334E
8FE221BB02BE7B59FC3D03D8ECBAE21F5E37E4A0352C475F9F29C5D2FCE8CB9F
2A059AC06AD9E6F13C39F2781D7D4B3FC34291D165E5C66C5D01B5AAA2AE8F72
9B3C634FB38FCF35283792048BACA9F7EE6789621D9243B917234405BF194BF5
A4F137680ED10F216076AA2767C1D220AE71EA7393C7E252209B6ABD94213AE9
F61FD2CB3160F41C4328DB8563483E13EEBA83A7935E4AC11A97DB7988585184
6BD3DBB8241EFA1F1DC5CA9C2E16EC1EE12CAF4471FA83605DA85672B34B1F9F
8CDBAB6907D6CAB6DD7E00A7D636EA20961BAC97D1AAF32C8096003E096855B0
EF4845013B9243A29BD509436CA78C6F8DF4F90DDED960A0D12BFDBFCEA539AD
BD4BF883E09542C9D75DCB8A4AE82DB495B0B918D330979F347A76D73B19995F
4039557D337FB55B8C5922F35B354F6C8E4D861A0B66B3D803C9862C9C507404
5EE039245AEDB521E90F83F15E44F42F0802F8DAD6A9BF6176C364286601FC80
E14926FA518CC035337904132AEAB9785361709CA01AB0F352317294B34B2B20
FF88CFBCC8E89863BFA2D3ABB2A596C9D9DEB261CFE48E403F88652150EEDF05
3390F002B2E4B53446FB39C488E3D0D4EF4AE2AD19019710FDE56FE29B58B00F
0A6D5B26B814BF64F13C35EE903FA2190F460F9438924E1D7158704F305E326D
66CB529B3A4836DB0FE383EF989C975A2F603332FFE0748E0D695327CC8D9AB6
E036E0E6409261C30B80977BCC3CFF8FF8A9BCBB889ABE47B0CE3450783E1EC7
1C030CC18E074E01605908C3FB61B78CF4FDCC8E8CB13EB77CE6FF2BFF91D658
51FB05DEDBB20B0E4C5604AE3CE6D41A4C8D71A1F90120B1F90C83989B892253
31D06ABB335DE237CD0CDC91256A54797CBA5E284B6CEA6FAE01F7BEFD905E5E
139D57E163137B5751A765B46A3AE6F653FF2551988CE792011E0548CFAA6ADC
E32B876763AF6F6FD6864E7B55E341C97FFA711913F8A7FBCC1FDCB4CF2F4D3F
17358EBCED45C975F2EFF3FB9F77A22EEE4C9DDE63360DCB2DA2C1AA4BE44BA9
3F9CE6F27631809DBC45643DF7BEFE247E79AA7937C409986500EC1026ABFDB2
6C30E0A4852A6976A73AD7483C36F1717460327BBC05DE729E23D370B78630D1
7E87C99A5C3A3C0FFE204EA81A8A33D7DE80DF3C0EAB557F4E86DDF8E03AD072
61B1D8E1BA05452A6FCA404D9BB8FE9831A367B0AB31041B474DA9536035E7B5
EC83DEF0AE17DCE958DA19869DD51F53D4A4BFCF7CFA635D6F9F882E6F0215A7
0494E76F258D44FF72EB5A1104E8F73AD2F6F2ED337D854B81DF4083E6A2D679
6B5613D76DA2347118CF009E8A88924C2A42B154DF1CEFC93C89DE0ED8DB26CD
8C2EDE2670F494DC591E79DA26CF8B5FB76613296FB1F39AF2001BBDAAB12CF4
3906B4C304CCF1D066524DCF92FF484CC682C2B197CD797056555F318279C3A3
7AD8EA9CB19724AF57EFC6706157A5E2F51F104F6232F252594510E0E4BC872D
D610F4C99BC3ECB668139331216DF1AA8F6358EB90CE1F0B8267B878B19BA7E6
77A53A674E0B029E9142865CB92A1596D5AB97FA12FD05A04369AA00BDCBC2DD
1AECE1A4AD55A93885C626004B41FD277AAE6DF68161F7443EFA7D9C913AF909
970F4C6292A694AF033B953CE37116A2AF2439E482867EE9EE2BFE1093A738DE
24D3C408DD105CE6D7B8967994F7C5CE49FBF61AF135F8F7799E2FEF29A168CD
B2F16F795FB475204FBC41AB78AF87E4E80F992FDCB770A3DC0501AE1D786ED0
449956A1BDC93876934331C24CFE4392AA860A1ACCA39978BA8AB90A2174F5F4
97539772660D3920E1B57E9E0674CD34C9EDA83B6AF1B06B26207FE5D67E75DB
B170F1D01D512CF6D586DABFCA32404253F0A9985A29D46641A81D5A810469C2
8081D7774B3188423822003AEB638F21661E0BA7AAC765CF8321F9677C85A562
88AB1320B3256EA9FE0C67E5B69A5127DC1B13E4062CD0C9ED10AB36CD370105
8FA04F89E3F836B01393F1E9365077A30D8E46B67400DDE8EB0AF8C815729699
469773FC3F0ABCEF752A5768C9DAA1931421214E69053775A238553AB6620E9C
E875223681E60B7F7B25BEFBECDD4FF799ADF34BFB397AA114515E2133304A57
B422E97EB3FC5314F64BAADDFEF9C0EC719A78915B26E7E3F381435563F650EB
7587F11CA3B14875F6B1D817C1EFA0B89C85B888E8391C74D77CBCC6A990C36B
1062D049E20876B40CB030367818A3CD3E2CC354CDCC9A0FBB8DFCF7135FB2E6
A0BB0C3A441CEB8D5FE849AC7299431DEE27CE28B33AB7E836D6958104D1777F
8010546687CCA23DB48E53376A446136F449A92C07102315D4D0A897521313ED
1A3A8456A70C16EAA50A3E67336DC89FEC56AB54A579EF264377A103939D5EE0
0A90B4F20AE1F2511469C34B5984A04D5AB8A162F18DBE4D613BA1C1C85E994F
80AFE3C18A045148018045C63376CDEEFAC53A55DA67D5980E3A99CC1C981FC5
5C25CD0A685E3AA6F8C0B8FAAE157DB91AAA50A2B5F7D8860624F29B8DD87606
C30F84C33D802DD5B95E090BD7AA4400E090DC1913BBC392D7E5E87717AB14C8
A031737560F3D132BAAC0D6DD88C586322804BC2D8C505973F015F7662571FD1
C89CA0281CD48AD84B9ED8D70D240A4EFC2715DBE98E545B987AB64FA259D81F
3F768326717675A3A2E22F4EEEA22A5201797C6D5EC644318CDA28A2C3CCD123
B0159205FD52E1F9A60A69AF7B40C4F7189FDED20EAC3869E5F53F4955CDA0C3
2B06D72EA2B8CA5F0B557E9A36B8E9BE7EEEF96B5EDCA6F79F53F83234B2BD45
6B3D631B1C9CBF7D283F377177C60B3D65ADD945D31458164043A17B8DAC8409
B4261A4A0EB36E18BD104A8E66F45C3AECC07F4E8FA9F3D2A27334F95AB79BF8
06C18D57EA745116DE0B36C12B6F5411A9805218B5A31731CA0A35D9AB6BF5AD
928726A6EA61E0B69FF0F4FDAB2CF5B222FBF9BDF4F89EE47373AA3944678328
1EB230EACCEFF4243D6B4F8797482DAB78C1A053F2800144A4C76BB839E536EA
2D4DCEB625DC0F754EED8BE3FA53A7AC3ED17C92757CCCCDCBE21A9D733291E3
61235172F117D4B8305B45D7728DBB2D71411954EE599B0EE786D7603D61CABA
AB241062BE3776FA150680F9CB8784FC7A94790FBD2922772EE886254B59D0C7
4A4DF7A2C1C4ADA1DBC51CE27D3FFF7F96BC5FF7382864369536BEB2EBA6DE2C
1C427990F6BC84E92CF718BC6D4CE9EC1F2DDEB8637AB1FD673C5BCE1A090146
171717B39B9A83F2DE0B79CB1B836390828B3EB6DC397AADE45B21F55D1A3583
C3A5BA93A4ACC08CCA4DB80B78AEA6002D80C5513A705E7232938D8423FFC72E
1B96313ADB255D43E2676DD2B00B51D116A328164BDA8475741EC234EE6581DE
06162F006405D6D823DC47DDD14536BB530D132975C0C436F08F9243F1A9AD16
898823B8E2739B4428E62CE0E41C291157F1886BF937B3D3B9B6DF0D0EAA38C7
D7F17D962490AF81157E76074422D746EBA97ECE803A205B482B03FB06D080D8
05CFE4868E62494AE445824BC127FB7367DD9F70B2168F2B8CA0CF190BB838C0
67563169C8454E5D0DA086467F1536F5E8A1E4D3E727B1688F745FFB4F9E56CE
4DF06341FC891C28C943B570A7A38C595E07707E41935285DFDCA777CE731DE6
B46EE9D1C3D61DB6EB8434F17B15274840BEB842587F3B9AED05B97988E18380
9095E88840F703E9BF997E8A666691909635B7CE630194962E4183C3838D9401
260A743CC9A7FC4713C309364EC95DE29F6D6E1FE8C348E25A878C7133EEA500
102E3952322F6337A44AC6070352D2594952A1234035388F5E4A9BA075B48F2B
BB86E2FB3FADE2F7F18B865A1C5CC0DA17E34F9F8127A8D020AF96CCD64B577F
A22678B54770EABB20629C33ABDEA6D9A4A4A06BC445515D1A2BDFAE809998E0
B64025B7DB42ABB5D85D4C3CC893F6E2B328B583C840EF71B0AA28AB4CB31E47
79DC6BEED89F4C56AE079B26F6AB51AF274B9BF9208CDFA555CCA96EB8D3E51D
E18EA627AD87832BABBB4F416E40AEF9EB6C9239D5566D2294006E70CC28DCF7
BAA2B14AE4A91E4860AE7F9C2186885B305F680F4B19BE9AE67058AC60C00F70
BAA0967C30ED0CFB9D9D79D19D8405F9DA9015C4B135FF6D94858C3895DE0874
4A52E593570C839162E3E9A00177EF76C00D4170496FC64127CE33120CA4B9B4
285F84D4B8536E4D0B6DFC998C61CD5F68DAEE93685386D74135FC4415C62810
4D2F6790D831C3311A68004219E52F50F500877B8C400E8A127C1D589BD3ED3B
0B9DFA7E6C3A4DEA2D3D9808DE5C6A1C9ADEA5C3B9A3F36BE5F02D094F609B26
06611B33E0328C3BA59283EA25746601530E5DFF589A751057103D852A4C90FB
B992BE8BF4395775F4379BB598D998A063E464D2B38EB7AD6A8C5AE4EDA66BBF
281A0FF99F620C276DB3270EEB27ABA3370D73689371143769098567D7079CD7
F6E4FC8515DC0146AC8C9EB208679F5D5419F227ECE23D500EA623BF477D490F
56ED223B252043E890D220DBE60F0471EE4A96565FDA9E48BA445FF958E4CA09
6157ADC19BB8DBE3C000595DAEE528D08736C42C129DE56958D6820DF82A7FC6
D4E2C3BCFEAA47985AC4689FE01500F13607C97921F523DD1ADBC62A8FAB0512
6E2F2B9A1DE90B64D87A1634521000EB13701127BFFD33512FA0ED7FEE04F3D5
4FE558964A6CD40F801D02ED63B52C4DECF78166CD5A90C6D313527395244F0A
B08D14660BCCA39C48AE132819E0724D4CC0564DE9FCC9DEF4C7BFC125FDA566
FC128A853C3084CC0AC533500F96EEAAE9B13C735C0CB25D9E908E6391702393
668BBED4727FF3B20CA9E89DEEFF09407C7022E9153FDCA2F46290E2BE476854
57B41207F11AB9BDEC6CAC66FFFA0F1795B1F35B88088575A1848BA522B0880D
81F74AAEEB2961E4F0C575474F3210F12ACB77E12C0A2ED3A6A42286E192BC69
C13988EB75FF85E4CCDDE15F5D010DC3F3C86F0EC74A62F6384866B78E76B622
7C0F627E3C9750BFF04BAA8B9EFC740213D934598DDA91D21BB236FF014E3E21
17DC738ECD87501CE944BA0BB0183C42DEF33C2A02303590F13A3A359021C400
C42B592A295EF9A854E4C5A61DBF3C26538F2F56138972AB2F128E79F5243E25
83661D676373B9EBAA1EC1A2F22471BED7FF2F8D904225E4878042FB3FBE771C
1EE2D0510E1AFD93A6427FD1CE0182BB6BF18C46F0CCCCF5495BF38C03F2B2FB
F95CE1DE458420BC02E95503832AC898313A797C74E2CB8607368F6ECCFADBC4
8C07DF7875A7683EB1092C91C02BE79BD1673D2648C70E8E3EAE73DD0098FEC0
38AB7EBF9AE1D05D4081F658DF6388BB9A8A35B8FC78F87A2C26D7C6E4F865BC
65823D51D593EC17D52EB913FE0D5FA1FE24B1A61EBF74FFCB8FE48D8F1B136F
3486364BD6BD3ADE28A0CB74B088A925806E06BA0A9ECC2B840DF8A0B1B3EAD7
6525DDFC9442DD38F308F3147F05DD51CC9D68E771BB665578C1C9838A7AA92B
86D314EF238B55F2E474564EAF0D5336E592437CA2F540FE14219769FD934023
F37DAB1F5E4595928FB56701A604FC3F53FCED80BE43D162768D8A3C8C116964
62C5CFA62B8C8D716F0177D02C1738E8C264305998DD08BA897362E6F4CB6169
0A209F1D4DDF0F3BB2602E1387BD302832DAD665C68E791D84203480325F2118
AE4A295B1900F45AE9FADB216B6ECEB955B4A3D38125F27F39FA52DCDADD1C5B
35AED1E1E1D79E5B9BDAFBE2C59D08FFEE19F6D3A6CCCB42BA0E1EB462D72A82
7B709C24D92CA267BE3AA3FF0AFF91A2C9270461921EE00A5B3B9E7957EF595C
11942EF55D1842FF3F0AD89BE86632D09E33967CB36912CF78B59D487D866086
6B23B6FE679577CEBCD04BA91D5FD6507B55AEE8927466A0BF17BBFA4E9D9884
73D8863C51DF449BBCFECA9813B6B16E0084CB944FD8D6304556D7F4F69C5853
653F0AAB32F71E69E0AC750CA64D2D873BC8EACF80BE9839CE4842D407FDE31A
B54C686C38517273B86FCEFDDDEEB6BA885765F13F3306458604F9BFE6BC6DA9
DA2FB0BF6FDFCD660C2998F52D01753FDC5EBCB838439E6801810FC9A57F61DD
94BE8767563094AF03E9A17BA13E60BE673C068B5F348AC8C6B1EA774461412A
B98699439394C32A4967003F0C0FDE1C1B5230D8D29F2607CEDF2128960C7D48
A9390C3048F789A8DAD1883097E8051583A4D0F65972A723A71028CDFE1EF9A6
47275B4EF3203F25EA8E0038B5B2734BE1BB112D5486B3AFFC21338CC75F3710
23365C5498E904F403F31B6A8AFB0CA9CAFC76EB91FEDFA50057960FA1176812
97903400C267C961BA4A607613DABDF6D38283F48021AC67804039CDADBA8C27
A83B5EBE0C175AABC84F6F7E2BA310AFFA57355AF1F1D00ED6B2275C30F35751
C3CD0E35D4AF91FA9B1A5DEF4447B3B8347F345EABB1FA3BA88B6D740A592FCE
C37DAD865175E101F93BCAAB164345C707DA9B3350CF58DFD0E5F42EDCB47B7A
2C415EA56CE0C0DAFC78ED68617D545F9CBE75EF5FA985D048F9E52EA4F88346
EC80B43F0964F6356D2F3227EC74E9C0BD3F35D9A80DC8A9A5AB79184D6C88A0
57E97143A5146C6A47905711B40DA2AAADCB3EE06C7C9FD6DBF1E82DE6A573AB
ABA69CF51F10A4658E3C99E68F475548CDC9B3410875A4DC42EB17610EAA7F61
56110C1733C03B5BA29E30C4F4EABB82B295B2C7BA5797197427EBC6DA9FC081
B4307CD919D97A9E3F942F620F90A5B84691CF5F354BB3856723ECD12C496A34
9A8CD4C318A91E694132C02B7C9F5AB2069226132D6AB53A1F744C9978623638
FDD4B91D048984A2F80D46EEEBEC54764083F2B42EA7A30C148BADB6EA92CC91
711D12A4155EE516658CECD870C363090324EC457769A0EDD403B303DF240BDB
C803FAE6BDBDA45B1663244F367A704852C492443428F200D9E6D03E7B0A23E2
DB9702E6C14111549F44FDD957F048BA5BBF15037540C465930C15BFF2E403EF
EB2E3BD7C59DFCD55794CC54F4FC28D6604B22CC4167036F19A08D7932FD30F1
C905106D9AE56557E61AFDDA6309F0C9A34B2DBF291293BAA0F0DF7F47B0F550
E4B450E58B4095DAF1F836A4C8D8BBA43C6630EC6402C342D1D60E7C2F2BEB63
C7220C508BBC3A605343DF722DCB59446242B1E88141C9FF2ED9EBAA9A95ECDD
AB3BF2B4C8D8979B54D4D417D83BEA9F80C1A3E72336D840D62820D20C4068CA
502F39CB910F7374AF4062FC1A2D1DFFA0AF574D2C514E53FE18E437959E7002
8949F3B01446CCF95615AA1F57E4D0C0A795FCA5EF45E27D3E4DD21EF0D7708B
54B5C445E79DD7BA678E6DAE545D73E9FEC624C04FF0E80EA7115DB64B83EB60
BE0162A30034796054B289202837C2B5B5DB19776887049DD452A85790F893F0
248E885169A8C40E224E81B45CEBB5B6D613F8AA38E96A03EFAA2F022CD2598B
9AB0124184A814B3A58429F3B95A7F22B0091EB57EAE4D1FA27460941FF07875
492C633CA383C740A4199DB0F95871FE9A0F32307968B42BB19525965925D0DD
2780A561C90FF5931DADF03D67E18ABB11DF07CC88A944302F28D61180D2E10B
4BD614EC91E7283C13EC4E6AAAD61EFA0D7F1037719E3FF284109C68E3C9032A
84BB62FC923E9F49E2F54C51E57A4A8896AC2C74396F1180CDA51C5B88B96F03
86BFCFC412FF6570EA3A60A34DD59470C79287AA585F910FCE0317B8DEC3C056
47FFC6D41131C578135685665948141CA2FF9557C4E754263E90530CA457A994
6460C9F1820D8CB57561E5752E21DB26C775D2773BE9559016EBA1045FC66542
A06A6EC32150D79FE91B5C87E97B62447EEEDE8D49A371BA6D731D3369D06A2A
DF50C0A53B4C0437E2AA4E13595C094530DEF0ED4F11310EDBB9E300E9B39165
C3A44300DE25AC8725A6862E5A4F03B06E491781E42FB9341BB5FF513CE6524C
BF562234C94C83C00655ADBEFFB5454B77276E00F26ADE291E12A5729BE016E9
3E7FF6A687B79EA6073DC94E1F1B7F3DFDD8A41130F3104426BFD84684F41BB7
7594A834459988429F582A001B4D192DCA36151065B8003B5B381B62799D5FEA
5270D98E632FC7B4D854FE5BEA642EE3455BFBBB7420CA78B9C0C4DB13C47982
C26532974391E52F2FBF34F3B17063DC909943C6E934EFAF3C3BA29E26B687BF
4D591AB517872815FC519CA59A20111727EFA5E1E2DB238B41B578B43D9E9742
581415AA5E620235E67AB0ED6B4CA446A0CEDAC936A0A50D8BBB2E0EB76EB279
DB0907A9998133DE2A44A98DDA9CBC73F41C018AA61701528FD1E41B2335D56B
D64D086402066CE41BC0596E3117A138F6075BA3F51F5C09241E2E7AF2379B6F
C481C6C3CD26A84107CCABA13580109B1EE8DCD74C1913904219704C1D1F50EA
E2B410EA27AB51EB568B0F55914BA08D3AA8BB741806251FC21637D6B173B446
653B202C55B99D5DEEB34018ECD32C03B979EE87CBE4A9031FB2CAB670D74CA8
29857467EBB0B6C04595E7392C2B179D2EDEBA79349265E21EE0BBC9DA306A2D
6CB62C58A4B880DEB2454E566A98534F287706F65AAF4613AB4E3DA0A13EFBC7
DA4EDD34890F78E653E9115AB57EBBA98FED3EA92F95DC3A038DF8230C258207
E9993163433A376BF91D377A05FABE9A05FE54AD82EA8C0C318DDB5E653C1226
7578ABFE231CE465D736CBA238DA759CC986F0A1E8B396F231642068B994335F
67AA3FB98C19276A104C87701F005361CB26F1E98D678E39A86637E733531D06
21FEB87043B9711AF5D9B2999535A29B5FD6F26A0CF288BBE250A134A88AE3D6
3CD9819AAC9F11F3DBE820E69C37966CD0E0B9AE2624FE4A276B83A0891DC0AE
32423B2BE733A185666D3BE40F22981D7BE6D890D0ADC932C3A7237162CE6F8D
7CFC6ADFE108AF8A1E36FF35B2878EAA338B9E23710F9E8F2802B2928C190B21
531D71EF9C8D1A1C8DFA942EF26868E5302F047473797F263EDE44131761B661
A77231234B05ED5B99E1B0B48628FC0FDAB974D77B9A6CDADBBF89132BA8F237
76B7002F73CD6A0EB08BE92B7FCDA26C57D5AA61EF563D15ED941A65C4954D22
E79C4159E0A91107C46F97B119283D452EA29ECC267A2E80841D7F11324138BC
3EF27CBC6F12EA3B87BBD908E0048D9D217317E844E54FB754623FD362F55487
70FED97A1E65DE2B26297084A782B3957364DF30F3070992D6415C4F89082507
867F882984C18EBD88A078346DB2007E7953F3A6AB3A2C0607C331BB3003CE08
5663BCE7FE5420A827D08C9860565B01B65A3BC8AC0187678C9268E8A6CCDA4D
072D91301705537B90194F7F47F2F4AC9843B52DF172F724FFE6E928E59AD20A
3E1286F11F71FFB2632434BA41CC1011140A13B4EC358B51F28E925290084739
543B681FFDFD7386BAD05F87B9D8982E2EFEDF8135B373A5C72F990A1CB09D96
60A0CC7F7AFECAF25F8E221DCC58AA48F39F5760D68455BEF2557C57F57F2EAA
F5662614E837E63FEC3F19FFB2DD84B1103B6B4A9B2EA3741FF7E7D69CD7CCB4
FC34A2487E04D114CFF64276C1564A562A2D5F0102E3CFA47EF07198761B78A2
3265ACCD6B3FBA5F7527284C1FD63C6B3CB34A24067987E4302DB3EDE6A96437
2E8B4294C79CBCF3DDA2E351F172BA5782361ED81EBFF7A53DE44A1BA87F2940
BE2820756262425E8365C41AC54CBF94AA68410F1F56A05716955FE2E3FD0138
AA5611331F6A8F37AB0FB8E300564255D932E6A8AF2137E1A0133032D56473C6
AFD61F98C66F18ADDECC12B29B89CA38F41B962CEA3BDCD7934CD4044F75DEAF
B6BCF4D47E54C52C3D7EFADB1FD42785942E1F42B626A956EB9490B30EC02503
418B1B4E3FFB5D02265083CACECAC31F674674621F48E12199DFA613
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 33 /exclam put
dup 34 /quotedblright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 68 /D put
dup 69 /E put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD10B4729E5749A10EDBE644886443D1249
2C8517DF8D8AE98E2882439FA81903941B363A7D885F93C6DF9E1FD89F2F8CEE
B870C409ED13E78B4C914813B0A01DF8F876EDCC4F384055FD37C575726AD69F
F23D50EC5BEE2FB95A44F2B2E2DD94C933D90BED2C97B53738B4B2ED56EBE617
BEF17B9DF4F314A37F10FDE34C570D7BE76A496A58242F51E7321380CB042424
855F4B53071DF5A0DA5A31B8AAF9FB4F4C491625FF8FD008BD4402918043BEDF
77B840B2BE0DAAB4EF904FFEF935954AFB9BD2041241B1BC8519EB642C89E288
479664226DBB6F1171F9EEBC7E1273D0CABCF6B1BF7F26AF21C21D9B1B916F4F
603DDB68D3614B86566FC91D67AC3F4A4A96E256FA1A3BD35F4465AE4EC64D82
34BEB4BBDDCEEBD9A89D932E55F14CA277683F279A4429B2939059D1893FB106
F1D448AE5E4C701A416692E7C0EDBF299DB408B7B0B38F672C78E76128411F6F
62DAD20DA98A3CBB9BA472B6A9415F94AF74610ED1EB9045A2B52A1914040B14
69E70AB0073D6C92F24B1D59B05C81BE2AD99D3ED86668487ED31BD3A28222BE
66F462F417FC15EE79D98B2F15FFA7271DF32E0B88FF15EED28A636809D1C712
D6A9B8D4344AE230E06954DA9032B1333396FD545000E364E7E6A79BD8A403E5
0F8CD6A2E4D13A42A5C45F3E3AB381C369EF591C48CF27CB5DDEFA1DD5D3611B
DD489D925CA229DB461C0744ADFD362CA0CB6559C3DA15C90D564FA4D011B22B
86AE5DA40DB7DD8EFC3CA2B4A21EE5569F4A9FD94A99CC2F0BD0358E0D68ED09
D5A56F86590963B05902681D2E1AA63026BA43E0D4331F529B21130EBD2AAC74
C8C7860B03309EBD39951A39F68B77D7ED2A32E8D916B563BF01A387B91DD692
62B63F060EB73609DFC6179A8F984CA1454723E9C4E607C1EE5D3872007A3771
CEA0D24B4DB83D4D6A09298E507846E19D20AD1472B58E10A8538F7BD90C150B
CA8DB6EA541956B904A5FB33BC8D7F74E53E3BDCFF8BC05919D31FC76118EF8B
8F0F35C5B1D5CCDA050605D899F23EBFD6F7D9D461FED3B972D9036B56D8AFC0
2974F7AABF02B729E9C41BDC25CB99FE1945FBDC9A18F383C4433A30B98C5233
D2CB513251E22D4725FED1EC3484882C774ACDF64CB5E25CF7DB0820570898CE
57ED95C755F2579337B95BAC50E3C738A81613921C7756CDB51BBA5483BDCE88
6A098835E130519E9071D5D7CC3E498E6672788DE288568EC50C636A8FCD5B19
6F87B55BED3970B6122815AEF3FF77045D6A6E3F9C50CF9A75519684782515E6
8412ECDEB4CD45E1D518E96272D858DBCF144C8AC29BD3B8DD91D49BC85635D4
4BD7D1EEB8100D893891C4C76A78239BADF15600B178626F51670353738DCDA7
82878DCD1076B18A3E670F03DE2BA917E3284D54F612C02DD4C626DB428D3809
A6BD6549A52A6AE38C80AFB8C867AF2D6EFB122E7D757C046F8ACDBD504E5711
DBA26D56A1581A9494C920B4FA5FD6B15306114179484431F2E228354D5A8449
DAB2B2402C3AC9CB6505023D8B93CFE4942CB37F564FB9D11FBBD82D9BFCB13B
1422244A3E3A5D516F444AA9C6D5C01B80C11639FED85A5C880D6A11F2D202FD
420642FBCEFE1D9D56A1660D2EBC02305D5ED7C426C5DA3025B7BF9CE78F8102
A53FA3E366EFA34AB17FD0BB8F00C3150F5957CA1EFDCC281D68285B214B3C5F
E97E4EED7C48486A5368C2CADA96DE5F9935F53073E0D175262C62009C2B6271
FD7364422F78DC07F1031D6E219C2F7FFD81C21A920BE7B250818AE5C3E71705
163F0CE1B55B2F5B035ED70817E8C999AEF82993A3897A30CB9800A890813A2F
36AA7254E72150CE745A76071A57B7EF9795E9EC65F86982798C63ADDD06D2B3
9344B50130917E8EE3067E5B94A198A70F13E291B9D96EC29E90C08D76176F58
B301B84A89A526426FB5754771C843820FA4A117A55B66ADF5E40B09604AB405
35E4200380CBDCA96015D3822CF620044DB7B2CE3368C46FA4EE69FED5C9ED87
4D51401DBE26B79EBF020D89506CD12772B0686B8AD597B1A6E1B7798B97F509
AD5A285835F7340C370CB8C93B08A1391CB018A7424D972E95B21CFC16B01D9F
01C7C3644BF8ACF7CDFC391220F851631C17F8501DF784527E7D439BC2354439
1B2ABAA46340010DBFCC4D7FC34D957CDBBA85581B651F1C0A168BA08E65650B
E118AB5304D127F87958F958B104013B2C42669F137766F11DF14FA6DD9E9F4F
D8C0003E6F232D70F63CB15A4FAD891DB8A88E4538A6A0C4874E486DB0DFCB2A
EC3B072A52D0AD3D4BCED50924B9FD409D523F36631A3A54F53E7FD9B2F1A419
DE778D95D3FEE39DA6EC2972C844CA6C9C38508872777FACE8A3E46D69E5D786
2419F8BAB37E332C596821BA1084C3153817138253C9EF54B270A40E24259C38
6E238EAEC570134742C4360EBB285D67A9407826A483448C7FF5400BFAF42377
70A0FB71503883232670F38ACA56E9B327369F803A4FF311D0244566502670AE
F2CC724BEB45D368267AE58402B3EC5D6A1E49026F3001183F91D69A3C1C428F
1C5CF7BB61078B05975B4625D5347127B096F3509011D39F531A31007D8F7CFD
44C7D257C583A300955A389570A9CE8E4B6C4211CB77B46CE1239DD63AC106CF
AE2CA854D58354631C44746579957E6555865B27547595851B12A3C1E1706071
D4495C9BBA9BE25B11E6B33263CA2202648F246AA8FB60C78FCB74EE6E8173AC
BB5E5FD0F06E2424FC20F93589AA9FA120DA4968CE545FA90C93B6508CF9AFA3
BE9D4814224692BDA44E136B8091D94407855A86B5CB35F2EF69DF71A1FB86CF
F6A15E8C93746D93ED5DD023154AD5D0447045AF93BE0C87F5D094CB46F046F9
0EED17CEBA877359A9D9DD8E44DAE7A9225689C04DA4D1681D45410BFBA0B5F6
5BE5F36353C3EAD5B385E54785BA85F8797AC633272EBB9C88455D7AF8D58D6D
F92FACBA2AA12064034A729075FEA0F024FAE6883E9A92FC0FED2C2E713B64F3
16881B3FB97DF0F9A11121F93EEFDB378375DF47CCF62166262AC2866570B0AA
9FC401EA132D25B7AD6D04F8F648A3A9E77281589477E7AB494E1AA44CC7230A
DB6126E67D23DC4EFAB7A7688783704E8026D233E83188387CD2C0F6AF4B0887
3417935C46364910BCC1973D84F54D1127133F73988DDA0D17E3CF459EF266D0
4FBF15E7E096531080B2183AEDD06BC8078CE1886F4E82282701AD4AC3C9C883
0B664B90796FB0CD95E2E3A43983A0FD30CDFC5AB855D56CEBEEBF94CDE49D9E
4E6BDB56162C31505948FFE886214DF47B13C608D6925936ED01D8955E11C5BC
265CCAF8227BA3EF76AA356DC0F43D074B344490E066B665ED5103EBD7D01272
44ECE3A3762D7FA29C728051B840F0093408E489F70958EECCF947B56045B21D
F6C9608635A76845967C7BFDCF03665594824B71E8CEC84B47A910FA0E9F2D6F
8DD0B52B6FB140187441B0D4749E2B465F4007E1DA22298F92B74CD20C669263
6BB8408E79C7F00D97828EBD43F7B81AE0B9BD7AE7699D7316DC1DCD3EDBF3ED
FC17C4C4D58D89E79035E3C30AE76637C386BCBA8A674DACBD96367DEE3D9088
3CB9F1DAB53B33348A0AE63FFDA54A50A5A6674E201558AC9CFD389314366472
44ABC9F2A6F66D76D0F99E9CCB0E95059707B156FFE60676E1AD7D720B98CD70
F543696B078B05975B4625D53FA607E03957F44023B6732CFE797FBB8D647ED8
E6E56B407CAE134A08F8E37A48E97390CB9A7EE471B40537F79BFA9650E3D407
692D19E6711BA65863B6C90D2F048B4760A6C2E6A53152D7E5C86483E03A6EFD
6BF1AE1847141D567C22A1B9DA856E45FFF9ECC814325EE5EA04E0FB01EA540F
4D591154DBD4BC677D8A1792B270A46272E628E932844BE64C2DC8726BB9B9CC
41D34632D02945DFB61EA772351E48E30F6EDA6079EED109C2306A4A8DFC475F
01E5A312BD9C984EEDA25C4EBE5F39A41D2E0C84AB2E66561EC9317E9A20690E
6646C3AADED59B674A3D02C204F285520D84CEC72036DE568C790CFA64C204AA
8AAD5CAAF93F4218C5E1EA580DD2D4E059E1E153939897702F21F720E865A75E
27349DDAEA91B3D97F8810B7B409A9D3843BD0F0EA200FF4601202CE0379CB56
8D1DCFB5109D104E1DE82EAE350B2C1180E573CA0E9048C3EA6C25EBC90C22FA
89AF2D35915CF5DF0AC8682B3D904B4D894D2DD8099F6BA6309A1A7416E2266E
ACD9B5914921DF1EFE60FD1C625589D0C8CA23A1FA382791F28F6D581BE3955D
0434EB9958B53F1E276E3AA34C6A1EE20B242F9922F017C49548D10C96D22C17
CD43FFA88505F3C22E6FBA8E9B22722DD25AE3BA2DEC2A0C928736E8076B0ABF
CA115414EBE5E50B3D0AF0C0E8F495CB1A0476B2E503DA7494BD5EE59633708B
ABA1C0C97E298AA75C28AC30B740FD8667305D12F30BE39787C76625655E49F4
575F13B64D41304F90C6DA143C2A2EB8991750B56A1509B86C4E9402F00AA25F
959DF7A5D7222C1B9B68C2557575A6841B9EEC3438AB1F1A30A2805ABC3BDD39
7F3D5B215B0698D8DCA3153B3DCC706DBB262C06251069991AFA8CB3BE66267D
D529F4B45382F3E6EE33BB31F876BEE000302935A55EBFE1CE914272A8F63850
2771A0688BB258CF46775A56F84D29E6D5E44268AC406378B19951966694108C
25EBE2594758D347565E6CFC32B04E34EDBAC6AD5E57011EBCF507E7F7BB2427
ABE3E05F06405FF8521277CF22CB1270F3A107F5C12825B451DDAFD85A6EEA5C
8997BD08460D6BD6043C9CF23B9B6CC03380DC8D2EBEFDADB1AF6AE87EDBAD04
D2E597A96CA29B0C916029150BCAF4043A174113F71BCF54554B866C87616C56
AD166910B488AC29CF0C2492165EB7DFF28DC66FCFBD20A0A59116948B1C5DB7
B70121D4AC01F2ED97F8303C7FFFFCD69F5DD6FAB3EB9263739A22597044F1BB
83B0A29DCAAE5937EC7F21EFAF57EE0F41BD896FC5187BD28FCFA68AB32195BE
1C1A4C83E5DC7EEAA60488E36300C82DE0075D08C1D8E30361204DFA0747FE3B
B1477355889295140E0B4CC8D42A6A2BD97D527FA8B6EE65173C138D9725D643
B3B9677C662ADA54DFB8262B2700D6BD05CF7E3302B2FFD59CE49853D03EB6DB
A4B33E6DC1ACDBB8397173FE341A2AFE2F739ADD4CCE4A3C4FD207BF35A4F01E
C52C6C12752EF5F7BC5FFABEF80DD07B73B67B3F7436F602C52F6DACF38ED4AE
1B26524DBAC47C7D6A34A69C7FF0DD2B0F7776886439AA0128661CDEB0861ACC
BB2C186777A4AE1990F888FBDBC7364EA2A7FFFA0511663BBCE80C34507018D3
94682B8FF65D3F596585218F2FC09EDF50C8168FC7C9A3C544EEC6FCB9D32EED
3C18EA1893AB8EEB225333CEE5CAD8D01713C6575FDAB7F2EB73C46CA742680E
C373136A877BEC773762F8B3FD90BBB124A22090ABE43C83C9F29097AE400B89
99F0CFEF8B5704DE7CB891D79D083E4DC40E49F752F4245760FD77BD78F0A9E4
966C8BD41C722468DBB47237E69F67465D15C4FFA593EF7A8BA3B4E0911481BC
7384E9FF996432A5936E7A753588E4F29B98ED828D6D4D6F6ED2301CD5B85457
E35D0EA0C43C463FA199093CFBDF0EB1321AA8E5F968B1A42EF61A0CBF58CC24
C74C475F314AF92BD24E6936C175A3E536B5423D7949693B48A5F8AAF600C2ED
4651DC9DA320F7E3967A819462352DB2BAF4393996F235535926C9BBB166F291
81BA0B9CDBF1F59E00FEA163A3716AF614CA71434CE2B9401DEE563A2AEC12EB
B1828D3B8660D4FA784BEFBC9288DABEF6896820F101054AF319F7733CABA0C4
616363F99983A6297A9C514E65DCE0C5C31E481D4D4098AD83E511AB1C1C4671
03EC293E07347223C5B337C116E31F92ACECFF65388FF38319632EAAA105DDFB
30BF2826D571EF958527CC1D19F3B53264B8EAA4E7E1EC793370F0EE8C75D2BF
57199F1409BADFB192833E4BC0723991E6EDCD62A22BD66E316F49216478DD17
B7A882375D2BA0F74EEF6928DB58AF28F8F9EAE0E2C6661279FA9205231D9215
3923FD82F013CFE4891C595FFD6F08D864E5B115E899373EDA550B249837C728
DDCDC0695247F040675FB09E90FD6AD32DFBD45609E54D93211D1D4D86B66D2F
3ABD150DD560008F8A17A22B382AF79EB39CA157E7940E23F3D012612A2D62E9
A536D56959D70E4D581D6CD505B0116ADBC0851EEF3FD2792C69A31C9A300BF7
227118B6EEED7FC33FD8C3428EFE53F254889F2F7E9DC1EBEEC1327A11762807
3DC6645DDA968D5D440C972953AD904F0DBAB8F33817212560C1B0856FE1CB96
4AE874B3CE2D9A2610C56C7D1E4DBE00CC22C1FDAB107046BAB656BB0015D7D8
0EA6F20B4D29AFE291507A6BE17F3D9D85877923B11566AFCD719278DD590F7D
C3999CC0CB342371DE53202B2BBD9CB501A362E074993B5A29731DE06775A60C
D3575448D627030D874E82321F2434A497D1648848B99BF3CB7946EAE50B2B8D
3FCFDE9B838260E30B043EF6B73E6B38946DCEC09A0F5437795401C7AEDAF362
E92C39D4061862C9C7C7A09A4B6DE4E7709D05CE2C9768561BF120ADCA1D3CD4
AF6F8A8A2EEBF2ABC9963381056550242F23ECB33B7F57B1D7426169B6850131
3636E3F7596F88CA7EC33FD5F1AAECBF8FB6DFE7FE9C79369675F47175FA3188
627757E9C741FC8C4C2B6012003EF80937AF760F5BE2565DF1C13C1A1F22DABE
4A55F10686A256004DB69D9BCED21F39F0CA10F73113EC820049F5CF44331F81
640C9945E283251EA70D659831E24598A23479094983D87CC8C25E4096DB1152
FE9AA765D2466DEA29EE1DB67B5D39E98B01ADD16D6BA3A241E7542534D5F0F2
63FA4C38C333F4E5B64CF12E6C4BAC0241F2F856EE398D78E93616D40CB209C6
F73428F38122BDCDA291E50AE6FB4EA25DD52B8A38F0CD2417016A98AEC064BD
C0D4BC3CFCB64E254B8B2D24B5676389B5898C7C96F8871B54580367ACFAF452
8154B87C412946A75630CBB06376C019C74A4233EDFE28D1DBFDB7E916D01265
77FAD42229DA78D3584068B9F80B3DB8B42D554D1B26AB95F4C2DEFC2A8BFD75
DD3DEF1311E094B951A6A11C6235196647E3AF59012D2EBF366F9B92DB13B12B
C498AFE3C2E46AA8AE77FF4CA08CCE56F6330B4B7A355CB121F9FD095983DC13
A80604E9F4D93EFED41D9837C2CBE1606BE63D730FF110BDCE1BAE780CA918AF
75D995E3ED05B3FB2127AE35A4B753681773D611C4FE26FC7846622620BD630D
E4A03895409BA514B0811D271B835FB1065F2304B548B4E34131474AEC1CC535
B928C278A0B90D9F8B68BE1795596C78B417DB505F0A23DC9D12A2B7FA753460
34CE9FC2D2C616C7607608DEB3A9914E1A986E1B333DC5EEC65445680C5776BA
AAFE97ED40B9E5F70D520A9500C9501F0935A5D50EAB2DC069DE573FD62992B8
3FEB244152C76B7FE073F8F312C0A9F36E1A30D0DCE77437924604B8F113142F
B0E82B7ECBE2BA971CE65E6EB2296D1A9864CC26262E13B161CF56BEF07F78DA
DFBFA39243AAE11C4ED5F0F81B0056EACAE33C70BC876C7C271D8388C59589DD
1F6FD79FEFD6DA2C9D0E64DDF9A3590DFD9DE73609EF322C012EBB6CBBF785F3
E35575DA3D4CFF6E1D2E8F68C2EF706C01789D984F3E835E4D15291310614AE6
8FFE4DE8F0B7572ED35B3C8872A95FA7696A5B30B4B4299F732C59DAFA4D3876
A2F2616D2B13C382AE49E4A80C1601CB336F1BA6DD235D36BBD540E7DDA396B7
D7FFB7C891ADF5D283317930FE07C6D5942C668A07924E569C0A8FDD819F128D
37F52FFA269478372BDD73B0B19BD18B2C9AE473A0D3AF83035E99FB70673592
C99DB82B3F3F211AC980414FBEAB6FE449DA75C0F992FF3B94474F38D785239B
EC532E7AC434A6E9AE8C775D2EAC5A69893552FF04B1C4A1040EF523D7275F5D
361E4B6EB4B3510EB154B49D7E4F133A65343294DE9B008EB30A4D7168764754
ED1663AA56EABEF7C46DC18FBA8A9B14EBA8B38A8429E1867478C6513D50730F
9310FFE1693A37E112F0B1A2DA05E665B97702AB2AE6DE9A0859FF4EC09FAB88
F9A81ED9859A926CDE447B6A60CFA90C07DE43A8A06DE7914168E36144E1D6BC
0095A8F8444C82152B429FFD281F635EC85AD7B3DC130496D3CB8B1690B8DA9A
B96E6FDBAC8921D36EDF150FF2E00956F23C82B5570D5928783CE11E24A9C7B5
559EC3421A18008290F019A12C25326C2E8E87E9A17F8E27FC57128CB5C486EA
632C20FAAAF8411CD3D99F6F40A1DFF7772C84E3CC586400D2A33CAE0182B2D6
566574579DCE45F43E754CB6E5F31A1D5AB4876A7114A929B77BA77694AEAC36
1F11BD9B0955433ECD64AF8A1D2D7518D400175DAFC0410791F8F6030884DD46
BDBAAFB3CDCC36959DD133F4806048001EA0B4841BCA0505DCEE3A9FF14F2E1C
3BD72698E156F8A42D317DB84ABC00642A6E28DFC44714727A750A37AB211EBC
0E7F529A478220D9E700D8899B3E542B5FB600DE2A8E1DB7A58594366FEB86B5
B19B7D60A5BF6BECC17F90EB021A0B47D39702B85A16F85D242B7C03E95B55E1
6BB860F09EB311104DE1B5106E1B4BEE6C0B6A0D74BA5D3420155E137D7196B5
3B0C945751D8FCB397C13753C1812ABA8CE921BA812C871508ABF357365F5F1C
C745D389931D96746DB49DAFBAB2639B7F2E82D636736E51CB96E8561C64DF82
6992C0A9644713D0092182D15D514ED7143D0B87FB74ABAB7F54E0DAF3007E69
E0609309E279FF60E4F13FA94304DC9B7661D01A0BAB54E7C418757B8A688C09
6D7D4A74E81ADC4ECB01FAE510ADF6B0E033928DECF9817BEC91CB2386D0DC14
27816982116B7AE8D1C9D00161AD2B23FCFF9D60BABFE3D00CE1FF15CBF486D5
C3933795D4EB528A4387466B627BABC4737FC72F47B8E7027051E47C8CA1814A
8DC52DA8DD4FA54087018B9FE33FCF1D3495AA5223518F79CC32E82EFFD94B1B
AA47C5DCD53F216831D2708D5D23F875F88F4E269C226D743EBC3C10E226A4F8
2C96D5742FEAE08357371915CD4F8D48CD10505DEBA3A8B0B1B70DAEF6BBEF02
B608E8952177F96635C40BD471895C2F364409440AAFDA3346D0C1B8DC976AD9
C04073D2665641D80736302ED9BF1054DBFD15B15E4CB36ED54081A45B80E778
CFABBF7A0F13E17CA0B099536E9265135DED91B46725BA3A07F04A30B1C3E6AD
87C773B88CE25C002BA2965F06314BD4704A085E7C0B45AFB5C5541F83F42146
9374E9ABD458444BDCF20915193CB56766693D61E88FBB6CB58BF54FBF3FB9DD
9AA3572AEADA106D03C53909BCC4CD67133D1352BF9ECFA7359026E180C2C1A4
A542772189D66EE6C2F2678E160F99C12464FEC05C8DA03AF8620235D453CCF3
8BB5AE7D630C04C9F6C4546C8FC10C245A32522E092A2A3DB0E9723EADC27355
CAE2AC68257B538877A890726A8F21899224811305BC150091D17ECF0D620EB5
53984FD69A86F7D505A81BE949B28B25C0C0486FD4B93DBCECBA85F787CA48E9
BADDE12901EAECFEE8F7FA151B0680AA99962F9571BB3141B070D94F0E3C0E4E
FA8E327603EF5AF53C791C8EE72C3ECE2F05ECC4644FEB948CC7720EB7D8BA05
79977E5CB1A8CC86483261038F42960DB717600936C8D5B4EA765BE37E23FB87
3E2488A4C85274D662EE5F5DEA4AEC8F74A75B809D5F8C644047F10D589350AD
8FA27047648147160438530186C229B614BBEAF0F3E03F465D23252EAD67C2CC
49D5AE996CDFED53C583C2C8CDA28D96A0D90ACC6F24B57B5F27C9830FD95DEF
8FF181F446F1C9919BF524404D1AA8D1A8521D21F8E65E3566D8631B5C4CD2ED
8A22FD938BAA5DB6F4B4554A42C4B0F4B3DDA479961789608ACF047345AA5EC2
AA108953E32CFA64906B285C871F13268934263BF6C7DFF700DA715F169B2E87
0EA073302C74FD42806520D5B3DAC6FF8930B956F532668632BA3B0036059F13
85EC57EDD9F613F929A7F6FBB1EF56BD94C5718256C8ADB43F895EF2F84BDCDA
02674B3A2C477D91D666FD0E94DB416EF91AE19994AB7064656667BE5E83ADDD
C8167EB3CBDC67D3F254A42F4FCC43603AF5CC55727347FCCA2193ED7D677ED9
0A87DEC6C4F8EF454A0AE699EACB78B1091691E31AA47EEFAB6624D85D5309C1
919EB032EC06EBD028267108A7F7601EFEBDE77770418BF13BD6A4AE76E12EE3
09DB23CFDD29BC35060B14050783B3EBD63B0DE3080951DF0FFFD60E2AC35B5D
D4570FA1F8652D79942D1E0DB01AC764218808303435CD176CF7920C731DCC7D
74FBBEE7AD5E148ACEE6283849FCC4B5BE53DE5F6E2DCEAD3274080643CFAE89
F2C663040A968A91AC877ED0D9966EFCF78B3CE7353117E038264E569A17B1F1
5C1262C25B948B21EAE46528B51D00FBA1B45B57E688770512EB28F827A04246
757703352E4FDBC019043144B1EF85FE1BC6954D6E9E1A135DFA7AF1D892157E
88B2CAD5E43107D35CDF4BEF53D5E25D151E833BE27A990D21DE75C1E0EF47C0
D9A6F2F10DB4F0976977497239E6BA7DD74248860E839893B42DB14ECCBF0274
2EC5672C5C34D064BCBC29DC3F19B1998273EA5EF8498509C0D2E9C659448650
FB2EB3D58C0A596082099E6022C7A8EABAAE60285CE6C69814E5852F46CB8492
F06FC8FB148F53D6B38544F2E97812A3DDEE0208689062F5CE33AA3D9169A2DF
E73AB4C163474B0904A6F308ACA71883BAF1B4DC1D35BC50C6AB827DE0FE6B17
8D00DC1B32AA599C4AFD4EC5FF962A381E2F7F87E92DEEB502163635839F622F
0EBFBB4BAA6264A4CE2FE9F7C4614AE31930680B8BBBF517D14D26C5E00BE4C4
2B3916477D8758F97DD1996544C7D88980B31E2C9CF7E49A8F7F800212FD0985
527DE72BC17388365A5BF4A45CEF53D0A044B5076EFF8036F633277CEA430C82
E9BD0603E20C93F09CDDF4387816C2AA61BE9D43A30CD4EF8D6D434BF0EEBE55
C2F8965AE185C0783B24E7CF90189CA0412AC25FB1D9AEF1A8A40F8E003A1345
2F659AC6F78DE24204D5D721ED6B456BC04F3CD6AAEFD10374A34F14A7E7D47B
2DA3504ACD8B0CE0F847F0EB8FAA369CF2BDE44504D4E7105BC2D4778541363F
9D6D15F78C322A4A300D251B5EC16F9FF537905DAC7B9A576B444E00C0165356
BF35BAECFF3DDAC68D03244756F9564075B5AF0F26E046D7A7923049C299648C
EFBA7E6B562EA31FDD337899CFDC6E7C97D758EBBE34867878C14A6E08CBBC8F
E804B492F0067554357F84B73EC233B8857CD2E96E222FC965CED72688BB67CC
FD1533E0DDFB35391DB42F641B1360A23C7D1CB4BCE5ACACE105967264E12921
676AA54929CC17708A53780F221D4100EC0EE6D0E9834A4D0EE0C82059EAA042
B2B7CED9502118BAF10C4AF500627E8D95EE4743B676EA57307B242D9F2FE340
B7034DFBA9F43C07D6DAFCDA6A460B31D0A04AA9B8C4BD004547C597CFE3BE08
8E3FBFF60829097F5AB92F49CAA719000CFE69A024D7C4481DDDD7D2220DCD20
1512C6DD0BCC5F8A99DD60A5E00FDDFACD6BB0EE752B961B4CF3BC60CCE49B04
9931131184682A1D5480D3E7EEE5CA4EE66AF5C37FC092EFCC27DED2DF31D21F
DB09B9E197AED401937741F08844ABA7F849E00914F7A27AD35E4607DA883242
81C6B5B80115E2DB2DC05394901A70040EA3A6A6D17E29F076A66D12C173C1F6
599D84ED45C5C4955388F0A3BA499618E61865E62CC512C8103931CFCC4551B0
2CAAAC35D6CFA1111F1A9A3FEE083008D608717E2A7AD56CCC67EF2E37376D32
01AFB475BF666D58CB54335FB5F045225C94BBF3CC9576E3BED3DE4AA474587D
F7E6ADFD20E3D77E3C3F66FD6566CD04F9B470EE9C83171E157B74AEB75220F0
6BBBEF78A49D1AF04859ACA4929A99398FD6BD00D644AA25BD7A7B9ABB81B1FF
55C11D131BD76E0CC2AEFFAFB52E8A647A2DEC0AD57D56CD2C60458A0D525A4B
769149D37006760D3050CBB17BAB6CD24BFBDF6AE57B49D6B7E352B2B129BBFE
ED73658F73F259A18C882EFA842E75B33773AD7EFF736C32A38ACEA8B3BEB091
31D3CB0CA981992248F05AFCA494D40BB94F4FC0A3A9F6B9CB2677AE6CC4BD65
7CC345794C70A3C5292AF4E4D26ACA537C2D0298F01F85846B76AB69AC3CF1D7
09326A4F5115A353FD63C98B2107024FF7EF45BAC7EE3C5C6CDB1F06E81BA77D
A8CE552BBBBE9BC040D08E736C430A03C4595E4BD2A74EBEEEEF4D53328C5214
D2AF82F88CB899EDF3137A5DD3939A10EBBE97E25FE00C4625A5552F8D2F3FC9
04584C65C66E8E0BE1F58D77DB3EA545CC28598EAE7322E53DB96F6D0327F239
37E5E054DED7D67BFFA82BD828D2CB5C8D8C519C0E02564C33BA9A7A86429D55
FC9E2CEDD0705DD11D793B94AC79D42B8EA6694FB05B2020EEEFD0555A9368A1
8F9EA441D454144379E63D9D00667C6773181A71CB1D239E8CFA2C96619B238F
1098588EAA5012F64679CD2E76FF95787114A679B21E36E627CE63475406C01E
76B37A4E2A0B345B20660FDE17A566DC5EE92D37A6940F1A481A8824591EE885
B2C303AED804AE3CDF519DCDDCB8E5AB4CC563B4EBC686BBD5D6F5A9C9287475
DC07F60D39258053AC1F6DD01D8F770126DF529975CF0C876EFD762B0FD8FFD4
2D6BADCC04887DB1423FC3FA9BC22287F556694868F44EA4D5ADA81C5EC47F35
481CA873BB205785FAF163D85BE4F1AC108E9DFE1DAECF270038E9216E6FEAC3
8C085EE5B8E4F1F505DF691FE8AE65193F729380B2D942597804DBC7FEB7349E
FD3DED37DE8F4B5602856B9859EE893990F07BB37C31234ED8CD77320104D0AE
643498D87A12D983D518A77BDA9681C75E6861EA854D0EC65A4068D86B499144
60B7EDCDB5E81EB923D252C276E694A0DA141E88C2C0245365DB1FC6BA91E207
5B45E91B498D540D6ED528F55C36A472A80713DF5CE4BEE6C58A0AA0C0098AA4
DDD40F8A4B5138B5D1242BA12064034A7290759838278ED30B7B88C01CAB6A43
A63F3FAC46161EC2BA03EC7B3993821C52BA3B1EA36662306C23046C16765D5E
72BAC7ED26CFFE907F1F6F217F36490D7A18BE3EAD716DD42F6E7B3DAFD7DE71
2B928B59D4219D68EEB8C2FED4D69A0867CB0FC523601AA1A5C0C94C7D68D288
054C20D83212CE59ADE6A0B1839D246322AE9B37685ABC5A4F5EDA28016E3013
55C6E42CD4D6F45F32B7B7AB80297D5ECCF3764A7E45389C1B8E59443E9EEFB9
64648D663E1C4368FA9685EB120C3BB8AD7B8D821EC8A5EEA94E23CD036B2F3D
3100E48D4B802E9024DC1E9DB261594FD54612354A34E0010A5C0F3B7135E2AC
38444FCCFB7331E0347ABF818CDE33F040938EA8A5B80777873599BC2157F1CB
9853F9D49857C72CA4D2A891998FD2BF9554F45E7B09C1524DF89C30175867EC
099D12A4FB00F76327DB95043966215F37C65F94D437E599EF899AE7B4804001
687964E6CCE4CDB6F93E6DCA03521B0B67C0C6CBF1440334957C1018AF5538CE
2075F40BF93049BBA14DC98ACFF4FFF9E98F104C611858D4BE63D86F3C3F4F69
C85F9FCE847BC87A47FBAE4135C510C4880A83F2045F5CDF499B06B4CD51050B
4320381F74D37D81B3CA101273EF3CE1EA2C180A7798EA91CC8E72DF9410E0EE
DF14E995FD65864480D70C305AAFB174F788BFA87893118B8C97B2E2FCC87F26
6B3BD2A41A9154F41A7BFF81616C55335E0F0B69EA06B8CB64D0DF5CBDDA57F8
5C72CA43FCFC27EABCE2CFCE23FF4A1E4DD2E2AC6F71877AF5AB8C474969AC41
3CCAA4A4B30BB3CE6D39B62E74D1DCA54A43A9E4FB4583D3FAD740022B6620D8
828C1F484C798ABF8E7B39D916B75EB91DA6F7B5860162FFA6887B80F058E626
0E9A1426F5FF1A2D2FC1E741F64AE188160C7BF91CC47D67A0F91032C6C82827
8076B1F6EFCA0E7C64A17FA7322E3C6545FF971E0E9FF61F6816E0030588F963
C25353A53C4F57220805E6BBF5D50AC53AECEB7CD5B980B2D90C808DA1D2CAB5
783B11EAE35648A2E049A4C76280D60AFE529E542684F742A37E86785A65C200
F9CE59463A91B0D134A998C5E4AD1B1127238113585F91EDAC3FE9BC04161592
25385E914CCCDA44848F4D60DDF0D7232FD4520A1BF2FDF409FF127092056D95
AAB6D9BA73D992E4E2EDEA0081A12453011D55145BC9DEFFCD539A315997FE17
ECD452D5CB4685151E7D5CC443CD8F3A6C576F4F09BC0E36A2081478C38D1E16
AF2F0E2801E6F070607D18DB4FC12F7A8E9820865D77C8549C5BD3E623E893CC
C258809A1ABF2C5F3B07D00A6FAF1D4AEF87D5E640B4A4A488579FB022D555FD
7E54326300B6326D7C0F14BF00D9308E271447A44BBA62E15327C9545DFE265A
0347D0C3610185D9AF404E792B1810584C6E1FC770C88FF2FA75AED05AEAC56D
06C4279097919A225431E9DD7032326DD6173577D359DE28C4DC907656DCBFD8
744EB681F5B21E0FF00EF866C166DDB7FB747FE306529DF277C27E1B178AF4E5
BFBC7AAD130E77B48FDFF651CABF32F8F08616DF82A9F5566A78CDF03056C507
A319370730CA87750A3FD101C4CCD765C58DA0D1B429C8EC09E6628C003C1206
FDDC9685FC0671736491D68CBEC60E780C5187346CF649971D149E7A20F4CCB7
0C42D174AE261DBE8273FE85B44D4045155D9F4015E760435C236680FEDAD197
769522C265F278D273BF489B0D9BAA0148B65C336ACE743EA7456E99DB3FD657
3DB35ADB49967C5E6ED70A3E3EED6311F109F3E4B344C36B1D860BC75D1A3FD6
0AF10396C39BC6FD45534B55905A516A5391E305C7A4D8B1F52B98BF47C18B72
87B6D47603884440CAE5F1CC9AB93D581B8B56F7C49B02550B15DF1666B7A293
9B0F2C084A379E7CADADFC92552218B94276DBA3704021DBA350979B22165671
3F86C2F164C00B1305E5AB91652AED7C732634AAF5ADD47CE93A2C1C0151AF73
195B3B8EFA584A306066FC9926DC76D57F83E6DF5E8F3F1DA57023B20E2848D9
4554E0B538A81BBC30DEA91314C96544C33915568B3A9BBBC322DD8F48DC3759
6B31F8D8A261262B7BF4C8AF85F171ADF175437C766BD9107CF46474832E65F7
1E79F0C3107EE2354EFA14E7EFD7C72A76C404DB76F590E6EE157DE3D8008268
A20D871610CA97AF1E53937F0B41018EF6036B7C74DC4359D740673DB8F60579
22877FD6504F6CB5D8B3994C346848AB668F2087651289A57193939C97C86C50
8927DD7942DE79ACEE9115E39ED4635312449C4E5D4E6F1DD43F318D0E66388C
98C0A8492718F9D74E0B395D4071D2096108BE8B3F0E93183241A5529227268E
13A849C26DC65D09C9889215773E4554098B5BE0B491CE4E4283DF4324714244
B43226C3103B940103F43E2FE035E4A20B95A7345FAEEF22C2FAFD383392A0C1
8A5D09B0EA65D9C14A25AAFF389346BE64BED7B9F6C944B5E4784ED3B320D861
FD70A125A94C1A2DE79F2AB1B5F4C2FE34BA7B045BE803751E559CECC119243E
8374DB2990AD7567F19ED3DB03731EA6475E121900F882E59C6539461448742F
A221B53214ED71175C5ED9DE7F8659029E33C79E83E8579462F65BCD3F678EDF
4E8155E85D54613E69586A25ABC431E8229F77205AE678E651BA02E3EE73A598
FE3EA637BFF5A65D8E896901DCAD0EB47EC02D44B35749D8F0A4776D0F617976
E943AFA694A02F575CC68DC6B206E63132487E40BAB2517B0FE4A94735C3FCA8
E8467481D16E8AF6F40CC3721BCA881FCFFAAF236821825DFDFA8223F45D4C25
211074A60FD8148B31563FB4C24EC5F894CE85AB79C82F12A3BDFD8B82FCC8BE
6B4F275FF23CF4795FD629B57FE5A30C5DA02DC2E30A73B6ACDEE0D1DD26420A
95C5E90A9688B553B8D19BF698EC2BF95FE58F6E00560D1747A0C2FF8F098BB9
19DCCA1DDDA82FEF9D11088C3B2F98F1386BC7495DC727B6149B1166FBAAA93C
F4B23A110C072F2AD7302B3E5E535A6D5F212D01F53DF04D76CA26B38EC3236A
719A375D063CA66BFBB3F06A4BBAEF940BB069D89907EEFBDA1CB551E9DB96AF
E24A1756D3B8A38770249BB361C0D97C16513D0635D05D261449733E18D976D7
3CAB7AC955CBA7C6182C5C9FF637267CD49D5413D29B7FD4880777BF90390176
5D6BA2C07D021167FD679E68642D1160A95298B22A8FDD0268521CAEAC6567A8
BD22F41E6FC04081BFE1B3E52E8233259A6FA79E400CD77CF69410E9206E34DF
194629BCCD8A6F5F9045AC095975F305B032E8A39FB04095826E4928CBC3C8D3
E114453633FA5F8A690AD4BD706694B1174197F68C93E1B77F25F92EF58EB9F6
7D665C0B6259F550A64FC283F875D65F3C4E8023B0ECDBBF1D062F8F598D87EC
E6594BBCCA770946DB707CD32F5B68A6FC9C780AE53BD88D99125024934AB88D
961E30FC232C39B7EF03A6B9AE1AE673AE5B1C52C82279B9A40686976917351F
82E79FC8FD2F4A21E3913A69AE6C3C99C1C3C9F5938FD5017CABAD5D16A53A72
197B3CDF5CC0AE5B8A959D4D762E59534C445AE6ACD5976F3BF54E88551DCDF4
2707DA255A047CBC467E6EDABF93D89C4C01A2EA9FC2012E9BBEE7D01119D4D3
FB4E199169E92C47EA5ACF5DCAC402D34B28723F5EE355C949B398ACA2B414D2
0A6B013FC67CE45359A560CD169FE1115E20A6F4A2792E8C4FA3B4C1406BC691
913CF7E7EC92913169183A754DD88BC0AE0DED3A2C8F0C68F0071F2A7EE19D1F
792B71D74E7B95F1831EE5086CDDE092C0EF55B33220A387B9FD8F26EA92B41B
1C4CC7B5E2D33C9AE870C11EE3DCF36198CEFD9BC3E56BB5D3F629619401777E
3E548C55D4A58F5A7CA7C072DD63179A1B63E40EAE3889925DD714115EF6E14F
0F5D06BA8A774F9320987EB7854AF19BD19ADC9D6BAF865263EFFCF0AD230B2C
5CCE2B7A0DD1235346FAA6BC7512BEDC142FA53BAC622481B6352F521EBCE9DB
7E48278E87B8AB226F6C93B71D94D9FFFDE7E10D38863E5AFBCCB3AA6D06D863
63623B186967574007AEA2D7C5ED8312F48D3FDC56AA8BD44FDF5758D4394F1B
4E2A29420AFBC884A5AF5A3F49B285D80A445D8569614206180C0BD9216A8E2C
C99CD1EF59B960B1CC77114DFE263AD28E97A2B52AA9DCA8CE7B77ACBE3407CE
A9C7A5F081DA60DF11536664E62D8724EC8E2509163F3315D45C15B13E9B7E1F
AD05B8F95ABF4B1AB1509A66C1BE1BD762B12DD19C82C62926E247109EE745DC
6ABEE0FFBEC36F03CDDD2978F36F70A84D42EFD66D361BB85121893996FD6260
446C6C461BE17AAA544024DA7572655C3779CC979A364B1E8BB2CF70ACE0D1F2
F6665982C069EFEEA2F0A7B03C3F6383C1364C1D3D35BEC91246CB6D612A79F8
254A09E946DD0C7D4E55E67697D0C020390FA2EC760663CA156B642587F69DBA
A57022E4D5296B15877AFE24CAE7E39D33EA8AEA3E676EB703EA0562D427621C
E69E156E8C30CDE765F656EE53357B5EE308B1446D0461FB6649E08B9B2D7157
7AAE3702A7F3C387A35F80F6583ED606F19E26E674710AC916A365E9D685B568
0F7084047F3E8418A49E8EF2170E6392F8CC674E22FE85EEFB54B0571439E5AF
3F9C52A229B6306A0934D3CA8301811AFBC09D83FC5E38844828A8B073559599
7CD2D6064CB82A4F3E1EFA1CD67E5F8C0ABDD1F1127F4099A0035908E0DDDABD
E2A536BA4F46E581CBCCD57590DD7FEBF2BDFF69719BE6F8369E06402146D77B
1BBF1C9577D04327F82ACA2606F48354712651B57ED8276434BB57383B7973E1
3BBF131CF981C57655ECCFE90D41CF98AF21520EE517F71ABB9AA3791CE905AC
DC05031ACA141CC7339DE148E87159109191BD90B2579D0FB8CC48D4D1FCC1A6
3EAE71E59702D8AF0FEC6AD221660EC913F0499A7275D8B90949425BFB6DF878
4CD6E0C65E1C5FDF398A2094550446D19C973F4B37E2EDA0750C361FD1EDCCA2
F4404FB21E0DE2772DCD102DB8CEFF9417BBD3C4A0A1C905358DE7AEA4BC3211
3564007CF6308240A56A4018F2ED882AAE0DE15528753ECC96ABE62BA9B2F729
A1DC9B7BF4C632192AC6DF2649ACB03EB8A469D51DDCFE83A4553F4DEF68D61E
55B42B6D4AED6E77ADCF539565EE5CF3E1ACE3DD011A4E230F204D86D104BB24
2314E5390A5B0F2843359BE8D01A220D7E6882F7130B7DCE82497E393E71869A
09328B351957EE8311F719794A8EBB1640F99709656D3B216277635E2F8DFEC2
9EB8D67701277763BE124399D38B9718FC6E84B628BAB288FB62671B7AF59590
4897B5471530729C19284BDA58CD825A4531C04458E6E70D089A3B4C27922378
94488CE47DA0C6CADBAB7542929752B739155430C88EA5B4F6D69C7A89974873
4AEACC5ECD0D055454DA5F0B0915E610FE6E6967470985AC22D7112A14B173D5
1552EF2F4B2AE44FC31D25089104E46406A54A33649AC97C11ECBB3C0FAD8A92
F85DE8441CD7FD47B4830BBDD1ED38B650A517D3FCAC9F2FBF88F9A4D9BF6A04
4146D0D525DD76CED6AAD9477CE027C67965DC1579EA3E9ACDA4F9F65CE67AEF
2119F08AC4465B0932C6B216FE7BEA936FD03D9480AC7B55836B7D158D87673A
CCFC656DF38CDE2BA8E7FCB8F5833A706CFC6F5F519411FD8EEDB595BADAB471
5357213D7CD1D6258B90677BD7130307372665BA3EE8BFE80EE26E3A1A64D6DC
E1F8CCE5F726406C2A4C2F4A5D071153022DB29F59A58601C15845FFB53AA168
D3F6B93E9D5592910891EAFFAD510E6AF629FC6FF130378CF36519999AF74D61
4B444EDFD019AA8B242112BD1E0B933570F5F94878C7AF8953AA2E3A5E8B4177
9925D0B25AC1BF14B6584EB442D86FD29922B933E0D0E2C05D888ABDE145E253
B473F06192C3E5327FA37335245EA5FE365D824133192B1FB604644B89E8E205
18A93AA45E877CC8CE0491FE1392536C1A64655AB9C6380554308D0F08970EBC
5AE4ABD73AB4946E2A376A9522193BB371F359DB683186287C459EA5735C5ECC
F621604FED345246E4FBCAF04781498D618C28D86DC12E69FFD8AD5402538AED
C8728E9DE32E4C01FCEF9678E8797157D57B8DC48C9CBA6D2215B3B4BE7C05E0
DC90FFAE756AED9AB3EBF6E56EBB3CEF7211B52231EE671205E0F604875603F1
3460689B583A3DD31EB8646D9FF44ADA71DF1004770110A36584F50CC8FC87BD
1FA7B4776D02EA956397924579036F4A4F77CF9E5CDA19B6BB90C5FEC61F0D37
4D8FA91790862238F3E77A106B186FE39ED3BA831F97393FD4A0FAFD1D16490C
883E6D913B955DDF2E413955
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 27690494 40090613 1000 600 600 (100hari.dvi)
@start /Fa 240[45 15[{}1 90.9091 /CMSY10 rf /Fb 134[44
1[60 1[49 30 37 38 2[46 51 2[42 28 28 46 42 1[42 2[42
46 9[91 2[65 51 2[62 2[82 57 2[35 68 70 2[69 2[68 12[46
3[46 1[28 46[{}30 90.9091 /CMTI10 rf /Fc 138[56 40 1[37
2[55 56 86 25 53 29 25 3[51 1[49 56 52 7[73 3[76 73 61
70 1[70 79 79 97 58 76 1[33 79 73 1[64 79 70 73 73 65[{}33
99.6264 /CMSSBX10 rf /Fd 170[91 88 73 84 1[84 95 95 117
1[91 1[40 3[77 95 1[88 88 65[{}14 119.552 /CMSSBX10 rf
/Fe 134[48 1[66 1[51 35 36 36 1[51 45 51 76 25 48 28
25 51 45 28 40 51 40 51 45 7[68 1[93 1[68 66 51 67 1[62
71 68 83 57 71 47 33 68 71 1[62 69 1[64 68 1[43 4[25
45 45 45 45 45 45 45 1[45 45 45 25 30 25 2[35 35 5[45
25 33[{}61 90.9091 /CMR10 rf /Ff 134[67 1[100 1[67 47
53 47 2[67 67 1[40 67 1[40 67 60 1[53 67 2[67 7[73 1[120
3[67 2[80 2[113 1[87 8[80 66[{TeXBase1Encoding ReEncodeFont}23
119.998 /Palatino-BoldItalic rf /Fg 134[100 1[150 1[100
70 1[70 2[100 100 2[100 1[60 100 3[100 1[97 100 9[180
2[110 6[170 2[70 70 1[140 2[140 2[130 7[90 6[90 90 90
57 47[{TeXBase1Encoding ReEncodeFont}26 180.002 /Palatino-BoldItalic
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
userdict/PStoPSxform PStoPSmatrix matrix currentmatrix
 matrix invertmatrix matrix concatmatrix
 matrix invertmatrix put
%%EndSetup
%%Page: (0,1) 1
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 5.017442 translate
90 rotate
0.976292 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 420.944882 0 rlineto 0 609.448819 rlineto -420.944882 0 rlineto
 closepath}put initclip
/PStoPSenablepage false def
PStoPSxform concat
showpage
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 426.017442 translate
90 rotate
0.976292 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 420.944882 0 rlineto 0 609.448819 rlineto -420.944882 0 rlineto
 closepath}put initclip
PStoPSxform concat
TeXDict begin 1 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref package)/Author ()/Keywords () /DOCINFO pdfmark
end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -18 -446
a
SDict begin H.S end
 -18 -446 a 0 TeXcolorgray Black -18 -446 a
SDict begin H.R end
 -18 -446
a -18 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -18 -446 a 0 TeXcolorgray Black 0 TeXcolorgray
-9 -128 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -9 -128 a -9 -128 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -9 -128 a -9 -128 a
SDict begin H.S end
 -9
-128 a -9 -128 a
SDict begin 13.6 H.A end
 -9 -128 a -9 -128 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -9 -128 a 123 355
a Fg(Ibadat/Doa)45 b(Arwah)g(100)g(hari)g(untuk)461 632
y(Ibu)f(MG)h(Ari)g(T)-17 b(ri)46 b(W)-5 b(uryanti)1055
2857 y(9)45 b(Juni)h(2010)774 3139 y Ff(W)l(ilayah)29
b(Y)-13 b(ohanes)29 b(de)h(Britto)1102 3319 y(Stasi)g(Maguwo)668
3499 y(Par)n(oki)e(Mar)n(ganingsih)h(Kalasan)p 0 TeXcolorgray
0 TeXcolorgray eop end
PStoPSsaved restore
%%Page: (2,3) 2
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 5.017442 translate
90 rotate
0.976292 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 420.944882 0 rlineto 0 609.448819 rlineto -420.944882 0 rlineto
 closepath}put initclip
/PStoPSenablepage false def
PStoPSxform concat
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -136
-446 a
SDict begin H.S end
 -136 -446 a 0 TeXcolorgray 0 TeXcolorgray -136
-446 a
SDict begin H.R end
 -136 -446 a -136 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 -136 -446 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 426.017442 translate
90 rotate
0.976292 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 420.944882 0 rlineto 0 609.448819 rlineto -420.944882 0 rlineto
 closepath}put initclip
PStoPSxform concat
TeXDict begin 11 10 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -18
-446 a
SDict begin H.S end
 -18 -446 a 0 TeXcolorgray 0 TeXcolorgray -18 -446
a
SDict begin H.R end
 -18 -446 a -18 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.11) cvn /DEST pdfmark end
 -18 -446 a 0 TeXcolorgray 2345
-331 a Fe(11)p -9 -294 2445 4 v 0 TeXcolorgray 0 TeXcolorgray
-9 -36 a Fc(LA)m(GU)36 b(PENUTUP)p 0 TeXcolorgray -9
22 a
SDict begin H.S end
 -9 22 a -9 22 a
SDict begin 13.6 H.A end
 -9 22 a -9 22 a
SDict begin [/View [/XYZ H.V]/Dest (section*.19) cvn /DEST pdfmark
end
 -9 22 a 0 TeXcolorgray
-9 4153 2445 5 v 1208 4266 a Fb(Lingkungan)d(St)g(Petrus)f(Maguwo)p
0 TeXcolorgray eop end
PStoPSsaved restore
%%Page: (4,5) 3
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 5.017442 translate
90 rotate
0.976292 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 420.944882 0 rlineto 0 609.448819 rlineto -420.944882 0 rlineto
 closepath}put initclip
/PStoPSenablepage false def
PStoPSxform concat
TeXDict begin 10 9 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -136
-446 a
SDict begin H.S end
 -136 -446 a 0 TeXcolorgray 0 TeXcolorgray -136
-446 a
SDict begin H.R end
 -136 -446 a -136 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.10) cvn /DEST pdfmark end
 -136 -446 a 0 TeXcolorgray
-128 -331 a Fe(10)p -128 -294 2445 4 v 0 TeXcolorgray
-128 -36 a(Y)-8 b(a)33 b(Bapa)g(terimah)f(arw)m(ah)g(Ibu)f(MG)h(Ari)g
(T)-8 b(ri)32 b(W)-8 b(ury)m(an)m(ti)33 b(dalam)f(k)m(e-)-128
77 y(m)m(uliaan)f(k)m(era)5 b(jaan-Mu.)p 0 TeXcolorgray
-128 432 a Fd(RITUS)44 b(PENUTUP)p 0 TeXcolorgray -128
526 a
SDict begin H.S end
 -128 526 a -128 526 a
SDict begin 13.6 H.A end
 -128 526 a -128 526 a
SDict begin [/View [/XYZ H.V]/Dest (section*.16) cvn /DEST pdfmark
end
 -128
526 a 0 TeXcolorgray 164 x Fc(DO)m(A)37 b(PENUTUP)p 0
TeXcolorgray -128 753 a
SDict begin H.S end
 -128 753 a -128 753 a
SDict begin 13.6 H.A end
 -128 753
a -128 753 a
SDict begin [/View [/XYZ H.V]/Dest (section*.17) cvn /DEST pdfmark
end
 -128 753 a 0 TeXcolorgray -33 913 a Fe(P:)p
0 TeXcolorgray 46 w(Marilah)31 b(b)s(erdoa)f(:)100 1073
y(Allah)45 b(Bapa)h(k)-5 b(ami)45 b(y)m(ang)h(mahap)s(engasih)e(dan)g
(p)s(en)m(y)m(a)m(y)m(ang,)100 1186 y(semoga)c(k)m(ebangkitan)g
(putraMu)e(juga)h(menjadi)g(k)m(ebangkit-)100 1299 y(an)44
b(saudara)h(k)-5 b(ami)45 b(Ibu)f(MG)h(Ari)g(T)-8 b(ri)45
b(W)-8 b(ury)m(an)m(ti)46 b(Bapa)g(se-)100 1412 y(moga)37
b(Engk)-5 b(au)35 b(senan)m(tiasa)j(mem)m(bangkitk)-5
b(an)36 b(semangat)i(k)-5 b(a-)100 1525 y(mi)34 b(un)m(tuk)f(terus)h
(menerus)f(hidup)f(seturut)h(nasihat)i(InjilMu.)100 1638
y(Bapa,)44 b(semoga)e(doa-doa)g(y)m(ang)f(k)-5 b(ami)41
b(panjatk)-5 b(an)40 b(k)m(ehadira-)100 1751 y(tMu)35
b(mampu)e(mengan)m(tar)j(saudara-saudari)e(k)-5 b(ami)35
b(y)m(ang)h(su-)100 1864 y(dah)26 b(meninggal)h(un)m(tuk)f(memasuki)g
(k)m(era)5 b(jaanMu)28 b(y)m(ang)f(abadi)100 1976 y(di)j(surga.)p
0 TeXcolorgray -39 2166 a(U:)p 0 TeXcolorgray 46 w(Amin)p
0 TeXcolorgray -128 2478 a Fc(BERKA)-9 b(T)p 0 TeXcolorgray
-128 2541 a
SDict begin H.S end
 -128 2541 a -128 2541 a
SDict begin 13.6 H.A end
 -128 2541 a -128
2541 a
SDict begin [/View [/XYZ H.V]/Dest (section*.18) cvn /DEST pdfmark
end
 -128 2541 a 0 TeXcolorgray -33 2702 a Fe(P:)p
0 TeXcolorgray 46 w(T)h(uhan)29 b(b)s(eserta)h(kita)p
0 TeXcolorgray -39 2891 a(U:)p 0 TeXcolorgray 46 w(Sek)-5
b(arang)30 b(dan)g(selama-laman)m(y)m(a)p 0 TeXcolorgray
-33 3081 a(P:)p 0 TeXcolorgray 46 w(Semoga)k(kita)g(sem)m(ua,)g(k)m
(eluarga)g(kita)g(dan)f(k)-5 b(ary)m(a)34 b(kita)g(selalu)100
3194 y(di)25 b(bim)m(bing)g(dan)g(dib)s(erk)-5 b(ati)25
b(oleh)h(Bapa)g(dan)f(Putera)h(dan)e(Roh)100 3307 y(Kudus.)p
0 TeXcolorgray -39 3496 a(U:)p 0 TeXcolorgray 46 w(Amin)p
0 TeXcolorgray -33 3686 a(P:)p 0 TeXcolorgray 46 w(Saudara)33
b(sek)-5 b(alian)35 b(ibadat)g(kita)g(sudah)e(selesai)i(marilah)f(kita)
100 3799 y(m)m(undur)28 b(dalam)j(damai)f(T)-8 b(uhan)p
0 TeXcolorgray -39 3989 a(U:)p 0 TeXcolorgray 46 w(Syukur)28
b(k)m(epada)j(Allah.)p 0 TeXcolorgray -128 4153 2445
5 v -128 4266 a Fb(Do)-5 b(a)34 b(40)f(hari)h(Ibu)e(MG)h(A)n(ri)f(T)-7
b(ri)32 b(Wuryanti)p 0 TeXcolorgray eop end
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 426.017442 translate
90 rotate
0.976292 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 420.944882 0 rlineto 0 609.448819 rlineto -420.944882 0 rlineto
 closepath}put initclip
PStoPSxform concat
TeXDict begin 3 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -18
-446 a
SDict begin H.S end
 -18 -446 a 0 TeXcolorgray 0 TeXcolorgray -18 -446
a
SDict begin H.R end
 -18 -446 a -18 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -18 -446 a 0 TeXcolorgray 2390
-331 a Fe(3)p -9 -294 2445 4 v 0 TeXcolorgray 0 TeXcolorgray
-9 -36 a Fd(RITUS)43 b(PEMBUKA)p 0 TeXcolorgray -9 54
a
SDict begin H.S end
 -9 54 a -9 54 a
SDict begin 13.6 H.A end
 -9 54 a -9 54 a
SDict begin [/View [/XYZ H.V]/Dest (section*.1) cvn /DEST pdfmark end
 -9 54 a 0 TeXcolorgray
164 x Fc(LA)m(GU)36 b(PEMBUKA)p 0 TeXcolorgray -9 277
a
SDict begin H.S end
 -9 277 a -9 277 a
SDict begin 13.6 H.A end
 -9 277 a -9 277 a
SDict begin [/View [/XYZ H.V]/Dest (section*.2) cvn /DEST pdfmark end
 -9 277 a 0 TeXcolorgray
163 x Fc(SALAM)g(PEMBUKAAN)p 0 TeXcolorgray -9 499 a
SDict begin H.S end

-9 499 a -9 499 a
SDict begin 13.6 H.A end
 -9 499 a -9 499 a
SDict begin [/View [/XYZ H.V]/Dest (section*.3) cvn /DEST pdfmark end
 -9 499 a 0 TeXcolorgray
85 660 a Fe(P:)p 0 TeXcolorgray 46 w(A)m(tas)31 b(nama)g(Bapa)g(Putera)
g(dan)e(Roh)h(Kudus)p 0 TeXcolorgray 79 845 a(U:)p 0
TeXcolorgray 46 w(Amin)p 0 TeXcolorgray 85 1031 a(P:)p
0 TeXcolorgray 46 w(Semoga)c(damai)f(sejah)m(tera)i(T)-8
b(uhan)24 b(kita)i(Y)-8 b(esus)25 b(Kristus,)h(cin)m(ta)218
1143 y(k)-5 b(asih)42 b(Allah)g(Bapa)h(dan)e(p)s(ersekutuan)g(Roh)h
(Kudus,)h(selalu)218 1256 y(b)s(eserta)30 b(kita.)p 0
TeXcolorgray 79 1442 a(U:)p 0 TeXcolorgray 46 w(Sek)-5
b(arang)30 b(dan)g(selama-laman)m(y)m(a)p 0 TeXcolorgray
-9 1735 a Fc(PENGANT)-9 b(AR)p 0 TeXcolorgray -9 1794
a
SDict begin H.S end
 -9 1794 a -9 1794 a
SDict begin 13.6 H.A end
 -9 1794 a -9 1794 a
SDict begin [/View [/XYZ H.V]/Dest (section*.4) cvn /DEST pdfmark end
 -9 1794 a 0
TeXcolorgray 85 1954 a Fe(P:)p 0 TeXcolorgray 46 w(Bapak)22
b(Ibu)d(Saudara)i(Saudari)f(Anak-anak)i(y)m(ang)g(terk)-5
b(asih)21 b(da-)218 2067 y(lam)33 b(Kristus,)h(100)g(hari)f(y)m(ang)h
(lalu)g(k)m(eluarga)h(ini)e(mengalami)218 2180 y(duk)-5
b(a)38 b(y)m(ang)i(mendalam.)66 b(Kalau)39 b(ditan)m(y)m(a)i(mengapa)e
(b)s(erdu-)218 2293 y(k)-5 b(a?)54 b(Ja)m(w)m(aban)m(y)m(a)36
b(adalah)g(k)-5 b(arena)35 b(pada)f(w)m(aktu)h(itu)g(Ibu)f(MG)218
2406 y(Ari)f(T)-8 b(ri)34 b(W)-8 b(ury)m(an)m(ti)34 b(telah)h
(dipanggil)f(T)-8 b(uhan.)49 b(Mungkin)32 b(kita)218
2518 y(bisa)i(ikut)g(merasak)-5 b(an)35 b(p)s(erasaan)e(/)i(suasana)f
(hati)h(dari)f(k)m(elu-)218 2631 y(araga)j(y)m(ang)h(ditinggalk)-5
b(an)37 b(pada)f(w)m(aktu)h(itu.)58 b(Sebagai)38 b(ung-)218
2744 y(k)-5 b(apan)30 b(cin)m(ta)i(k)m(eluarga)g(ini)f(terhadap)f
(almarh)m(umah)g(Ibu)g(MG)218 2857 y(Ari)k(T)-8 b(ri)33
b(W)-8 b(ury)m(an)m(ti)35 b(kita)g(sem)m(ua)f(diundang)f(un)m(tuk)g(b)s
(ersama-)218 2970 y(sama)23 b(mendukung)d(dengan)i(doa-doa)h(supa)m(y)m
(a)g(arw)m(ah)g(dari)f(Ibu)218 3083 y(MG)37 b(Ari)g(T)-8
b(ri)37 b(W)-8 b(ury)m(an)m(ti)38 b(segera)g(dapat)f(ikut)g(bangkit)g
(m)m(ulia)218 3196 y(b)s(ersama)30 b(Kristus)f(di)h(dalam)h(k)m(era)5
b(jaan)31 b(surga.)-9 3381 y Fb(Hening)g(sejenak)i(.)14
b(.)g(.)p 0 TeXcolorgray -9 3674 a Fc(PERNY)-9 b(A)g(T)g(AAN)36
b(TOBA)-9 b(T)p 0 TeXcolorgray -9 3733 a
SDict begin H.S end
 -9 3733 a -9
3733 a
SDict begin 13.6 H.A end
 -9 3733 a -9 3733 a
SDict begin [/View [/XYZ H.V]/Dest (section*.5) cvn /DEST pdfmark end
 -9 3733 a 0 TeXcolorgray 85
3893 a Fe(P:)p 0 TeXcolorgray 46 w(Saudara-saudari)24
b(y)m(ang)i(seiman)g(dalam)f(Kristus,)h(marilah)f(ki-)218
4006 y(ta)33 b(mem)m(buat)f(diri)g(pan)m(tas)g(b)s(erada)g(di)g(depan)f
(hadirat)i(Allah,)p 0 TeXcolorgray -9 4153 2445 5 v 1208
4266 a Fb(Lingkungan)g(St)g(Petrus)f(Maguwo)p 0 TeXcolorgray
eop end
PStoPSsaved restore
%%Page: (6,7) 4
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 5.017442 translate
90 rotate
0.976292 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 420.944882 0 rlineto 0 609.448819 rlineto -420.944882 0 rlineto
 closepath}put initclip
/PStoPSenablepage false def
PStoPSxform concat
TeXDict begin 4 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -136
-446 a
SDict begin H.S end
 -136 -446 a 0 TeXcolorgray 0 TeXcolorgray -136
-446 a
SDict begin H.R end
 -136 -446 a -136 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 -136 -446 a 0 TeXcolorgray
-128 -331 a Fe(4)p -128 -294 2445 4 v 0 TeXcolorgray
100 -36 a(dengan)30 b(mem)m(b)s(ersihk)-5 b(an)29 b(diri)g(kita)i(dari)
f(dosa)g(dan)g(k)m(esalahan)100 77 y(y)m(ang)39 b(lalu,)i(dengan)d(b)s
(ertobat)h(dan)e(mohon)h(ampun)g(k)m(epada)100 190 y(Allah)31
b(kita.)p 0 TeXcolorgray -33 380 a(P:)p 0 TeXcolorgray
46 w(Selama)49 b(kusem)m(bun)m(yik)-5 b(an)47 b(dosaku,)53
b(batinku)48 b(tertek)-5 b(an)50 b(dan)100 493 y(aku)30
b(mengeluh)g(sepanjang)g(hari)p 0 TeXcolorgray -39 683
a(U:)p 0 TeXcolorgray 46 w(Berbahagialah)i(orang,)f(bila)g(dosan)m(y)m
(a)g(diampuni)p 0 TeXcolorgray -33 873 a(P:)p 0 TeXcolorgray
46 w(Aku)c(mengakui)i(dosaku)e(di)h(hadapanMu,)g(T)-8
b(uhan,)27 b(dan)h(k)m(esa-)100 986 y(lahanku)i(tidak)h(kusem)m(bun)m
(yik)-5 b(an)p 0 TeXcolorgray -39 1176 a(U:)p 0 TeXcolorgray
46 w(Berbahagialah)32 b(orang,)f(bila)g(dosan)m(y)m(a)g(diampuni)p
0 TeXcolorgray -33 1366 a(P:)p 0 TeXcolorgray 46 w(Nasib)j(orang)g(b)s
(erdosa)e(sengsara)j(b)s(elak)-5 b(a)34 b(tetapi)g(orang)g(y)m(ang)100
1479 y(p)s(erca)m(y)m(a)d(k)m(epada)g(T)-8 b(uhan)30
b(dilimpahi)g(k)-5 b(asih)30 b(setia)p 0 TeXcolorgray
-39 1669 a(U:)p 0 TeXcolorgray 46 w(Berbahagialah)i(orang,)f(bila)g
(dosan)m(y)m(a)g(diampuni)p 0 TeXcolorgray -33 1859 a(P:)p
0 TeXcolorgray 46 w(Semoga)c(Allah)g(y)m(ang)g(mahakuasa)g(mengasihani)
g(kita,)h(meng-)100 1972 y(ampuni)37 b(dosa)j(kita)f(dan)g(mengan)m
(tar)g(kita)h(k)m(e)g(dalam)f(hidup)100 2084 y(y)m(ang)31
b(k)m(ek)-5 b(al.)p 0 TeXcolorgray -39 2275 a(U:)p 0
TeXcolorgray 46 w(Amin)p 0 TeXcolorgray -128 2589 a Fc(Doa)37
b(P)m(embuk)m(a)p 0 TeXcolorgray -128 2652 a
SDict begin H.S end
 -128 2652
a -128 2652 a
SDict begin 13.6 H.A end
 -128 2652 a -128 2652 a
SDict begin [/View [/XYZ H.V]/Dest (section*.6) cvn /DEST pdfmark end
 -128 2652 a 0 TeXcolorgray
-33 2812 a Fe(P:)p 0 TeXcolorgray 46 w(Marilah)31 b(Berdoa)100
2972 y(Allah)k(Bapa)g(y)m(ang)g(maham)m(urah,)g(Engk)-5
b(au)34 b(telah)h(men)m(y)m(erah-)100 3085 y(k)-5 b(an)29
b(Y)-8 b(esus,)30 b(Putra-Mu)f(k)m(epada)i(k)m(ematian,)g(sem)m(ua)f
(ini)f(harus)100 3198 y(terjadi)37 b(un)m(tuk)g(melepask)-5
b(an)38 b(k)-5 b(ami)37 b(dari)h(segala)h(kuasa)e(k)m(ege-)100
3311 y(lapan)e(dan)f(dosa.)56 b(Y)-8 b(a)36 b(Bapa,)h(an)m(ugerahk)-5
b(anlah)36 b(hidup)d(k)m(ek)-5 b(al)100 3424 y(k)m(epada)32
b(saudara-saudari)e(Ibu)g(MG)i(Ari)f(T)-8 b(ri)31 b(W)-8
b(ury)m(an)m(ti)32 b(y)m(ang)100 3537 y(telah)40 b(menghadap)e(k)m
(ehadiratMu)i(100)g(hari)f(y)m(ang)h(lalu.)67 b(Y)-8
b(a)100 3650 y(Bapa,)30 b(ampunilah)f(segala)i(dosa)e(dan)g(k)m
(esalahann)m(y)m(a)i(dan)e(bu-)100 3763 y(k)-5 b(alah)32
b(pin)m(tu)e(k)m(ehidupan)h(k)m(ek)-5 b(al)32 b(bagin)m(y)m(a.)45
b(T)-8 b(erimalah)32 b(sauda-)100 3876 y(ra)c(k)-5 b(ami)28
b(tercin)m(ta)i(ini)e(k)m(edalam)h(k)m(eluarga)h(kudusMu)c(di)i(tah)m
(ta)100 3989 y(surga)m(wi.)p 0 TeXcolorgray -128 4153
2445 5 v -128 4266 a Fb(Do)-5 b(a)34 b(40)f(hari)h(Ibu)e(MG)h(A)n(ri)f
(T)-7 b(ri)32 b(Wuryanti)p 0 TeXcolorgray eop end
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 426.017442 translate
90 rotate
0.976292 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 420.944882 0 rlineto 0 609.448819 rlineto -420.944882 0 rlineto
 closepath}put initclip
PStoPSxform concat
TeXDict begin 9 8 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -18
-446 a
SDict begin H.S end
 -18 -446 a 0 TeXcolorgray 0 TeXcolorgray -18 -446
a
SDict begin H.R end
 -18 -446 a -18 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.9) cvn /DEST pdfmark end
 -18 -446 a 0 TeXcolorgray 2390
-331 a Fe(9)p -9 -294 2445 4 v 0 TeXcolorgray 218 -36
a(Engk)-5 b(au)41 b(mengetah)m(ui)h(k)m(einginan)g(k)m(einginan)g(dan)e
(k)m(esulitan)218 77 y(k)-5 b(ami.)40 b(Kami)26 b(p)s(erca)m(y)m(a)i
(ak)-5 b(an)27 b(p)s(en)m(y)m(elenggaraan-Mu)h(dan)e(b)s(er-)218
190 y(sama)21 b(Roh)f(Kudus,)h(k)-5 b(ami)21 b(senan)m(tiasa)h(b)s(ela)
5 b(jar)21 b(utuk)f(memaha-)218 302 y(mi)30 b(apa)g(y)m(ang)g(seb)s
(enarn)m(y)m(a)g(Engk)-5 b(au)29 b(k)m(ehendaki)i(atas)f(diri)g(k)-5
b(a-)218 415 y(mi)28 b(.)40 b(Kami)29 b(men)m(y)m(ampaik)-5
b(an)29 b(doa-doa)g(k)-5 b(ami)29 b(ini)f(dengan)g(p)s(er-)218
528 y(an)m(taraan)39 b(Putera-Mu)g(terk)-5 b(asih,)41
b(T)-8 b(uhan)37 b(k)-5 b(ami)38 b(Y)-8 b(esus)39 b(Kris-)218
641 y(tus,)30 b(y)m(ang)h(hidup)d(dan)i(b)s(erkuasa)f(kini)h(dan)g
(sepanjang)g(masa.)218 754 y(Amin)p 0 TeXcolorgray -9
1045 a Fc(DO)m(A)36 b(BAP)-9 b(A)37 b(KAMI)p 0 TeXcolorgray
-9 1104 a
SDict begin H.S end
 -9 1104 a -9 1104 a
SDict begin 13.6 H.A end
 -9 1104 a -9 1104 a
SDict begin [/View [/XYZ H.V]/Dest (section*.14) cvn /DEST pdfmark
end
 -9
1104 a 160 x Fe(Marilah)42 b(kita)g(satuk)-5 b(an)42
b(doa-doa)g(p)s(ermohonan)e(kita)j(dengan)e(doa)-9 1377
y(y)m(ang)i(dia)5 b(jark)-5 b(an)43 b(Y)-8 b(esus)43
b(sendiri)f(Bapa)i(k)-5 b(ami)43 b(y)m(ang)h(ada)f(di)g(surga)-9
1490 y(.)15 b(.)g(.)h(.\()31 b(didoak)-5 b(an)30 b(b)s(ersama)g(sama)h
(\))p 0 TeXcolorgray -9 1781 a Fc(ROSARIO)p 0 TeXcolorgray
-9 1840 a
SDict begin H.S end
 -9 1840 a -9 1840 a
SDict begin 13.6 H.A end
 -9 1840 a -9 1840 a
SDict begin [/View [/XYZ H.V]/Dest (section*.15) cvn /DEST pdfmark
end
 -9
1840 a 160 x Fe(Bapak)h(Ibu)e(Saudara)h(Saudari,)g(Ibu)f(Maria)i(telah)
g(mem)m(b)s(erik)-5 b(an)31 b(te-)-9 2113 y(ladan)j(bagi)h(kita.)53
b(Ia)35 b(telah)g(setia)g(mendampingi)f(Puteran)m(y)m(a)h(T)-8
b(uh-)-9 2226 y(an)28 b(Y)-8 b(esus)29 b(Kristus)f(sampai)h(w)m(afatn)m
(y)m(a)i(di)d(k)-5 b(a)m(yu)29 b(salib.)41 b(Marilah)29
b(kita)-9 2339 y(mohon)23 b(lew)m(at)j(p)s(eran)m(taraan)e(Bunda)f
(Maria)i(supa)m(y)m(a)g(arw)m(ah)f(Ibu)f(MG)-9 2452 y(Ari)32
b(T)-8 b(ri)31 b(W)-8 b(ury)m(an)m(ti)34 b(lancar)f(dalam)f(menghadap)f
(Bapa)i(dengan)f(doa)-9 2565 y(Rosario.)-9 2725 y(Aku)e(p)s(erca)m(y)m
(a)-9 2885 y(Bapa)h(k)-5 b(ami)30 b(.)16 b(.)f(.)-9 3045
y(Kem)m(uliaan)31 b(k)m(epada)g(Bapa)g(.)15 b(.)h(.)-9
3206 y(T)-8 b(erpujilah)29 b(.)16 b(.)f(.)-9 3366 y(Salam)30
b(Putri)g(Allah)h(Bapa.)42 b(Salam)30 b(Maria)i(.)15
b(.)h(.)-9 3526 y(Salam)30 b(Bunda)g(Allah)h(Putera.)41
b(Salam)30 b(Maria)i(.)15 b(.)h(.)-9 3686 y(Salam)30
b(Memp)s(elai)h(Allah)g(Roh)g(Kudus.)38 b(Salam)31 b(Maria)g(.)16
b(.)f(.)-9 3846 y(Kem)m(uliaan)31 b(.)15 b(.)g(.)-9 4006
y(T)-8 b(erpujilah)29 b(.)16 b(.)f(.)p 0 TeXcolorgray
-9 4153 2445 5 v 1208 4266 a Fb(Lingkungan)33 b(St)g(Petrus)f(Maguwo)p
0 TeXcolorgray eop end
PStoPSsaved restore
%%Page: (8,9) 5
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 5.017442 translate
90 rotate
0.976292 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 420.944882 0 rlineto 0 609.448819 rlineto -420.944882 0 rlineto
 closepath}put initclip
/PStoPSenablepage false def
PStoPSxform concat
TeXDict begin 8 7 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -136
-446 a
SDict begin H.S end
 -136 -446 a 0 TeXcolorgray 0 TeXcolorgray -136
-446 a
SDict begin H.R end
 -136 -446 a -136 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.8) cvn /DEST pdfmark end
 -136 -446 a 0 TeXcolorgray
-128 -331 a Fe(8)p -128 -294 2445 4 v 0 TeXcolorgray
0 TeXcolorgray -39 -36 a(U:)p 0 TeXcolorgray 46 w(Kabulk)-5
b(anlah)30 b(doa)g(k)-5 b(ami)31 b(y)m(a)g(T)-8 b(uhan)p
0 TeXcolorgray -33 141 a(P:)p 0 TeXcolorgray 46 w(Y)g(a)29
b(Allah,)g(k)-5 b(ami)28 b(mohon)g(k)m(em)m(urahaanm)m(u)g(bagi)h(Ibu)e
(MG)h(Ari)100 254 y(T)-8 b(ri)20 b(W)-8 b(ury)m(an)m(ti)22
b(,)g(janganlah)f(k)-5 b(au)20 b(ingat-ingat)i(lagi)g(dosa-dosan)m(y)m
(a,)100 367 y(tetapi)31 b(limpahk)-5 b(anlah)29 b(k)m(erahiman-Mu)h(k)m
(epadan)m(y)m(a.)42 b(Semoga)100 480 y(Ia)i(disam)m(but)g(dan)g(dip)s
(ersatuk)-5 b(an)43 b(b)s(ersama)h(para)g(malaik)-5 b(at)100
593 y(dan)29 b(orang)i(kudus)e(di)h(surga.)100 753 y(Kami)g(mohon)p
0 TeXcolorgray -39 930 a(U:)p 0 TeXcolorgray 46 w(Kabulk)-5
b(anlah)30 b(doa)g(k)-5 b(ami)31 b(y)m(a)g(T)-8 b(uhan)p
0 TeXcolorgray -33 1107 a(P:)p 0 TeXcolorgray 46 w(Bagi)29
b(k)m(eluarga)g(y)m(ang)f(ditinggalk)-5 b(an,)29 b(y)m(a)g(Bapa)f
(tolonglah)h(me-)100 1220 y(rek)-5 b(a)36 b(sem)m(ua)g(supa)m(y)m(a)g
(saling)g(mendukung)e(,)j(saling)g(mem)m(b)s(eri)100
1333 y(k)m(ekuatan)28 b(dan)e(p)s(enghiburan.)38 b(Semoga)28
b(k)m(enangan)f(ak)-5 b(an)28 b(ma-)100 1446 y(sa)33
b(hidup)e(Ibu)h(MG)h(Ari)g(T)-8 b(ri)33 b(W)-8 b(ury)m(an)m(ti)34
b(ak)-5 b(an)33 b(tersimpan)g(da-)100 1559 y(lam)26 b(hati)g(merek)-5
b(a,)27 b(dan)e(meneguhhk)-5 b(an)24 b(k)m(ep)s(erca)m(y)m(aan)k(merek)
-5 b(a)100 1672 y(ak)g(an)30 b(bim)m(bingan-Mu)100 1832
y(Kami)g(mohon)p 0 TeXcolorgray -39 2009 a(U:)p 0 TeXcolorgray
46 w(Kabulk)-5 b(anlah)30 b(Doa)h(k)-5 b(ami)31 b(y)m(a)g(T)-8
b(uhan)p 0 TeXcolorgray -33 2187 a(P:)p 0 TeXcolorgray
46 w(Y)g(a)27 b(Bapa)g(Keluarga)g(ini)f(telah)h(men)m(y)m(erahk)-5
b(an)26 b(seluruh)f(hidup-)100 2299 y(n)m(y)m(a)43 b(k)m(edalam)g(p)s
(en)m(y)m(elenggaraan-Mu,)48 b(mak)-5 b(a)43 b(sudilah)e(men-)100
2412 y(dampingi)33 b(merek)-5 b(a)33 b(supa)m(y)m(a)h(sanggup)f
(menghadapi)g(liku-liku)100 2525 y(hidup)26 b(ini)j(,)f(lebih-lebih)h
(saat)g(ini)f(dik)-5 b(ala)30 b(k)m(eluarga)f(ini)g(diting-)100
2638 y(galk)-5 b(an)31 b(oleh)g(ibu)f(y)m(ang)h(merek)-5
b(a)31 b(cin)m(tai.)100 2798 y(Kami)f(mohon)p 0 TeXcolorgray
-39 2976 a(U:)p 0 TeXcolorgray 46 w(Kabulk)-5 b(anlah)30
b(doa)g(k)-5 b(ami)31 b(y)m(a)g(T)-8 b(uhan)p 0 TeXcolorgray
-33 3153 a(P:)p 0 TeXcolorgray 46 w(Bagi)37 b(kita)f(sem)m(ua)g(y)m
(ang)g(b)s(erhimpun)c(disini)j(b)s(eserta)g(k)m(eluar-)100
3266 y(gan)m(y)m(a,)30 b(y)m(a)f(Bapa)g(jadik)-5 b(anlah)28
b(k)-5 b(ami)28 b(alat-Mu)i(dalam)e(mencip-)100 3379
y(tak)-5 b(an)26 b(k)m(erukunan)f(dan)g(p)s(enghiburan)e(dan)i(p)s(em)m
(ba)m(w)m(a)i(damai.)100 3492 y(Jauhk)-5 b(anlah)29 b(k)-5
b(ami)31 b(sem)m(ua)g(dari)f(k)m(emalangan.)100 3652
y(Kami)g(mohon)p 0 TeXcolorgray -39 3829 a(U:)p 0 TeXcolorgray
46 w(Kabulk)-5 b(anlah)30 b(doa)g(k)-5 b(ami)31 b(y)m(a)g(T)-8
b(uhan)p 0 TeXcolorgray -33 4006 a(P:)p 0 TeXcolorgray
46 w(Demikianlah)48 b(y)m(a)g(Bapa,)k(doa-doa)c(y)m(ang)g(k)-5
b(ami)47 b(panjatk)-5 b(an.)p 0 TeXcolorgray -128 4153
2445 5 v -128 4266 a Fb(Do)g(a)34 b(40)f(hari)h(Ibu)e(MG)h(A)n(ri)f(T)
-7 b(ri)32 b(Wuryanti)p 0 TeXcolorgray eop end
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 426.017442 translate
90 rotate
0.976292 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 420.944882 0 rlineto 0 609.448819 rlineto -420.944882 0 rlineto
 closepath}put initclip
PStoPSxform concat
TeXDict begin 5 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -18
-446 a
SDict begin H.S end
 -18 -446 a 0 TeXcolorgray 0 TeXcolorgray -18 -446
a
SDict begin H.R end
 -18 -446 a -18 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 -18 -446 a 0 TeXcolorgray 2390
-331 a Fe(5)p -9 -294 2445 4 v 0 TeXcolorgray 0 TeXcolorgray
79 -36 a(U:)p 0 TeXcolorgray 46 w(Amin)p 0 TeXcolorgray
-9 299 a Fd(IBAD)l(A)-11 b(T)42 b(SABD)l(A)p 0 TeXcolorgray
-9 389 a
SDict begin H.S end
 -9 389 a -9 389 a
SDict begin 13.6 H.A end
 -9 389 a -9 389 a
SDict begin [/View [/XYZ H.V]/Dest (section*.7) cvn /DEST pdfmark end
 -9 389 a
0 TeXcolorgray 85 549 a Fe(P:)p 0 TeXcolorgray 46 w(Saudara-saudari)47
b(terk)-5 b(asih)47 b(marilah)h(kita)h(memp)s(ersiapk)-5
b(an)218 662 y(hati)31 b(dan)e(budi)h(un)m(tuk)f(mendengark)-5
b(an)30 b(sab)s(da)g(T)-8 b(uhan.)p 0 TeXcolorgray -9
954 a Fc(BA)m(CAAN)36 b(PERT)-9 b(AMA)p 0 TeXcolorgray
-9 1013 a
SDict begin H.S end
 -9 1013 a -9 1013 a
SDict begin 13.6 H.A end
 -9 1013 a -9 1013 a
SDict begin [/View [/XYZ H.V]/Dest (section*.8) cvn /DEST pdfmark end
 -9
1013 a 0 TeXcolorgray 85 1173 a Fe(P:)p 0 TeXcolorgray
46 w(P)m(em)m(bacaan)32 b(dari)e(Kitab)h(Kebijaksanaan)f(\(3:)42
b(1-9\))218 1333 y(T)-8 b(etapi)29 b(jiw)m(a)g(orang)g(b)s(enar)f(ada)h
(di)f(tangan)h(Allah,)h(dan)e(siksa-)218 1446 y(an)37
b(tiada)i(menimpa)e(merek)-5 b(a.)63 b(Men)m(urut)37
b(pandangan)g(orang)218 1559 y(b)s(o)s(doh)31 b(merek)-5
b(a)33 b(mati)g(nampakn)m(y)m(a,)h(dan)d(pulang)h(merek)-5
b(a)33 b(di-)218 1672 y(anggap)38 b(malap)s(etak)-5 b(a,)40
b(dan)d(k)m(ep)s(ergiann)m(y)m(a)i(dari)e(kita)h(dipan-)218
1785 y(dang)32 b(sebagai)i(k)m(ehancuran,)e(nam)m(un)g(merek)-5
b(a)32 b(b)s(erada)g(dalam)218 1898 y(k)m(eten)m(teraman.)218
2058 y(Kalaupun)f(merek)-5 b(a)32 b(disiksa)g(men)m(urut)g(pandangan)f
(man)m(usia,)218 2171 y(nam)m(un)22 b(harapan)h(merek)-5
b(a)24 b(p)s(en)m(uh)e(k)m(ebak)-5 b(aan.)40 b(Setelah)24
b(disiksa)218 2284 y(seb)s(en)m(tar)34 b(merek)-5 b(a)35
b(menerima)g(an)m(ugerah)f(y)m(ang)i(b)s(esar,)f(sebab)218
2397 y(Allah)29 b(han)m(y)m(a)g(menguji)f(merek)-5 b(a,)30
b(lalu)f(mendapati)f(merek)-5 b(a)29 b(la-)218 2510 y(y)m(ak)i(bagi)g
(diri-Ny)m(a.)218 2670 y(Laksana)21 b(emas)g(dalam)g(dapur)e(api)h(dip)
s(eriksalah)g(merek)-5 b(a)22 b(oleh-)218 2783 y(Ny)m(a,)34
b(lalu)g(diterima)f(bagaik)-5 b(an)34 b(k)m(orban)e(bak)-5
b(aran.)48 b(Mak)-5 b(a)34 b(pa-)218 2896 y(da)e(w)m(aktu)i(p)s(em)m
(balasan)e(merek)-5 b(a)34 b(ak)-5 b(an)33 b(b)s(ercaha)m(y)m(a,)h(dan)
e(lak-)218 3009 y(sana)i(bunga)g(api)g(b)s(erlari-larian)h(di)e(ladang)
i(jerami.)52 b(Merek)-5 b(a)218 3121 y(ak)g(an)23 b(mengadili)g(para)g
(bangsa)f(dan)g(memerin)m(tah)h(sek)-5 b(alian)24 b(ra-)218
3234 y(ky)m(at,)36 b(dan)d(T)-8 b(uhan)33 b(b)s(erk)m(enan)g(memerin)m
(tah)i(merek)-5 b(a)34 b(selama-)218 3347 y(laman)m(y)m(a.)218
3507 y(Orang)46 b(y)m(ang)i(telah)g(p)s(erca)m(y)m(a)g(pada)f(Allah)h
(ak)-5 b(an)47 b(memaha-)218 3620 y(mi)33 b(k)m(eb)s(enaran,)i(dan)e(y)
m(ang)h(setia)h(dalam)f(k)-5 b(asih)34 b(ak)-5 b(an)34
b(tinggal)218 3733 y(pada-Ny)m(a.)45 b(Sebab)31 b(k)-5
b(asih)32 b(setia)h(dan)e(b)s(elas)g(k)-5 b(asihan)32
b(menjadi)218 3846 y(bagian)f(orang-orang)g(pilihan-Ny)m(a.)218
4006 y(Demikianlah)g(sab)s(da)f(T)-8 b(uhan)p 0 TeXcolorgray
-9 4153 2445 5 v 1208 4266 a Fb(Lingkungan)33 b(St)g(Petrus)f(Maguwo)p
0 TeXcolorgray eop end
PStoPSsaved restore
%%Page: (10,11) 6
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 5.017442 translate
90 rotate
0.976292 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 420.944882 0 rlineto 0 609.448819 rlineto -420.944882 0 rlineto
 closepath}put initclip
/PStoPSenablepage false def
PStoPSxform concat
TeXDict begin 6 5 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -136
-446 a
SDict begin H.S end
 -136 -446 a 0 TeXcolorgray 0 TeXcolorgray -136
-446 a
SDict begin H.R end
 -136 -446 a -136 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.6) cvn /DEST pdfmark end
 -136 -446 a 0 TeXcolorgray
-128 -331 a Fe(6)p -128 -294 2445 4 v 0 TeXcolorgray
0 TeXcolorgray -39 -36 a(U:)p 0 TeXcolorgray 46 w(Syukur)28
b(k)m(epada)j(Allah)p 0 TeXcolorgray -128 397 a Fc(Anta)m(r)38
b(Bacaan)p 0 TeXcolorgray -128 485 a
SDict begin H.S end
 -128 485 a -128
485 a
SDict begin 13.6 H.A end
 -128 485 a -128 485 a
SDict begin [/View [/XYZ H.V]/Dest (section*.9) cvn /DEST pdfmark end
 -128 485 a 0 TeXcolorgray
163 x Fc(Bacaan)g(Injil)p 0 TeXcolorgray -128 755 a
SDict begin H.S end
 -128
755 a -128 755 a
SDict begin 13.6 H.A end
 -128 755 a -128 755 a
SDict begin [/View [/XYZ H.V]/Dest (section*.10) cvn /DEST pdfmark
end
 -128 755 a 0 TeXcolorgray
-33 895 a Fe(P:)p 0 TeXcolorgray 46 w(T)-8 b(uhan)29
b(sertam)m(u)p 0 TeXcolorgray -39 1111 a(U:)p 0 TeXcolorgray
46 w(Dan)h(sertam)m(u)h(juga)p 0 TeXcolorgray -33 1326
a(P:)p 0 TeXcolorgray 46 w(Inilah)f(Injil)g(Y)-8 b(esus)30
b(Kristus)g(men)m(urut)f(Luk)-5 b(as)30 b(\(7:11-17\))100
1486 y(Kem)m(udian)20 b(Y)-8 b(esus)21 b(p)s(ergi)f(k)m(e)i(suatu)e(k)m
(ota)i(y)m(ang)g(b)s(ernama)e(Nain.)100 1599 y(Murid-m)m(urid-Ny)m(a)31
b(p)s(ergi)h(b)s(ersama-sama)g(dengan)f(Dia,)j(dan)100
1712 y(juga)24 b(orang)g(ban)m(y)m(ak)h(men)m(y)m(ertai-Ny)m(a)i(b)s
(erb)s(ondong-b)s(ondong.)100 1872 y(Setelah)j(Ia)g(dek)-5
b(at)30 b(pin)m(tu)f(gerbang)h(k)m(ota,)h(ada)f(orang)g(mati)g(di-)100
1985 y(usung)f(k)m(e)j(luar,)e(anak)h(laki-laki,)i(anak)e(tunggal)h
(ibun)m(y)m(a)e(y)m(ang)100 2098 y(sudah)h(janda,)h(dan)g(ban)m(y)m(ak)
g(orang)h(dari)f(k)m(ota)i(itu)e(men)m(y)m(ertai)100
2211 y(janda)c(itu.)41 b(Dan)29 b(k)m(etik)-5 b(a)31
b(T)-8 b(uhan)28 b(melihat)i(janda)f(itu,)h(tergera-)100
2324 y(klah)23 b(hati-Ny)m(a)j(oleh)e(b)s(elas)f(k)-5
b(asihan,)25 b(lalu)f(Ia)g(b)s(erk)-5 b(ata)23 b(k)m(epada-)100
2437 y(n)m(y)m(a:)42 b("Jangan)32 b(menangis!")f(Sam)m(bil)g
(menghampiri)g(usungan)100 2550 y(itu)36 b(Ia)h(men)m(y)m(en)m(tuhn)m
(y)m(a,)i(dan)d(sedang)h(para)f(p)s(engusung)f(b)s(er-)100
2663 y(hen)m(ti,)h(Ia)g(b)s(erk)-5 b(ata:)49 b("Hai)37
b(anak)e(m)m(uda,)h(Aku)e(b)s(erk)-5 b(ata)35 b(k)m(epa-)100
2776 y(dam)m(u,)f(bangkitlah!")i(Mak)-5 b(a)35 b(bangunlah)e(orang)h
(itu)g(dan)f(du-)100 2888 y(duk)24 b(dan)g(m)m(ulai)i(b)s(erk)-5
b(ata-k)g(ata,)27 b(dan)e(Y)-8 b(esus)25 b(men)m(y)m(erahk)-5
b(ann)m(y)m(a)100 3001 y(k)m(epada)31 b(ibun)m(y)m(a.)100
3161 y(Sem)m(ua)20 b(orang)h(itu)f(k)m(etakutan)i(dan)d(merek)-5
b(a)21 b(mem)m(uliak)-5 b(an)21 b(Allah,)100 3274 y(sam)m(bil)45
b(b)s(erk)-5 b(ata:)69 b("Seorang)45 b(nabi)f(b)s(esar)g(telah)h(m)m
(uncul)f(di)100 3387 y(tengah-tengah)g(kita,")h(dan)e("Allah)h(telah)g
(mela)m(w)m(at)h(umat-)100 3500 y(Ny)m(a.")e(Mak)-5 b(a)42
b(tersiarlah)g(k)-5 b(abar)41 b(ten)m(tang)h(Y)-8 b(esus)42
b(di)f(seluruh)100 3613 y(Y)-8 b(udea)30 b(dan)g(di)g(seluruh)f(daerah)
h(sekitarn)m(y)m(a.)100 3773 y(Demikianlah)h(Injil)f(T)-8
b(uhan)p 0 TeXcolorgray -39 3989 a(U:)p 0 TeXcolorgray
46 w(T)g(erpujilah)29 b(Kristus)p 0 TeXcolorgray -128
4153 2445 5 v -128 4266 a Fb(Do)-5 b(a)34 b(40)f(hari)h(Ibu)e(MG)h(A)n
(ri)f(T)-7 b(ri)32 b(Wuryanti)p 0 TeXcolorgray eop end
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 426.017442 translate
90 rotate
0.976292 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 420.944882 0 rlineto 0 609.448819 rlineto -420.944882 0 rlineto
 closepath}put initclip
PStoPSxform concat
TeXDict begin 7 6 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -18
-446 a
SDict begin H.S end
 -18 -446 a 0 TeXcolorgray 0 TeXcolorgray -18 -446
a
SDict begin H.R end
 -18 -446 a -18 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.7) cvn /DEST pdfmark end
 -18 -446 a 0 TeXcolorgray 2390
-331 a Fe(7)p -9 -294 2445 4 v 0 TeXcolorgray 0 TeXcolorgray
-9 -36 a Fc(HOMILI)p 0 TeXcolorgray -9 32 a
SDict begin H.S end
 -9 32 a -9
32 a
SDict begin 13.6 H.A end
 -9 32 a -9 32 a
SDict begin [/View [/XYZ H.V]/Dest (section*.11) cvn /DEST pdfmark
end
 -9 32 a 160 x Fe(Gagasan)31 b(homili)p
0 TeXcolorgray 127 352 a Fa(\017)p 0 TeXcolorgray 46
w Fe(Y)-8 b(esus)28 b(tergerak)i(menolong.)40 b(Ibu)27
b(gem)m(bira)i(anakn)m(y)m(a)h(k)m(em)m(bali)218 465
y(segar)h(bugar)p 0 TeXcolorgray 127 625 a Fa(\017)p
0 TeXcolorgray 46 w Fe(Keprihatinan)26 b(Y)-8 b(esus)27
b(terus)g(b)s(erlanjut)f(sampai)h(sek)-5 b(arang)27 b(ba-)218
738 y(gi)k(y)m(ang)g(mem)m(butuhk)-5 b(an)p 0 TeXcolorgray
127 898 a Fa(\017)p 0 TeXcolorgray 46 w Fe(Kesedihan)30
b(masih)g(terasa)p 0 TeXcolorgray 127 1058 a Fa(\017)p
0 TeXcolorgray 46 w Fe(Berk)-5 b(at)34 b(w)m(afatNy)m(a)h(Y)-8
b(esus)33 b(mem)m(b)s(erik)-5 b(an)32 b(k)m(ebahagiaan)j(abadi)218
1171 y(k)m(epada)c(Ibu)e(MG)i(Ari)f(T)-8 b(ri)31 b(W)-8
b(ury)m(an)m(ti)p 0 TeXcolorgray 127 1331 a Fa(\017)p
0 TeXcolorgray 46 w Fe(Jik)j(a)21 b(orang)h(b)s(enar)d(di)i(tangan)h
(Allah,)i(siksaan)d(tiada)h(menimpa)218 1444 y(merek)-5
b(a)p 0 TeXcolorgray 127 1604 a Fa(\017)p 0 TeXcolorgray
46 w Fe(T)d(etap)27 b(setia)i(k)m(epada)e(Allah)h(b)s(erharap)d(dapat)i
(merasak)-5 b(an)28 b(b)s(e-)218 1717 y(las)j(k)-5 b(asih)30
b(Allah.)-9 1877 y(Marilah)h(kita)g(lanjutk)-5 b(an)30
b(dengan)g(doa)h(umat)p 0 TeXcolorgray -9 2257 a Fd(DO)l(A)p
0 TeXcolorgray -9 2356 a
SDict begin H.S end
 -9 2356 a -9 2356 a
SDict begin 13.6 H.A end
 -9 2356
a -9 2356 a
SDict begin [/View [/XYZ H.V]/Dest (section*.12) cvn /DEST pdfmark
end
 -9 2356 a 0 TeXcolorgray 164 x Fc(DO)m(A)36
b(UMA)-9 b(T)p 0 TeXcolorgray -9 2588 a
SDict begin H.S end
 -9 2588 a -9
2588 a
SDict begin 13.6 H.A end
 -9 2588 a -9 2588 a
SDict begin [/View [/XYZ H.V]/Dest (section*.13) cvn /DEST pdfmark
end
 -9 2588 a 0 TeXcolorgray 85
2748 a Fe(P:)p 0 TeXcolorgray 46 w(Allah)37 b(Bapa)h(k)-5
b(ami)37 b(y)m(ang)h(maha)f(k)-5 b(asih)37 b(dan)f(p)s(en)m(y)m(a)m(y)m
(ang,)41 b(k)-5 b(a-)218 2861 y(mi)22 b(menghadap)g(hadiratm)m(u)g(un)m
(tuk)g(men)m(y)m(ampaik)-5 b(an)23 b(ungk)-5 b(ap-)218
2974 y(an)38 b(hati)h(dan)f(p)s(ermohonan)f(k)-5 b(ami.)65
b(Kami)38 b(p)s(erca)m(y)m(a)i(Engk)-5 b(au)218 3087
y(ak)g(an)25 b(selalu)h(b)s(erk)m(enan)e(men)m(y)m(ertai)j(k)-5
b(ami,)26 b(mendengark)-5 b(an)25 b(k)-5 b(a-)218 3200
y(mi)32 b(dan)g(mem)m(b)s(erik)-5 b(an)33 b(y)m(ang)g(terbaik)g(bagi)g
(k)-5 b(ami.)48 b(Kami)33 b(me-)218 3313 y(m)m(uji)d(dan)g(mem)m(uliak)
-5 b(an)31 b(nama-Mu)f(melalui)i(doa-doa)f(ini:)p 0 TeXcolorgray
85 3507 a(P:)p 0 TeXcolorgray 46 w(Y)-8 b(a)37 b(T)-8
b(uhan)36 b(Y)-8 b(esus)37 b(Kristus)e(p)s(en)m(y)m(elamat)k(dunia)c(k)
-5 b(ami)37 b(mem-)218 3620 y(p)s(erca)m(y)m(ak)-5 b(an)37
b(k)m(epadam)m(u)g(arw)m(ah)f(Ibu)f(MG)i(Ari)g(T)-8 b(ri)36
b(W)-8 b(ury)m(an-)218 3733 y(ti)47 b(,)j(b)s(erk)m(enanlah)c(engk)-5
b(au)47 b(meneriman)m(y)m(a)g(dalam)g(suk)-5 b(acita)218
3846 y(k)m(era)5 b(jaan-Mu)218 4006 y(Kami)30 b(mohon)p
0 TeXcolorgray -9 4153 2445 5 v 1208 4266 a Fb(Lingkungan)j(St)g
(Petrus)f(Maguwo)p 0 TeXcolorgray eop end
PStoPSsaved restore
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
