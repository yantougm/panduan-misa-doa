%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: app-2010.dvi
%%CreationDate: Thu Feb 25 17:58:12 2010
%%Pages: 2 0
%%PageOrder: Ascend
%%DocumentFonts: CMSSBX10 CMR10 CMR12 CMMI10
%%EndComments
%%BeginProcSet: PStoPS 1 15
userdict begin
[/showpage/erasepage/copypage]{dup where{pop dup load
 type/operatortype eq{ /PStoPSenablepage cvx 1 index load 1 array astore cvx {} bind /ifelse cvx 4 array astore cvx def}{pop}ifelse}{pop}ifelse}forall /PStoPSenablepage true def
[/letter/legal/executivepage/a4/a4small/b5/com10envelope
 /monarchenvelope/c5envelope/dlenvelope/lettersmall/note
 /folio/quarto/a5]{dup where{dup wcheck{exch{}put}
 {pop{}def}ifelse}{pop}ifelse}forall
/setpagedevice {pop}bind 1 index where{dup wcheck{3 1 roll put}
 {pop def}ifelse}{def}ifelse
/PStoPSmatrix matrix currentmatrix def
/PStoPSxform matrix def/PStoPSclip{clippath}def
/defaultmatrix{PStoPSmatrix exch PStoPSxform exch concatmatrix}bind def
/initmatrix{matrix defaultmatrix setmatrix}bind def
/initclip[{matrix currentmatrix PStoPSmatrix setmatrix
 [{currentpoint}stopped{$error/newerror false put{newpath}}
 {/newpath cvx 3 1 roll/moveto cvx 4 array astore cvx}ifelse]
 {[/newpath cvx{/moveto cvx}{/lineto cvx}
 {/curveto cvx}{/closepath cvx}pathforall]cvx exch pop}
 stopped{$error/errorname get/invalidaccess eq{cleartomark
 $error/newerror false put cvx exec}{stop}ifelse}if}bind aload pop
 /initclip dup load dup type dup/operatortype eq{pop exch pop}
 {dup/arraytype eq exch/packedarraytype eq or
  {dup xcheck{exch pop aload pop}{pop cvx}ifelse}
  {pop cvx}ifelse}ifelse
 {newpath PStoPSclip clip newpath exec setmatrix} bind aload pop]cvx def
/initgraphics{initmatrix newpath initclip 1 setlinewidth
 0 setlinecap 0 setlinejoin []0 setdash 0 setgray
 10 setmiterlimit}bind def
end
%%EndProcSet
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o app-2010.ps app-2010.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2010.02.25:1757
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /DvipsToPDF { 72.27 mul Resolution div } def /PDFToDvips { 72.27 div
Resolution mul } def /HyperBorder { 1 PDFToDvips } def /H.V {pdf@hoff
pdf@voff null} def /H.B {/Rect[pdf@llx pdf@lly pdf@urx pdf@ury]} def
/H.S { currentpoint HyperBorder add /pdf@lly exch def dup DvipsToPDF
/pdf@hoff exch def HyperBorder sub /pdf@llx exch def } def /H.L { 2
sub dup /HyperBasePt exch def PDFToDvips /HyperBaseDvips exch def currentpoint
HyperBaseDvips sub /pdf@ury exch def /pdf@urx exch def } def /H.A {
H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF HyperBasePt
sub sub /pdf@voff exch def } def /H.R { currentpoint HyperBorder sub
/pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint exch
pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def } def systemdict
/pdfmark known { userdict /?pdfmark systemdict /exec get put }{ userdict
/?pdfmark systemdict /pop get put userdict /pdfmark systemdict /cleartomark
get put } ifelse
 
@fedspecial end
%%BeginFont: CMSSBX10
%!PS-AdobeFont-1.1: CMSSBX10 1.0
%%CreationDate: 1991 Aug 20 16:43:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSSBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMSSBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 65 /A put
dup 69 /E put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 80 /P put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
readonly def
/FontBBox{-71 -250 1099 780}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0931DC68A9127B5D4E0B0EC0247B
E3E94556B49E4EAF6EA99F1420405194F4D8D644F28FE1F090E80BF5C7D59585
C1AE46D025A67CD5A59ECBDE2AAF87F725A9843589338F85C6176E7F6DAB2032
74BA5CDC992D97660FDB3962D486E2682550AF11DECBCB7F76A28A4177905B2E
F4767CA41528636EA69E80B3A1D33060B9F0250896EF2431F4530727CBBBCB63
5D0CC646976759E52EB09E65B7110CA7A16EB65E0F9DBD26032DBD90A6964D18
6B8BC2030609B972DA155820C9FA67A1A26B9BC9712A9A5AF82343D16BCC542F
890ED28C0BA88F875CE90B1910D1A8FAFA6506F893CA462FDAA96E2A71ABC8A9
A209E7AEB0E41C5A3ADE180857031416EA0123B75292427B282D9C21D765A8C6
82107AF774BAEFA24DCB2DB22410CA3C540C0F9D108362C9C9C81FD259BFA359
D7289FC6963978B46CCE8744FC96D5F106A59311646E6C4C6E520AAAA9719D68
9032C53E3C38EE31A3E9995FB08207BAF83F0FCEF63A536528839428AD1E8A68
F254B65CEC6ADBDBB524D4639388374A5C74C46DF2FD1A30C7B61995ED32BFFB
7F06514E444BB108F3BE17F643D2BBFCB2947FA98789142D00B63105B09B9F24
86E3FAF44F38E9F91A405408481FAD3B8B60381AC52FE674CE23C2E2F688C244
EB64A97378970E7DEAB6FD875ABAA19DFA10D3FFB5D2AEE741A277B5147C8103
1BB179D97426EFA47587DC7D60856B369CC280AFF938EFE801F7140730187895
5E5405EB740BC38B48A7A84437916B550A65C7069CD0940D54DDFCF2EABBAF6B
ED1681F1E44855C53DEDDE611A36118430BBD52A00C12ECAA9229A2127D6C6FA
2B127412A0DA5D3D0EE76B5667EEEA968742D0B886BD023A45A4F6DD4D374E63
70429C920E33FFC2E33DE2F5DE411AC2534F546DB5C2E1CA45561C29EC748CDC
E7830D71F199AF23A7445D4BD0054681830543C0C268793050B01A02A4705C02
B10F2EA9CE466BD244114547D577B11F1D1501820F877C5DA7E343A7EA15055D
E1B508248D708573C56B334D654C129922BAFB646308A69685586258A5047F57
ED4FB74B70C1DE1E35DB263D057A4B2B1328455BDACB507C286D5AD60CA3CE9A
859FDE565240AB0F16BDED8D627CD109BCB4728C117F92EC59C6C6E22E0B7C9A
84741F5EB59BF8133F46EEBA27319305553E480DABC19A4713C294CC91711D79
565FDBC77DA50723AA02558D1F75E509EA6BBE5985DD0E06C116E642E61024B9
1683E7D4BF12A6A4CDF6A108108504869389ACAF5AA20D5D6D0B37EB09CE0B6A
0BF2058395848E116BF943BC025CCC049C0F06A497F4CFFC87709F8AA667D192
429ABEA143EB2BFE13483752887CE829FA0FDFF286487277065C358123197FD9
0FE1810085542BEC9BF21FA3ED8C65E264F17E3AC27AF5C2B285915549913243
0A266CB5A16FB4FCA6C3C2BF7DD2589ECD63E2D2BF83790D7BAE20B48666C0DD
974AA73A5B6811F59B8E1F48E40C8E15C1F22AB5429B442FF33CA57877B98F9E
7D8934D912BA4149987944EBF92C0D6E5DCB0E1CCA1635F349F9559A23037ED8
1DE19B2EF7FE2CBA6BADB939C3F78280F6BBFBCFE8F5A21DEEBC11333D2115BF
4B167BF279D96FA3B232CCD89435134FEC5681F686F762CE74533BDF6E898400
7CC3857E58D4E82F268B8140C3D9871075E9FEE58076E335FFA775A7662C75EE
6EBE68401DD2B22B01DC04C3E2E506C40A2F77D1AB12C864F441CA1FA5542AA4
FCC95872FCBC896444A2491B87ADF13314D791289DD02A5C9F6BE610DDE3C392
32B32BF99AF207C98750FBBA38175445824B6F55335EBA02E2218DFCE6F0AE4B
42CAE4E1141550E6EC40531195A18840263DB1F900A7804C40DDB550FE1FC274
A75635ED6627B266A0E5D104D9F377AEF64254455AB27B19EBE313224412C8EA
24CE4D7B00E762A76DCD6D84DC2E582D8ED85F64F7A8800815ED4019A4E178A8
F4E2D8110824A64962F46B9765FCA1941E5A27BAF0DA89626A76BC9AC81C3381
344EB5954ACAB0B94A402839FCAC12959079043BC14D2E2F3605CF75C6319C7C
84310F959275A18B4CDB86EBA0444FBE184CA7CA65228CA61051B4489EA3EF71
512AA0CCFBF32FEBBC48CF8131B1E201AE096371FCAB2D19039C480EC0AB5FF1
ADE1C762CA8A25A04381F18A05939FB39776E501109AFE707C033A1267E8F915
2CECDF797F17597159D6016A01C5233E70279468FEAE22CD7FD6821F38A5F5DE
BE39D56CA411674DA24458A525C73B380D9D33C6FE72F6C9130CED5AA9B98424
07EED3C50D77C66EF0B6D29F359828F3E57FE57FCB74AE7D0E885A3C6957443C
C67A8E7281287944CDCFFFC9C5818D75DEB610CB7450ACE9D703D66137D5550F
9F5C681970BF1F216D8BAF178B1602615104C19AD6506121EF31F60BA65702A4
003A16A22D50B713419A18D10294E34D94EDD679D4C36D95BE0EEA7BF3CA0B76
5A62870D51C61601755DF085003DFBA5A4851C15727E28F116D7608573674A6F
660C21FF8B25A1868BA3CC868A46E15B68C075A5CAC054BF1E4BF1C409CFD37C
BCEF267C3BEB75C74252718CA093A1C6166E7009B74981ABAFAA85C23A3597E5
36CE41BFBA98FE0056F9399195B0C5D244B382DC4280CAF2FC6D20F2C991B6FD
133AE1472EDCCE9BA2C321B1105CE918B48BD5B1989B0C15A2ADB49D08665BDF
5DB37A02CE6D966ADBD9583FEF6D3E7E76957A149D47360935336E7D7B51B37B
8A6FDEB711B878C80ADD4CF9DD722E0CECA317C0918CF7546A64C3BEAB3ED927
6058E83FFC4B97AB4CAFEBE4A91E7B4A420DA38FEDC4EF107B96B907E6EAFD18
28C0CDB1184D91ADDF5FCA578538D1C0915C73888897B95051C2FA041DB5F71D
5F6E2109CE39A04E4383B2164972A0FF931BFBDF075C47252043C93E5D060DEB
CEA6EFD07213F08D664A6CE296E3C53AC289EAD08DD6E190681B32EA3336CED3
7854F984C31D9833F370C748DE51BF4556973B9E7D624DC36233C6AECA9AC77A
D9CFDD3329CF7D8A12CDF8C26C940EBE62507398239D980B8C5DCCA4ABDF356B
A6BF40EA1BC8D7035B1EC227579D66C0BD80A133E1FD8C54171E41B72DF2AEE3
B3E479BC578800DE2409AFBE99705442561969A637DB408F869EC2AC77AFAE9B
2F666A1769C5A0E8EF525B6D2A3E145C80B5DC5F424D00FD1E1EB1DAC25CCB64
67EFF18EA24007E7782350DAB095C28F0C0399E986E21BB5D9577ED4A6C79776
5ADBF02419B3D37919B0E799D189A6058C111B61A1B7248687049690697A7AAE
F1CB063CA1BD6626BA440BBC6BB37E4243EF9D4CD66CCB7291C07B4781445380
7743DA2B25A4DA391DAA621FCA27C9A45B6E4C18A96FCD725EC95D8B67B8FC0C
6B3A28CC5937FD8165FE593C303F93974F606A43C51165294F23FCF23790EE7A
F2F2A3C752E3F24C3C308D0866A6FB8FE4F898695B17C44CB99FA0D7540CF02A
0C947347ABE193AE0A62DD5D293A4A78FFF7E2168D3B9D1B28CF849D621FE894
9FA6B1FF8FFA63AAAE3BF2347C06E19054A8BBCB81E4BFA221C24834E30D51E2
4600D2FA670E5A199160C73B762C950B3E7D12A57E8AEEA8F607FC75155A7E98
28E4B3875A18FF68B226F0BBE7F46342DBD521CA0B3DB6686EBB9ADC6A4F9E88
A9062FA379F1A0FAD50530FFB3808A82ABE03E0654FE648EDD54C9F9B0F6FFA9
1BCFEBCC5ADFFC83BFF3F0FCC92651895B7EC13796FBAA4160BB15CD656AE056
F208D51C523C781C01864201B7A5E94200620FEEB89BA68FB48925EB910FBD15
A7CFD615A6A951CA4E1703FB962EAA737F2AB852CBAE65405DADB3D67A5261F2
D23F8A759943C9FEBD5C4936284B21065D2C30298FB421A77B72CBA4C43C69A9
DC9DBF904628FEF8EAE584F56D4D725E8EA99F438240B6FFE8A4339C6ECE52A5
E740A98BF03A4DAA4C5D95CCB0BBA6D1A644A4FB711CF70A7C8EC7441BA8210E
47D8B24EE97C4AF6F77271F4ED1F8542D1A47088E1C226F0345C9FD766641071
66D99136B24932B1FEDEBEAEF77A08B524A3A426A51B23663AEFDCFAE3014591
507DC959D8B0DB0FF07980483D5BE442527B714415CEEA8393DAC6EBC5D6457A
F651F59EE7DA926425C369D98AA3F013D161049557F3459F5DCE5BD7C281EBCF
4EEEAA70D444D937455394606120A821B8838A15F393819647A49D4241B55063
CACEDB92E91543EB4EE12D56BB275BD73FC9CA57484F47EF67DDA65EE6B0C3E4
AD603FE063F5BCE6683037AA21FA8B82F1CFA757971FD2F0CF3451E7E09C6353
577DA3CF0F2BE49EDB9EAB1EE3D28E67C8544D95099BB816896ED301536F6E06
05277AA17E6BEBDC3B9F62EEF728370C954CF44E25F2F28026E1B9EC22E408DE
55DA9A1C4AD63E74DB0CDE006C9DDD457C52BF9232ECEC5A64D78901CAD47A28
0B2F96B6D9900F0733024EB567465E65E99A0094E5475249AFBDA675DFCE9BD2
F4574EF60E80782CFE2D86C62D586F23DDF998EBD2B2DDC83E8E700AB5FCE7FF
D89F50B372252DFA796B66F6A5B45B2F9D4A2379CC5CE05791B810FE3F75F99F
D9EC6016095543F89D1B3AF51EEA605F954924A9EF2496A80B2DF7AC5D20D0BE
F47378FCE015B483FE654C501E662DEB23CEB6C151359B373798637849473227
CC6A710349210F365754CE9ECE704B34D5F628F239E414A74AE4C737997170DC
37A973221D1EBEF4E2A7A0837A0DDBA3FA55F6A72A77D608E600B934FFFCE7A9
539A9D1CC36D5A694B342748BCCFC1B9AD09F6C19BD065746D49F117EA51D033
EE0EDE59EE6284EE79DB3D730936A658F574D91F0EC9CE5250CCC7319461E82F
6E068FB9DF1BB44B33B14EC9FFE266A97B05A6EE7B1E2E86ABFBCCE885B1FEDE
1137DF4376DEDFB80E44AA35D3DC489CE3770CE87E67CF6E2A2C226B0A5E1A0F
F767929C84CCD0131B9DBE03834A0EC6F745E6F3B55C327D9D32063308E9E289
714DA420F1051550811ADC334B8D6172FDC0A7BF5C0AD7B85E099DF532FF4CB7
D5722BA1EF399AE29F84D3AFB7D8C21C485F5AC0CEFDB3AD48C6D4D9AAA55B2E
E9F13ADE7D3C55CAD7A4BFF20EBA05B96AA5C343B57AC86F73EEBED559C3272E
14DF5E121487E0D5BA5A8C4EC9AB024DC36A7FCA7CEDA3F25315D7BCE905CF77
9F83C77C6602C0833509AB63B1BD1CA5F4980546A4B9C55C9277B5EF32D71AC2
2A94F21F201F8F989103811C9C1EBB4613C21CBDAC24F17AD74E5CA4AE25B356
2BF80C44CF7F2D406D883D7598F05A6E2FE86D5CDDE5CEC57B63298A60EE077D
1356B5DF72B9B20F0A94A85BCE169238BED5CD1A32F47ED637C0EDFB0B0B261A
5224FCC3CF0E348D4A1EB31FD4F7A1A325B3EC4947BBE721364CDB40F820E2E6
851B5DDBDCEDD8BB102D75C84CEEE9AB5B702A47786EB1CD8BCE1FA98B6E97EF
482A1302DF4ACBD523DD715F008946D7464977285483DF102C68ECE7189486A1
9A558C57AE37249A4437BF091CB7AC67BBCD2E9CF7B2E63431F8748C3B76AB27
14BB6A8B2FE189C957135C04115C28C6CA52CF9919B3677501E2DFDE71C75873
B23F9466725263CC3713D2DF0ED1AC9FE6C39607C3303746F460D989CA12FD26
42DCAF2D55748A84B2D8E0F10FE6431EDE86D82DC223DC10552366AB1496B358
D67378F109768C09992B9C94AC2BD6EC0AE44A889C08185053469E2920BA194A
89D0586005F50B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
9560176676ABB71BBD0EE56B4CC492C0652750227CEC6CBEEE374709231B00CD
0DE83AFDE295B314F6C8B1FFD32251C1925D96A64D739FF1DA4926460B28B3DE
E949AA0BA3DDB16534FBA30C32092D5F712B5E8C8D5142F35AF2906E6C219D2C
7FD9A368C193E0EB9C7E25FF03C546B6ED993F964CEDB1B8537C617170787F37
88D6F2AD02384B01067FE3F98257BAB958BB3BCD1001090A4502DA0638080EC6
DB784CC8AC37CDC01B29BC481D6A05ADC6188785262358C1BF1D694BBF31C1F1
AF117C1ACED44AAC6EB4B9A2511A6762DDE8FCCBA5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 65 /A put
dup 68 /D put
dup 69 /E put
dup 71 /G put
dup 72 /H put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 89 /Y put
readonly def
/FontBBox{-34 -251 988 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E03ED7D4F3EDBCA1926
2AF6A41F67AFCFBF3630C943FA111E4CCD988A7363F7C2B75EAF5830B049460E
0D2B337988F150B9182E989E7750C51BA83DF37685483F86D1F47478883F3F6A
4B7F768DA5AA89E8F163029ADD4A9209DE8A4F285766C06EA859639B92CCCDCA
F59B1C2BB8D588CA754D1257BFF76B53984DF4937093AAEF79009D32A29A4C16
FB610C7D6713482C48D7F9E8410C0F00AD6E67021056B6035534E79F05D14EF2
4E87EDDEC33BE4856B885EC0B969DD2E7C8F2F9BED6A7891D13FB087444A8879
D84CC902B0B0C18E14FB94260E5AA6346F1C3D9A93677251D12F67ED07C2AB40
01E91EB94FE310930D5E79E5848660287443FCBA105B0136FC696E632A99A140
6B08E11E60425056DC857F580C9D6DAD8FC586BC20491C5A07CD97E43FB1B261
0657F9054FB42879F655448DA684D5C120177633963F6D4907D0B9AB05C8AD9A
B074A79784A6D1D6314473EA6F4DF1E6B23437D3626B2F641BEB63EB53D78990
6122A0391B098C5B9215BECAD0939522DA31287BE35015C7B62918B6C87DAA64
66E96561D049AE90214F6226A5684DD12F1C4B879018BC7B154CB8C85B1E2E6D
1A772923C52077D36BA998DB4DF9CBC40345679577CDA374F2C91937B43953F8
C959EF67855731D6CD345D2DEE5E6E847F19ACCB1E61028C57FEBD7E47C9D21C
7843925E17D22D1D44023B8C7FF102B4E7513486A7E5A6FEFFC85E6F8985807B
68C0919D63DBE0574A5B8B47DE6F0EE6995C526E52DFB855810C2AFC172E0C80
2D7FE2E0DDF99329F50407CA5B82198BBA17F05B38A1F6D3DDDD15D9AC062343
390AC55A906567317FCD758A537B758F45613B5507B8A1954A96510E08F1CEB3
E9617E80327849B85471B541473F823127BE77E7C7C54786D77BC15E62D9F5A2
7381717A1C66AB50AD3EB6D8A64AB8207283D0764E290C1D3D4429A97A8C93D5
A9424484DCED890CB4893A0B2ABC24DED2A49A3E55C0FC00D1DF389329709299
53955350F7A53F6448356D90831FC0F7C8295682E200422766E0E69DCE052ABF
2931E46AC5845AA85B1581FF059202567806CDBBB05A9F9E77397A02982FACDF
D13649A9A728323D2471C392A2A306119A400C49354DE6E1AF905BB6F3530496
60BBDA1BA112B389CF4B75A286D7635D76C21811C23674FFEE23A5AEA05501C1
3F392C13B69CA776BCE9574375A5F31E5176A515B017AF735CBCE045365EE422
1B7A7F0E56CC92A94DA471ED08C1C75ED8E43DB896DDBFF07BFF2E2ABCC1661F
B538C95A8225B6E29E0E52CF89913EF081B7F31E39715816AF93F1F4FFFF0937
18E0194BC9745B3A0339FE97F69819A112117E4351DA48272B3DF8F00ED36924
F491F7351073788CC2F46D262D1C836E8F7187FA1ABFF0020240F8D85642CB93
54E92E5800CDF330498A1A81017B5128DB9FF450C39B25911643D664E5B0672C
4C8A37CDE935267F2EAB75B8424F2A04D660D74179615AC2EA251D60F1030AAE
E2AB8AFA4FFA0F0003B8E894D6B29D8D84661E8D229F872B3DCE1424ECBFBB36
E774B5675C75E5911EFE59ADA6A5BC1AFCC20513EF6E964493BEA035E870C2D2
F625B3FCB62D9D529502366844C9A76953BD4C788B6EC2681EA4184803ECFDA0
052F3AF7A29894B63C5974AEE44C30CCD46C8A631DABF84DFFA905DF6023BD24
E88720BD0330A7589E1256FF4BD1EC2374A1B40DC8EB774AD9CB546BB3B47634
67C428D5086AD667CA93C94B3A5FE612377E275BD489F7A43898585F7E7CB9AD
5DBD045FD380B0C89D9BE2B4B21B55CDD9C22B1DC2EF671BB167255CFD143FF5
831C92379F7A89F1B0973920A9336C4C1F8FDD772B03B52C57EC7BF7CE15CD08
55EFD481899C2BF4543862B4C7823CD449F44B44C522C9ED2E11DF2AB8067A64
6D4FC3F1A97F212AD53E8D79C8B2B7B173CEE4DDE82636835418D756ED48DCC4
CEFA6F9C6C98706D55860FAA064BC3328D8AE466F30889F992372EC9DC5000AD
41D493208F7BE2EB1C83A16348CBB35D4AFA5D3C89B05D1CEA05A1A6D12FE2A8
AA7156D5D3B8F498238CF12AE418CDBAC85CF9AA387CFF1961033AE59D8F5ABA
AD6CEF32A9337FCC8DDC5167A14FCEE5A3918C2A41172EDD3D2D49D8E62B7F85
19DD79D69500CF13DB65D2293F2666D220C8C60C2ECA47319587DFE907379618
98ED4303768F50D0A9A2838472EEDFA39292BDC70F1350A0464B0002F9438A1A
CBED87182AA5EDF1BD767A1FB900BCA675B824AE55DA08B395FCD9E54FCA6A17
43DFEDB7AE3D4957F0A7BF741EF849FBA5DAF938B23E6360604EE9EBA7125EFC
3F03732A63D62934600C76D27F84FDECB72769D2F56CE7AA319FFF8F7D36382B
0197D39A1C033E013AC2C82836DE664856D66C0D3449CFDA14F7D6927A208BD0
77FFC3421AC5099897C14A7ECE3A3A3BF1574A41C640845B0514B21BB55D31CC
58DFDF8CA9E66C961DBFC68BB93A3033DBBECD47356BC9C484635B46592B0F33
739E15B1E148B1A483A5E0A39C8BDF6CC8D8890BA9781008EFFF8DE15E61D7E0
3702808914FF17FF410CF0E3EE752E667BD8B990CB91DCDD966F0F708ACA3F3B
17FFDA56532DF657DE57C34CF2E00CC00DB90F158E03194CC8F3AC422AC5CDD8
B8137C07E33C29E472C0AE9DED5FEB28DC23FDAC6BAED64351C781647D6FF75F
778B11ED9EE45F418A2946344A3A8E35C8A4AB7C02EADF95EFD2039F99EAED5F
05FDBC4AA67DF6930C1AD86C0EC0F12A334B9D761C2951A0D4CC89BA157788A0
90FB283BCE56070793602FA767EB41CA9E39B17DF8B1D594559A9DFDDB842F3D
557ED2997D5817D64F49F722C11DBCFF4487D63002F5C2BC9B53DC1C167CC9F3
33035BEAE827B8C40D12932D6D1C428CECE69F2F112B41AB3DD1F113AB66E617
EDB422E66FE1017A16942C21BEFDCFBFAD18C7B694E19716705BC9B223344A1C
0FA2EB3116AF23AE95FCA84FC310F9579AB491958D70A2BB89105CDEE07064DD
AF645515060B1FEF1B673C222AA66C7B361D9A1FAE40C60255EE4FACC175A7CD
706693CB0A80CFE35CD7820B227096536E443DBDAA798D76EE83F8C2D8B545BD
EE9129ED05CED7F1DAAAB9095421D7AFD1538E4D37D85FFFC96338758065838C
2E77A62C90F5DB1D6214702C83678C7232C1ABC2DE63BCF175E1A93A3C2D9F10
4F59561CDD27617B43B15568DE8D610593653819367F6C0C62981CEBFF296A92
540C5C818E43201582EAE91325B0F2CC979758E42AC0A4B3178B3DD1AE20520A
82F54EA43C6AE37760998747D27496C2094930966D285162D7D0EC696B10A279
5F3244BDB467D7B68A11E9AF11330E10E63B37EAE1E166E3DA7C1AFAA7F483ED
E2A011DCF6696890E6249B9F4311E29B996E9BCC9ECD03DBDF6FD4003D353AF0
CAAD329A9199FF8E7C58440C4B9C5759D4296BC3C0105B782E19ADDFD1D37FEE
399A0099F36A3F5CB7093584888415E08CBF027D85C57DCEDE555E30F37E9381
BBB57550F691543D0B557018419335027B76DFC6E6E197AF5E10C40691CD1D98
6130A26C80CFAC2ECE9085B9C987363BC56DD6C96D7B33E43FA4404610EC9DBA
1BFB200B7061C070EA6244428F1853BEA922AFD6919761807185EDF44A8A600F
49D16249B06D5E71EF1F763069D8072644837E0FB29160544BA29D2D18BF3959
7794ECC1817D41A71BF465B13150BF976D7946C633BC81E9ECCFA5F0EBD23DFA
36C519A414CCAF721AE7170DC0B60EF006439BFE315443385CCBD4E92227D7DA
054FF3F5F40198BFAC2ABDF5C64CEE00DA80AC6AB407B38108F7F2705B870AF2
8BC4F7E4CDE936B7F97DFCDA97802D4C4E696702C1E743186F0E55CE5B81C9E4
FAC803445479A05509BF48998ED81157F0CD1048F4EE70C859CE96F7E8CFDC28
EAED46778B411DC9DA6B4D5C2A9DC08BB6AD585FE1FD16781D1E22B4074E75C6
0D962A26CEDE18BAF129D6D1114E7BB9B58F5B4DAE3845AF55119B7A4736646B
7A8CA554FAF10ADA1F747448C745DDF7A157D72E411CC12A5CD5E78D7A2CAB6A
814F72B0DE0115277DC60AA8C72BA4338762F54550403A0B8874F139F4480EA5
4E580F6DC3153792E809E0E780CE149994D1A7703F6BE36B2386AD408158582C
95B99EA09BDDDA85BA60D5AF54389FDDB2AFC022383042A3BAB32ADCAD5023D7
AD9097297C3FE3A5FD5DB43C29D33D024A6CB3CC63BDE8CB244A5FDDBD50DF2F
457092C2D97F33EB04EB58990A5CD6C8C9CF4738D029BD4C53D69CE9203A2E47
904FC0C7C8F84246E2E2A50431F79DB278BF00465D8F374CAAFEC20E90D456DF
8E8161F41B9DBB8AF20E0AB4C6E01AA665504C3EAB0B657B59CC6814F73B9CE3
C9F0496A57C76D78694579D50F6AD8D5AA0F3B6F4A0A6553B49B05D4C65609E0
B343DB555CCB0EA8BCD1889801B7C8E3D5BBE5551775014CF49D86A62196A4DA
92F4698D7A3F02338A28DE82B138A5D18F7FABE9362D33C42CAE20403AB846EE
E5F88DD97E9E07930DCBAA3BC552D78488145EAC901349B78DB099E1407867DB
3D884CFFCE05D6DC193F1D3E69F6778EF4A53518CDF988A34310D6730439FDDD
8CEF31F8DA74142475278719490BA7DA0856DF5258758A2301946AAB73E5FDE7
84AB547F3C28707F2AD5170CE5C8FC289E98EF226EC428F803C65D9124701DBB
8DED49D91BD0DF9029FBA8F7FA6801CD2865478BA185F27AF44FBD11BFACDE30
B2201AD05CCF9D213A366D6FA4CD59EEE4305FDBAEAF20572943FB0BA270F45F
CE26E31F0455F50C2A46A1185A7975BEDCB7CBAD6A1494CC47F9CC8112A20A3C
6477725D05ECEA7DDFAA01B68D9BE89E7ADB6A636FCE4472E38B73A85063706C
00682256C061B10F4D4A97D61D79BAC42FBC88F24590932F47CF89984F484DE1
53BB4398CBF08B8780B9BB34CBD05769
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 61 /equal put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 72 /H put
dup 75 /K put
dup 77 /M put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 95 /dotaccent put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B283796A9AD847424B4E6508546C36223A3B17EB82A56592F27FC27
F1D49D5FF4BBC0E16231807AF7E195AA7D0D01C7566243448B222D57B811EAE6
DE9370F84E207DC9BEC731AD6040FD9B804FA14CA264B73136F9AF34390319F6
A543D5D4D7FDDDF2F76651E557683614521110DEC1CCAC426117DDA7D6CF1B8B
7879B21FDC78BAB3C944BCDCD6A65B67F3692F0A8D5E36FB783A63D4FBC9842E
2CBC2720A7206F42A99AEC79FBBA92A27965AF40A71E05E4BA8D7FC58C828226
7A8B47241F73590CE626EDA930A1D18D758636250D9D6A09E133378CD725F586
F40320EF186DDF87AF8C2F5470EADFF39C60384EB4DD859794CDD6E4AA8E8A7A
18E246579B5FD876A7C0AFB4D935B09F36A74412957D9BE1DA54DAC6239E5574
A9AB77DC4A6CFBAF23EC30579BA578299EA68B0BFC5B9B4EAA4D3CADB581AC57
6236C14F8F8D56406DC427BBE7913BA2990D22F36D646D3D31A6DB69512AACF4
0A46538C40FE5F6D369871E01325199C2F208A02EE453F545DC69D66B1ED9081
DEC17CF4BD5B6DCC5F7E835C3CE7D4454AAB910A3A4347AED468CEDE89A1454A
27484A481372B387017C878AB8C1A37AC32EAD9483019BF7C06D00743C097837
47CDDEBE8534C242CE9AD3A75EBE2F088ABB5D6C02C56198677614F90348A9CC
00EE1BA0508F7C06D3680077E7C6A4B4AD79899412D71F46E9320C26306F9151
4BE8BF98BE634FD17B2A2F4306AC9C0E2C687D1D9ACDBFAAE00DD6A10203A408
1A3588E9C8EE9B79A4FD59A11750B9163B3FBBD06750582F4FE3FD2C68CB4E6F
0E2497D91DD9D248C09B32006B98C953CA24CA4C680EA48FB4A927BB614402E0
82179E316C22CCE16E0449A1B7F2BDD983DD9B934F0363A349967C416CE4B169
FC9AFB86BE2193247E3319B2E821B652D4C20EC662F2726433244AB91E1B3AA5
68FA8D91175CA8006BE95D3E5C2EC16B2E8E59D30FD09BA80B98251F9119B0E6
C43A30AA19EA6622899B51704038E92BB929689B5CF32375D5AF5D6331D25CA2
D11F94EFED513C7814FCB4C32B93B31F3DFDA1DAADBDD0B47928AC7BEE1471B0
786C5288D87CA8C60B06220F7BDD11C600E831AE2F43E5F3C905DCEFFB1AD3BC
0361BC17907337EF4E6820CA16623DBA3E418D394A00F122FFE9B4B17F3714A3
0E5EEE80A6D54EC9E5CAFBCB60E074948E2D54736EFA6715FE24848E8D1035C7
03855417BF0471B2AD942117515D180618B76F04C1DE4B0A0BC34A3456B56933
BD890986C5350312E6260117F50B1E7CE5ADC813F477F203AFF574BBFB8347D5
D35D77B29B7CAEC5B22FD073701F4AC80FEB64569853B2B14E3B17FDF822DDF1
91B0713EFD703D2FE61EB4B8E450968B69F792644FA8B074556DC5CE792212AF
26C281A5EC4A2B61C59F2CA9D324F24C1A4E61E3713C6A59356F78BED0C22465
37D1B30B4B5E90C1B414B03D92674B75602A0204FBD0C3388DFB72CDC2EECB50
12EF607051FD211B3F710CB04554D733D695923372725EEEB5E17D31F401B30F
40D81CD644B79C4B49F76824B2824D023CC0FB511A940C98012C9ECF4F4525CB
C69B7E3764CD128C422017F2365666FC35AD9D094108390DAC88E1DF5D422880
0529B864522402973DA1E1DF36D3707E724949D66C1B33685E1AAED34F08655B
77D7686F7F9F970BA194F12D93F5C5CDF9673EFFA3E30957F1747D58ACB84709
0F8BE2DD6B19BA1AC0E8FE803C509207474DADD36ECBACBA1C21DFF52FADFEE0
81EDBBC62439A4AEBA991488E91B9330E368861F481A90996738F958F08EEE46
9479B4491506455DEE313113B43B416758A5215CD4D1259D853826F9EF45EF9E
84D7423706B692DCF7256E4E284D1C289972267393B5B15B6C5705A9DCD70E03
51D01EE24BEAD91D054B7624FB05FBDA94F25E5A4DB489BF716CE005D5527443
DECA07FE268558ADAB5FA0C398C8A19489916593FB3B84FB46B2988B4A57B0DD
8386700FB78F984AA086272AB36453616379F09B1882FF00274B2857FEF8CDB9
8BC1A10EF5DDE5ACCDB40778FC4FBD8DEDE205DD4BCD4828516190BC121E1E7B
AEA6C6FBA94B6B2C6614C580A5B9B84630B42D262EAF7D2CF9DC0CF5959AFE6B
10EF540FDC2A6FA15675B0D02BD123121FC614DF7A4DDF482BFBEDC8314E8D95
BB124427AFEE6432FEBEB00AE11646FE56DF8459EA82CC5DBE486B0564B553E9
9B449634CEABC63573EDF779E57B5778964D6E4989BAED29BAC3FE2A85EE525F
1506B26660F5B5D93E4CFA1D9577E1A71F119C066ABFC1553C6E8401AEB8842E
78082E528336F0F9BB8B9A765E55338B9AC2035319BF2F1B97E5F82ADF6761FA
ADE906794B6DAD149E20E247E7496DE7058822DA3243B25040A77BB6B389EEB3
3129F8E1CFD450085278EFAD041F3AF07C2D3E974D1DA060E0216EDB9EF38819
38CBB6BDFC078AA68D89C360F7FC1445141937A218C8992D7F6325305A73F0E4
07807F245B85FDA94D92FD6FA992E04F053F286393E198A3D7AA6244347C6CDE
113EDC325B11AC6E8D5402783421C7A2E6E2277F1631FFCE3791B83BED1F8E51
1BEF258FEC79E033B896599F70F6984B927F369AF3A792CC06EFC3CE36981AEC
4206A79912491E4EC470DD6B25FB5AB21D8CBA9A61827A38452E01AB89511CA1
B2A68C8AF6787CA2F8CBF92F3B415F11D2109C800EB94D72E7FF94BDE3C2F88E
1098FB00FCD6CD973336CACE55E69144D5847C81FFBCA157256AD1604A0017BA
637191BA1BF4F9E3EB70D2FFFE239FF33231B749BEF3C2C25C7BBDF932EC3B7D
1ED636B9E672CBD7F84D377B79D6DCE055260837BC21C05FDAC77C3D25557FEC
8B4A8F2F98CB9A83B157EC29C2A788C9D4175C411B8FDA76788ED482C47C727A
2708A92BDD673805A7DB936F9AA9FB363F09821F4D74DF795813A4A47ADFAAAF
34A7D75BDB06A2DC8FD3E39598CD29CAAF2BF336A01D439AFB697019411555B4
FFA79F516A0030E9D7CB5D8CE925AFB9A6B45EEE1DB8259876798F7DF259B81D
0BA13E2048ED98689CDBEACA74D06F12BA3CEBC4AA1D03C064CAD3D2810A8AD0
1F1E82791E1996BA7394B779B2FF47104200E9860A9DA6CE2B3283E8CE1AA156
529553C43B0671E5385365E839401528BD16A57FB9641C382D9FC1F81E98278B
EB4A0EB2C16AA99177C58E94654CADB66D8B36F3DAB1A3DD916999C424CE168E
0CB8CCDF39E54B1E4B03001A94C98B4F500FA8A523BD56B7901BE55B9CD30F3F
220290470CE0ED60AC000A6095068417A9EA649A06299B2C79B653A396EF1EBB
EF9510EC1182DA5E91BFBACB976752802EFD6E2B0CB65C1FDF01385E6F626FD0
5CE8EAB1465972323AFE9346A90E2227DBFEE96AAE3C4B9E4A33B559546EB091
DC658CD7FAC461BACDF3B35D4E9429D4737586C9094A5CFC5D03CD0DD655EF2D
65F4634FAAC101D55827AC26C9F8E8DBAFAE6C9DDE3C9328F4B08EEE34E4F78C
D892FF68D2A64EA233926D3BEC439391BC2FEE4A40D130F9AF6697B8BC3594CA
20CE9871237E8E6DFB5373B64D2A973F63DA39D0F6F985A041A9FC155286AF65
5EE16AA6398E13E18263F8EB87C2C2AA6B0299AE5FA9A3B43C168A7040637AB3
7B6F046C8B5AD54DBC6B5608CFC050BF59D903417C83E8DDA048450968251B02
6D11BB350BC8F5F99DA2EB73138D471E422C6B7EE53D3EBC423D4661A0E1491D
8724061E4BF28C61B3B6497DF9A3B42197F52E8C47501D9441D38B0FE2B06EC1
FCB64D64C6DCA640570DE0E0D47F5B1DEC22BA1D8133976230E113DAD65A6AEE
CD8B677D2D5E9C7B318CA3F571431959479881C050B25C69455254191884E34E
642ECF965BF9A88F78A90EA07E53CDDF057EEE4BBD7C5BC4D85F42F377D27DF0
923F533D3EF845B0AA72621666F2B2C91CE9D70E901190B13C0FFAE4F803B3A8
A155E26660BFC59DC929FB96698814D7998F70E122C387548EC9AE60891E9705
65AC1D186DC7E641B05E29642AA3F58F8CD69731A2734C7CA01E67BA327A3E40
D614173005F1C61B7650F72899227084EA2FC6ED2C1A93B6D8A62622B003A0FA
1FED7752653AFBC05F66CEB39733FF2082629C0799D8BB5E0A0D40486AD016C1
65D2D2888A6658BE89594CF205B0E2D325B420E46EE5106B02C00A8516CB32DA
B08A5C71CAA3FD7ADC0D1CB365ED6062E8CE879C175662B8AD208BFE13C56BC2
3986ACC8D46E3F2490F58AA5C3B9347CE074789ADE09E4BE8A44D9D9C0678C5E
DAFBC59093B42D7DB3AAB911E551CFA1644233E0226F1E20D2A5854908F9CAB3
11C8C799A7CB3A7C34BDF1ED114278221993FE1C9575A0DFBCBB18DF3930CAB9
467BFE2DB2892475934FA5B1637EF7DC8C9C2BE71F7A7C6C1EA4FD6219FC4E0F
9B56B68B3F9E3C3CED6D967DDE28BA1C084392B10E486C241ECC3AF2159FEBAD
C4052213B3AB40F328A96CC16FE4F891296FF29C93592B5D01B03EB5B9C592C9
A2B749BF96DDFEE1A0BD70EC52C3EC5A4158E851889E79E01219E90EB513BF70
4A704E236F9B51813A888EA67EAEB099B80F7F900912877D4B27093F36CD5568
01CF20C46CF535086E2FCB2AB97F21709F0F34D6D6D337A42E82C1CF5E86C8F0
10EC6F0A0F1A900F08FE3761309869808A603E2F004A16180634062EF1651F2A
C1D83D23F0C17C849E802131608597B0146D975944A4B39C0AC765E08D81A10B
5AF81CB82A1E73378F52B24FF0FD9B2DB33B574EA61A8CCD707EC3426908042C
12AC57F5B07E7D6930B4D8734C4A1252E63B2EDB3CB0DE6CF2421762A027800C
AC8E2C8FCA7D89BF4A479B7FD895A9F7329BB1E3E80F43399478D8CA90009780
EE2834C9810510F83E08A24292C2AE117510C0C07D4D9C5751E8943DEC7AA199
3EFA75555C7F6D453692FCC32F44A5B9BDBD313E26781C884920F336F475A1A4
FD110D8B7C21314F91327FFCEE2A59A6FF4E65C27FE1563771FF219EA3CA1B0C
2F43C6C700771B672090FF0F37062754270407AE151D7461A109B181A4784F66
8AEB4C4148E202811792AC2533513C6B95DA51312792070A91AE9997B052B972
A26C99931CA208684F686396DE09DDDB0926806B4C4B7DB835AF2F01D886C977
D772DBAB4E5AF893425EEB74795813BFD50E5E6C381295839AAC4F52DBDC1F01
B47C9240601A39900C8A81B3385D144D1D39AFA9CE1C872FAA27F6D32A42D5DF
B190719641012A6AC9260BB92E3582AEC8A17D518BFEA4D39C47858229629F96
71AD2C2AF6A10D94DAA41DE537D2CBB4446DA2952985D16124543A7EEA0C0A69
AF9CF07A334C0B15C50ABB6D919E5B8721C40E5CFE26F0138A3150CE11AC1D7A
0A24326849C483679403E64B4DC2F21AF192AD0958F954A315C56EC0CA9FB53B
C183337799DDD80FDD8A1B498D7E710023F12CFF2C81F252AC794696532AD80D
88D9E4C7B6FBA19DBD68A62FC45559B5FB8FF60DBE366B8F40F408AAB9B6A611
D3D9CFE84D89A01B91C8A58730803E0E0DDB2999F24E5ACD3950E3AC79679418
140C9F173CB2F6D30755C135CD6C9904A54C10970CE27068725F47819BC4B19D
B474F4C933F56EFB56353255897DDC7B869F6D4EF1648D612885906D090E6AA5
527E56839E3B9C892A0B681DFC7678BB98BFAEE0B952CED7FC61621A6B76106A
25B19E4CB58AC23245DD9D53DFA5099D862889BF888D1301DAC7138BC8485112
A1DE642DD0943541E1D493A6B164AEA204CE6D3D2663BC736432D0941C2AFAB5
EB01855A3321FC4E1CBF69B9FC9EC2D57B72D67D5931DBC1039262559AC02309
B175E563128BA42C73ED51460FECE2E44E2F68E6AFE2D42330824636EA19E471
B8AA2FFA1EB688168CFE9E49BBF10B73CA6A3D30C42ED16660D2063214B1FE2D
B0821C391DF01195B04F6A3F56BA805662A6F0942CAA06B8977A80D7E29C7D20
E6DC5415FFA39A995C24145C7D3B550085EF9DE6A10F1AB3D9C633A33654AF8C
D58C044F2BC075492FF7990562BC53FD0E11F1AF686B093405FC157FAD0C97A4
FC035A08A35D12F3443AFDED4FEF7B76F8469085FC32D2635AD3A2DB68A98283
6D992A0163B4BB431AA4E27CAACFC87D64BB6131DB9C9B09258968C2BC6854B2
65FD09DC3273EE2F5DA6217A1F811E5F546544FC465FE51E3B5F4EC1F5EB08CB
64ECBEE9A0D24F1FC4D60485937D1CF11F2CB892538214FCBA986D8BE7D40863
8DFC3A8DC147551488872E4F1EC88F60A85EDCDE9117E0210C5785DAEEDD4775
04B4F4126E7B065029A86EBA3CC97CD55677CC52774878C6F866CAFD406CEC18
8A14C9BD2CE1467226768832412B2010867329FE7526B7853832DA2760B1A2AC
A25B8B0798A52CB27455576DE8F51CB9EB359CB0B0C6E988CF95AB3D575C04C3
DA23BA8D24AE6B84CA14FEC1D715EE71F57BC0C01289E6248F7B35797A90E2A1
8B9AB0A252053DFBFA7C18627E48D8ACC2D4D62806AC63EEC07038E30083D69B
87F831B716891C0517B657DB271BEE9C5F2E2E8A1100A19975291F0FE2EAFEDB
C2C243A7319166E8BBEF9D5F3523DA306B54962BFF0F51F6078C2A26707DD35C
A8B6BF0134FEFED0E8EEC53C8576456F2C206B566B3D2F3B4FE8814B170B8AB7
329D790B432A8B551B38DD6C253B39F2A61894F838C86A3BD2F9676A33746BC3
12F598626A20C7C65A3E193E8FFC2AD11AA18363E19C7F71A4A144EC3BABB7F1
7CF481803FAA6E5F501F30E3CFB869BD20C1081943A0D92971F8BF13460E36A0
D74204C2993EFCCA0E8C9B3ED7FC25710514F309257345E4C8C42B0CA4421702
2E6924D7031D228ACC03F7CA7FAD1177C569EF55EE53C9BB80359F4B3727FE13
6F9389B09368818CA170339BD1F718577B6FE60AE832A25433C01661772D6821
7E688A57B0FC938268087EB53E4976DB531D7A7DBC6AEF69B69CECAF7BF868C6
0DA94411DFBADDCA80857597740DF51F2D36D749A4C4664888B3AC432A0178E4
1CDB2953A10F0D281C2AB596BD4A82B870005806770CD521244DE53CCA911A7A
4D8FAEC60A8585BD702E9F2D4BCAE122B92302A350F1650FD89BFD9FC906EE0A
C0F60F783BEF040D0362B3506D54F1F4DAE2D9800F985BEEB7EFAB9DAF661554
B0EE210FF35CECD5566199F012038860E9C587ED6C3444C261B23F04A9E241E5
CC77680F2D2E41649446D7C5B8D33001B8F10BAB8917EE9C2AAB76E0D6721B94
80294D80DEA63D5FA1295453481A6FE401D433F0537363D2248573125DC21792
2A14362D7D203BC28AF6EA3273613A37D807D910927A20995937C6705BEFDC9D
CF0266048400B1BBE88DEF40BB155F8004091D91A4860E115D323A6F2A3B9C5E
77A97B8485F5A8E8D4E1B62691C13D39488958C6ED6CF70E81F5124984E7998E
6CACB6D502E3A7637627758D801E4C9F51E8A54EC29621A98F5C9276E9486BB3
0055903ADA93EF0A223F1A35054AD31C4A6063F90C53838144DA9C580DC043F7
12CEE1351DD548D5C2A051EEB8C6E9D8E7EF2089C620B07779EFA37BE3C55954
84E4FAC58A410CE4242F2A6E7D669A68074877874FEA0ABEE6749E304C820835
95EC6843E09DFF9CA954EFAE9904A60AE536873D88CAE59D443E02273D749FC8
D417A07651A3DDDF31E72EC28B71C7ECCA6868768395F337B45BC89FE725CAF1
343A924239FC409C8FB4F3D4984C33773FD921240C9B27253A919EBFD9AA13DE
97414C1FAEEEBDFD7D7DBD83D699485A5E061FAE452786B798E02A4548A02E15
B1917F9BD5CB43026452374BB631224645A4CC9DDFF1974BBCBAE246AA07D569
505013679A0356BA323C1806DAA3EB467E625C5F3424CEC03D93AE3B70318BD9
101EECC3CD0E4387BED3F8FA1402EDA37AC8109C6A22B19E1351EF87F1ECAF52
7AA1AF4EE66D75596B10AD55BB92E9E056C0C4DC6701CF0BB8EEB23758E39266
BE64E4FF72AF66CA99316AE16F76A55D2453DB7F16A8AA362FDDE7434EA8A458
30A49CFD203B02A1DEA3B60F3279D1C936227CCBD91A14C7129CA8AD3CD84D73
AD09CC0E873263F47B9744D94497A82B30EF5070D4C435AF8C1142FF0D9BD56D
CEFECA11DDBD6D5555DB6830C5677CD6FEFC2A810A5682DA5AA3960142404014
ED15822946CCA92EDAD2F312201967C8427B1744CB0FCC07679B6EDDA146ED56
B313598C5DCDA19591BB7DE061D00DA435CB44FEBB0ECA5009FCA0F029C2EE21
AE55A678BA437B3187AABAC4251C4900FD21336B3EF7F553AAC4D8367F8B040E
F9F93266664D47F951E922AB668D2376215871A4A3CEE7F4A19D64E5518EC5D9
76AFA474739C58DBB7571F7E3A2736D1AFC93E484D6340B0F6545B5AB9047D56
D6A85B89C1617260062DD1BD28BA2A6E2781C5C269F5C564A0B8FDBF3BE0E499
83EDA9A37EC83D855277314965FFF26742E1EF1D953C87A744B5A52757649015
13D3376E8742877B2A671B070275CD876905D6541832AF70CA7A83606E0A526D
BA90F682FA7624C19B51629432F068A87896639E239543480D44197BFE2E3568
8DFA256911CA756307B9AF22E645468B6DE348828517056C48D1F05322A8AA9F
2122643E9E202A21511F1BDC0C47EDED6C11B62CE2C38B4EBCC637A14B284A25
5D7C7E8DDDDACFB5862221F82B58E7B34840B7834B33FDF34EC0C1A7225C8A52
BF47B77CEFB2ACE247A0321BF0C32793B52B0DA516AAB09CC4F7BA93940C5F1F
7DE9B7CDE7927DF45BD354E385DA08D009E664682F061246928F27A852BEC9AA
3D0233692C3892E025A864B924715E0C13FE5DD2EBD599879C064DA7C1061E27
B5B690A1FBA1302CB553A1A767EE864B8B0C7F8F60EE8719D8F254F5D44032FD
E17A13825630105E64B646212ACE27002E63B77DC8B47C789C791B6D7976FA9C
C2D493CF70C0ED74926481880FC4128B9DC2489069E3E040B1C7C3718DDEF738
C9274068E8FC39BF8D31F2C65CC5E1EE16281C61C8B123EB659105E2B977BBBC
2794A8FF3E6DCF5F51B40F952CA237E1A613809903E80D301A4537E4A07F9C27
CFA1D5F42A30EC448505FE3234990AB4418048C3057959D861C45218EACBC673
9EF5813A6C1DBDAB3106A19B9EB54A063B098F1FCBA9E27E2E6D9091D3F1064A
FB4B54F83F881F69341F7049D7D0E1C078E623E75CEC3B8B3021092EA8374486
DE4C71D99A2C6C796382F80CFEA69B5D9CFA4B9862833C543259C5F8644804B8
08E93DBD2F993F498DAC5E2218F9805696AC3A5FBA81DBDEB98F06BC877CD4B3
0CBEFB330916F1E4EAA4974337529B03FCA8A8FB66310980233A1EEB1DBF48E5
F9796AFFE3AEBD752A40073ED25E98282806548801A79F043A0504A82DC23055
0A2C4165C4082C3229197CFE4AEAFCD8522EDD199697AE7408F0C79485871319
E59FDF2ABA99B87F2D669AB16CE784D2F10E60092E7F40A4AD4F4AAB855D8A4A
A895ECFBB19779150BE80B7546C2B18BD911C518F32D040EC2D5E3C28F289787
2EFF39EA92B75782728D64BB553BFD616F603D0A9641536863A32EB950A5A2E6
60AC463D513FFFAA171FB1E173E0A6F1FE2DFDF69B6FBD4B8262C3C5DB9D46F7
7BB02A5231A119398253259241EA8DE809EC2C4F2571F3C022AF37383C43A9DE
42C473048132312CB1191EC21AB380034CCEB013C9812D362890C7DBC1EF2780
87F3525865054D9016592C2B7FB2A7607C96CCBB41C3C819D7675569ABB7DAD7
1872C114DF166E1DE9082B35FA79D722DF0692F299720A9410F4BA3FBA94B17D
68400C56F15B8FB04C9F372B6E7C09C8973000694BF3F677FE5C3B5401DFFB0A
3A852659CE05FD497E425316E2920282902D9C2860C2C7E842532D912211BEFA
9A65926B23D00A762D630730F2C1EB488080A00398CEF87DB25B4B109BEAF5D1
16613B37323156725C0649AFD309765A52F780A36BAD4DF96F82B449BC85143E
D7F1CF558326FC85C24AFFCD0F4AF2DB3518E21DC149C71EC58AE5FE9B6F60CD
5ACF72F833AD3489C41A1BD34718F9BEB4DA8535F8A1CE51A12A44968C2600F1
0597D6F6B4730140ECDCCD6FF71FDDB986447F5A776B3DFB21A1A6743617C766
BB1E1F040A84FC5057F1A64473417D90CD9E1D7EC0C8F044987BCD2EFE3682DB
CEB92D5E8A11AAC382E2411D2AF1481A211C0547A1909937FCDFD4FA5F556E56
E4A12A253B0E77EE6719582DA0E603C90D46F198C8174F2EBBF9296580A40A08
F1B76F45D114B153129DF8F25A084A28645BBBEFD6DC3F990B64CF2AF490AE62
7E17EB2FD99684E0250EF8F1992120DF9BC9677507E0F450192C7BE114597A77
7C04B343CA230674D2CB2578830925975574C832D6FD55B0AA00FDF7EA9E7CE9
74630A462174931EB52AE133BFC2D1C2A7C8D904AD89872FA0FAC34A59D4E78F
1CBE93014040BC88323767343353FE0D0ED6309DA73076955AD9CD050439F959
D7A0FEBBC180E459D1EE3DD16EEBCA2AB23D2EF1B28903CBC518D3971774E1C7
AF6488B8A46A43E22EB2237A4DC71CF3C09443066850C1B1703E320ACBB73067
EF1738E14A992C9958CC6C59E80EC08DF0C882A2B690CDDC4A04A7A6B4469D4C
EEFE1FF0909A293BC0CDBEAB5A9FE7043EDE76A00447D4F8338D46C5EE5F721A
9EBB8014D9EA0B99F45416891B6F6B876ADF099218B8BD0593D6946E7B66D406
531F7E7B6A02EED0902DFD45C8C8BFC7F4FEFEEBAAC82E3D2518E7FD6694F49E
8E074820FFD95CF01803C5FC850EA1F1CAD55BCFE43C556D5DC6EB89E758EC68
C3456898619EDB75A2F7BA2587A717182B9BD7B0BE0B231F81DF44B3266E33F1
C72FBAC82F6801148D08FDF7370FF77D3D3550AB86847C0A6CA07DDA3A369484
1DA94ED93707BCA523C3E20DC775D0F9EEC621C4DAEFF89A3DD43BA7CAA6B6C4
BC309A987D0366919AC2E35B2648CB9162D4E8EB286BE3E9465A075901C75AF4
76EA85216AF7CA580E604408E8FAAE39C67E084C99FADAB04774C58908498E96
2757F207F3FBE72E3F33651768B40B36621BE51BBA4443736A0E0289D173B5E2
E70FC3F79DC3B684A2ABD1F8DD1BA7CBBB019FC644FE467E3F7AA78269F19C62
659C6707578BD0875B9127BF139E20AF0225F0E9AD14138D70FE1832D3A14978
DEB28F72AE42B102DE05D8A10D4A2CE03C499810F3BD3E55BB1FAC26D801AC1E
1A3710A6C110154E14337C7A6C847E475698B2C9F93CEED0F205C2A041865106
7CB1495CA711CB1A4604D2CDBEABB9AB3BCB5916C32496B088C0EED2F879F58F
8D6A7E863BBA8E4F7B9D7C8DAB33C1F477C2EE4BFF487A2F780E2D65B0BBCDEB
3DEEFC0CB1B7AE0DF8097E9D7B9734AB1E30D168D845EDB6AB5935BE6144A992
302B04592AF72EA1B96411CEBD12A3BDC9E44526F0EDA98E89AB88F548AE08B8
3B152A14E2C641574E3F65EC8482566B2F5238C5F4DDE8334B47FF87DB2C2939
5D037137847991BDC403C35678B895CFFC2BD13190C4CAEE503B5D9FA9CE44D6
90D11A2740E7A1BB6464207365E80D080419DB440E640B2A2DE6C55A3F814081
22EB47D44AA322C6412D49C2C8B59DAE80272B01ABBB90EB32C7D9101044BC2A
3F8B466978615620755E2CD63F0EAAC8DAB2C30104DAB529091282746118E7AB
E1A79C0DBCA0250D317BBDDACEBADC5D2D76F0931F3152906EE55C86F3E86CC0
B86A5747385803A46D8EB423E73BFB6E0F58D65FDFFC94F0F79DCF898B0BD9C8
2C359600E5CB896223716EDDDC0150332EAC2F327320E2C7F49E2D1D1FB9181E
43C158B25F3AE55BF168369280E40E84B915BF1832DD973ACD413EF6CEC154F4
B94A2B92C694EEC8A4E8457F3828D81924C23CC8A19200E94F89B7E853E5A986
EBC0F703AB1181555F1447A12CF7A842958C4E3C50D136BE461B397D39BAD5EE
CB62C28D942901641B017D7D6DC0A22CC26DC86008643B27FAC732A2ABD4A2D9
92664A4B651B6F5CC1756A60C78B7CC7ACF51B36EE24B62F8A9B938E18D223F5
36C7B474724CBD7125C9897E2125BE96B5837C7248B2A4C2035397881E832C48
E5CE9E87ABF46F9D612023ECAD9719335A344F73C50D31DF2F2FF83A641FD40B
951E0FE532B84E1D5A068BD206BDB2814A5A2814E74F1A2F51CB388F28312185
01574EC7DB3E220F9B7560809BE49703A6598754D89313150FACA11707DECA06
997B6C3EC7767455F49DD5311ACB2CEFF69F9E7DB350FCD3B3C0A988547CE604
7699B6DA4D7940305C6AE454D9AF8B3A083198E5198957C6F7195F0FE62579B1
D0796E4C46A5A32C804A7A8A5BCF469AE60B827D09E6D93DEC6C9EBE30650665
0D0DAB08034F892DE28C8C5E2CD28F593121F3B5C65CEA009E1C32149F75A7EA
CC05C25D0A1A28BEDE501058A115062D5410E7555C384804F69FA04D5CAEE519
9F2ADC71E7BAE7BBB9FD86AE82EF15D6966F26BB055049AF3B558E0CB85B205F
B4138860FE4A59939D1FD3DD03A06176D0EF84E771F452AA7EF74D3AF8D33475
B55F8A7A335E13D2F19DDFF8FDC8F85BDCAD3FC0C394509199ADABB860B4B66B
05DD61475A06295910980E4CEEF8C8A5256B8E4A4B6EF4025CD3C103BE299201
FD9498EF6D8A29655461DAFD5B04F8356CFBE7B9ECA955D2FBD842EA15D10E97
EF9E6A206B5A7FAD9C467C4CDCFD9D6A4C112FB00BD422AB95851708E7A0E600
54C2F0BF8E85D90A7C58986FF6F446785EAB8E80A479D0E5CD01FD62103C9C4F
A6EB6255CAA7F56C678FEA079C4B24917B3B6E31D8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 30767215 40090613 1000 600 600 (app-2010.dvi)
@start /Fa 137[50 56 40 42 37 3[56 86 25 2[25 3[51 2[56
52 13[61 2[70 3[58 76 1[33 3[64 3[73 14[55 55 55 55 47[{}23
99.6264 /CMSSBX10 rf /Fb 197[25 58[{}1 90.9091 /CMMI10
rf /Fc 166[88 3[88 85 65 86 1[80 91 88 107 73 91 2[88
92 1[80 89 2[88 14[59 59 59 48[{}19 119.552 /CMR12 rf
/Fd 134[48 3[51 35 36 36 1[51 45 51 76 25 48 28 25 51
45 28 40 51 40 51 45 1[25 10[66 51 67 1[62 2[83 1[71
2[68 2[62 69 66 64 68 1[43 1[71 5[45 45 45 45 45 45 45
45 45 25 30 25 2[35 35 40[{}50 90.9091 /CMR10 rf /Fe
140[50 8[34 1[67 6[63 97[{}4 119.552 /CMSSBX10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
userdict/PStoPSxform PStoPSmatrix matrix currentmatrix
 matrix invertmatrix matrix concatmatrix
 matrix invertmatrix put
%%EndSetup
%%Page: (0,1) 1
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
612.000000 0.000000 translate
90 rotate
1.000000 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 468.000000 0 rlineto 0 612.000000 rlineto -468.000000 0 rlineto
 closepath}put initclip
/PStoPSenablepage false def
PStoPSxform concat
showpage
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
612.000000 468.000000 translate
90 rotate
1.000000 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 468.000000 0 rlineto 0 612.000000 rlineto -468.000000 0 rlineto
 closepath}put initclip
PStoPSxform concat
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 0 a
SDict begin [ /Producer (dvips + Distiller) /Title () /Subject () /Creator (LaTeX with hyperref package) /Author () /Keywords () /DOCINFO pdfmark end
 0 0 a 0 TeXcolorgray
-9 -297 a
SDict begin H.S end
 -9 -297 a 0 TeXcolorgray 0 TeXcolorgray -9
-297 a
SDict begin H.R end
 -9 -297 a -9 -297 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 -9 -297 a Black 0 TeXcolorgray
-9 -128 a
SDict begin [ /Page 1 /View [ /Fit ] /PageMode /UseOutlines /DOCVIEW pdfmark end
 -9 -128 a -9 -128 a
SDict begin [ {Catalog} << >> /PUT pdfmark end
 -9 -128 a -9 -128 a
SDict begin H.S end
 -9
-128 a -9 -128 a
SDict begin 13.6 H.A end
 -9 -128 a -9 -128 a
SDict begin [ /View [/XYZ H.V] /Dest (Doc-Start) cvn H.B /DEST pdfmark end
 -9 -128 a 0 TeXcolorgray
92 x Fe(hasjashjaj)p 0 TeXcolorgray -9 77 a
SDict begin H.S end
 -9 77 a -9
77 a
SDict begin 13.6 H.A end
 -9 77 a -9 77 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.1) cvn H.B /DEST pdfmark end
 -9 77 a 0 TeXcolorgray 0 TeXcolorgray
2780 4266 a Fd(1)p 0 TeXcolorgray 0 TeXcolorgray eop
end
PStoPSsaved restore
%%Page: (2,3) 2
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
612.000000 0.000000 translate
90 rotate
1.000000 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 468.000000 0 rlineto 0 612.000000 rlineto -468.000000 0 rlineto
 closepath}put initclip
/PStoPSenablepage false def
PStoPSxform concat
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-128 -297 a
SDict begin H.S end
 -128 -297 a 0 TeXcolorgray 0 TeXcolorgray
-128 -297 a
SDict begin H.R end
 -128 -297 a -128 -297 a
SDict begin [ /View [/XYZ H.V] /Dest (page.2) cvn H.B /DEST pdfmark end
 -128 -297 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 748 -36 a Fc(DO)m(A)39
b(SYUKUR)g(2010)-128 77 y(UMA)-10 b(T)39 b(ALLAH)g(KEUSKUP)-10
b(AN)37 b(A)m(GUNG)h(SEMARANG)-128 190 y Fd(Allah)31
b(Bapa)h(Maha)f(P)m(em)m(urah,)-128 302 y(k)-5 b(ami)31
b(b)s(ersyukur)d(k)m(epada-Mu)-128 415 y(sebab)i(Engk)-5
b(au)30 b(senatiasa)i(mem)m(bim)m(bing)f(k)-5 b(ami,)-128
528 y(seluruh)29 b(umat-Mu)i(di)f(Keuskupan)f(Agung)h(Semarang,)-128
641 y(un)m(tuk)g(b)s(ersahabat)g(dengan-Mu,)-128 754
y(mengangk)-5 b(at)32 b(martabat)f(pribadi)f(man)m(usia,)-128
867 y(dan)g(melestarik)-5 b(an)32 b(k)m(eutuhan)e(ciptaan.)-128
1093 y(T)-8 b(erlebih)31 b(k)-5 b(ami)30 b(b)s(ersyukur)e(k)m(epada-Mu)
-128 1206 y(atas)k(habitus)e(baru)f(dalam)i(paguyuban-paguyuban)-128
1319 y(di)g(tengah)f(umat-Mu,)-128 1432 y(y)m(ang)i(men)m(um)m(buhk)m
(em)m(bangk)-5 b(an)29 b(semangat)j(b)s(erbagi.)-128
1545 y(Kami)f(juga)f(b)s(ersyukur)e(atas)k(k)m(eluarga-k)m(eluarga)-128
1657 y(y)m(ang)g(menjadi)e(basis)g(hidup)e(b)s(eriman,)-128
1770 y(atas)k(anak-anak,)g(rema)5 b(ja,)31 b(dan)e(k)-5
b(aum)30 b(m)m(uda)-128 1883 y(y)m(ang)i(semakin)e(terlibat)i(dalam)e
(p)s(engem)m(bangan)h(umat,)-128 1996 y(dan)f(segala)i(upa)m(y)m(a)g(p)
s(em)m(b)s(erda)m(y)m(aan)e(saudara-saudari)g(k)-5 b(ami)-128
2109 y(y)m(ang)32 b(k)m(ecil,)g(lemah,)f(miskin,)f(tersingkir,)h(dan)f
(difab)s(el.)-128 2335 y(Bersama)i(Bunda)d(Maria,)-128
2448 y(ham)m(ba-Mu)i(dan)f(bunda)f(k)-5 b(ami,)-128 2561
y(k)g(ami)31 b(mohon,)-128 2674 y(utuslah)f(Roh)g(Kudus-Mu)-128
2787 y(un)m(tuk)g(melanjutk)-5 b(an)30 b(p)s(ek)m(erjaan)h(baik)-128
2899 y(y)m(ang)h(telah)f(Engk)-5 b(au)30 b(m)m(ulai)h(di)f(tengah)h(k)
-5 b(ami)-128 3012 y(agar)32 b(k)-5 b(ami)30 b(dapat)h(menjadi)f(saksi)
h(buda)m(y)m(a)f(k)-5 b(asih)31 b(dan)e(k)m(eb)s(enaran-Mu)-128
3125 y(bagi)i(masy)m(arak)-5 b(at)32 b(dan)e(lingkungan)g(hidup)f(k)-5
b(ami.)-128 3351 y(Doa)32 b(syukur)d(dan)h(p)s(ermohonan)f(ini)-128
3464 y(k)-5 b(ami)31 b(h)m(unjukk)-5 b(an)29 b(k)m(epada-Mu)-128
3577 y(dengan)i(p)s(engan)m(traan)f(Kristus,)g(T)-8 b(uhan)29
b(k)-5 b(ami.)41 b(Amin.)p 0 TeXcolorgray 0 TeXcolorgray
-128 4266 a(2)p 0 TeXcolorgray 0 TeXcolorgray eop end
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
612.000000 468.000000 translate
90 rotate
1.000000 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 468.000000 0 rlineto 0 612.000000 rlineto -468.000000 0 rlineto
 closepath}put initclip
PStoPSxform concat
TeXDict begin 3 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-9 -297 a
SDict begin H.S end
 -9 -297 a 0 TeXcolorgray 0 TeXcolorgray -9
-297 a
SDict begin H.R end
 -9 -297 a -9 -297 a
SDict begin [ /View [/XYZ H.V] /Dest (page.3) cvn H.B /DEST pdfmark end
 -9 -297 a 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 1125 -36 a Fd(Puasa)31 b(Katolik)-9
176 y(1=C)f(4/4)770 b(D.)31 b(Bam)m(bang)h(Sutrisno,)d(Pr.)p
40 218 182 4 v 40 286 a(5)92 b(5)p 301 320 4 113 v 160
w(3)p 519 218 162 4 v 92 w Fb(:)f Fd(5)p 771 218 182
4 v 91 w(6)h(5)p 1044 218 V 91 w(6)f(5)p 1335 320 4 113
v 222 w(3)g Fb(:)g(:)40 399 y Fd(Me-n)m(u-ju)213 b(p)s(e-ra-y)m(a-)31
b(an)61 b(P)m(as)31 b(-)f(k)-5 b(a)40 512 y(P)m(er-ta-ma)184
b(memp)s(erban)m(y)m(ak)30 b(do)h(-)f(a)p 301 659 V 40
669 182 4 v 40 738 a(5)92 b(5)p 301 772 4 113 v 160 w(3)p
519 669 162 4 v 92 w Fb(:)f Fd(5)p 771 669 182 4 v 91
w(6)h(5)p 1044 669 V 91 w(4)f(3)p 1335 772 4 113 v 222
w(2)g Fb(:)g Fd(0)40 851 y(Pu-a)31 b(-)61 b(sa)152 b(empat)30
b(pu-luh)f(ha)61 b(-)g(ri)40 964 y(Ke-du)30 b(-)h(a)182
b(memp)s(erdalam)30 b(i)61 b(-)f(man)p 301 1111 V 40
1121 182 4 v 40 1190 a(2)92 b(3)p 301 1224 4 113 v 160
w(4)p 519 1121 162 4 v 92 w Fb(:)f Fd(4)p 771 1121 182
4 v 91 w(6)h(6)p 1044 1121 V 91 w(5)f(4)p 1335 1224 4
113 v 222 w(3)g Fb(:)g(:)40 1303 y Fd(Ka-re)31 b(-)g(na)151
b(li-bur)91 b(ha-ri)30 b(Ming-)h(gu)40 1415 y(Ke-ti)h(-)e(ga)153
b(kurang)30 b(mak)-5 b(an)30 b(mi)g(-)h(n)m(um)p 301
1562 V 40 1569 182 4 v 50 1640 a(_)40 1659 y(1)92 b(7)p
301 1693 4 131 v 160 w(6)p 519 1590 162 4 v 92 w Fb(:)f
Fd(6)p 771 1590 182 4 v 91 w(7)h(7)p 1044 1590 V 91 w(6)f(7)p
1335 1693 4 131 v 1457 1640 a(_)1447 1659 y(1)g Fb(:)g
Fd(0)40 1772 y(Pu-a)31 b(-)f(sa)183 b(m)m(u)60 b(lai)31
b(ha-ri)61 b(Ra)31 b(-)f(bu.)40 1885 y(Keem)h(pat)g(men)m(yum)m(bang)f
(y)m(ang)h(pa-pa.)p 0 TeXcolorgray -9 2129 a Fa(Lemba)m(r)36
b(isian/Evaluasi)j(P)m(ertemuan)e(I)g(APP)f(KAS)h(2010)p
0 TeXcolorgray -9 2213 a
SDict begin H.S end
 -9 2213 a -9 2213 a
SDict begin 13.6 H.A end
 -9 2213
a -9 2213 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.2) cvn H.B /DEST pdfmark end
 -9 2213 a -9 2175 a
SDict begin H.S end
 -9 2175 a -9 2175 a
SDict begin 13.6 H.A end
 -9
2175 a -9 2175 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.1) cvn H.B /DEST pdfmark end
 -9 2175 a 0 TeXcolorgray 102 2301 a
Fd(1.)p 0 TeXcolorgray 46 w(Apa)22 b(y)m(ang)h(paling)g(mengesan/disuk)
-5 b(ai/disyukuri/y)m(ang)23 b(sudah)e(baik)h(da-)218
2413 y(ri)32 b(k)m(egiatan)j(Aksi)e(Puasa)g(selama)h(ini)f(\(pribadi,)g
(k)m(eluarga,)i(lingkungan,)218 2526 y(paroki,)c(dst\)?)-9
2586 y
SDict begin H.S end
 -9 2586 a -9 2586 a
SDict begin 13.6 H.A end
 -9 2586 a -9 2586 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.2) cvn H.B /DEST pdfmark end
 -9 2586
a 0 TeXcolorgray 102 2714 a Fd(2.)p 0 TeXcolorgray 46
w(Hal-hal)23 b(pa)e(y)m(ang)h(b)s(elum)e(dimengerti)i(atau)g(baru)f(p)s
(ertama)g(k)-5 b(ali)23 b(didengar)218 2827 y(ten)m(tang)32
b(Aksi)e(Puasa)h(P)m(em)m(bangunan?)-9 2882 y
SDict begin H.S end
 -9 2882
a -9 2882 a
SDict begin 13.6 H.A end
 -9 2882 a -9 2882 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.3) cvn H.B /DEST pdfmark end
 -9 2882 a 0 TeXcolorgray
102 3015 a Fd(3.)p 0 TeXcolorgray 46 w(Apak)-5 b(ah)31
b(ada)g(usul-usul)f(un)m(tuk)g(meningk)-5 b(atk)g(an)32
b(k)m(eterlibatan)h(umat)e(da-)218 3127 y(lam)36 b(k)m(egiatan)h(APP)e
(\(p)s(endalaman)g(tema)i(APP)-8 b(,)36 b(Aksi)f(n)m(y)m(ata,)k(dan)34
b(p)s(e-)218 3240 y(ngumpulan)29 b(derma)h(APP\)?)-9
3300 y
SDict begin H.S end
 -9 3300 a -9 3300 a
SDict begin 13.6 H.A end
 -9 3300 a -9 3300 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.4) cvn H.B /DEST pdfmark end
 -9 3300
a 0 TeXcolorgray 102 3428 a Fd(4.)p 0 TeXcolorgray 46
w(Apak)-5 b(ah)32 b(sudah)f(ada)h(panitia)h(APP)f(di)g(tingk)-5
b(at)33 b(P)-8 b(Aroki?)47 b(Sejauh)31 b(mana)218 3541
y(dik)m(etah)m(ui)g(ten)m(tang)h(p)s(eran)d(panitia)i(APP)g(P)m(aroki?)
p 0 TeXcolorgray 0 TeXcolorgray 2780 4266 a(3)p 0 TeXcolorgray
0 TeXcolorgray eop end
PStoPSsaved restore
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
