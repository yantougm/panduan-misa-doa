%!PS-Adobe-2.0
%%Creator: dvips(k) 5.98 Copyright 2009 Radical Eye Software
%%Title: pesta-nama-2010.dvi
%%CreationDate: Fri Jun 25 13:44:18 2010
%%Pages: 6 0
%%PageOrder: Ascend
%%DocumentFonts: Palatino-BoldItalic CMR10 CMSSBX10 CMBXTI10 CMTI10
%%+ CMSY10
%%EndComments
%%BeginProcSet: PStoPS 1 15
userdict begin
[/showpage/erasepage/copypage]{dup where{pop dup load
 type/operatortype eq{ /PStoPSenablepage cvx 1 index load 1 array astore cvx {} bind /ifelse cvx 4 array astore cvx def}{pop}ifelse}{pop}ifelse}forall /PStoPSenablepage true def
[/letter/legal/executivepage/a4/a4small/b5/com10envelope
 /monarchenvelope/c5envelope/dlenvelope/lettersmall/note
 /folio/quarto/a5]{dup where{dup wcheck{exch{}put}
 {pop{}def}ifelse}{pop}ifelse}forall
/setpagedevice {pop}bind 1 index where{dup wcheck{3 1 roll put}
 {pop def}ifelse}{def}ifelse
/PStoPSmatrix matrix currentmatrix def
/PStoPSxform matrix def/PStoPSclip{clippath}def
/defaultmatrix{PStoPSmatrix exch PStoPSxform exch concatmatrix}bind def
/initmatrix{matrix defaultmatrix setmatrix}bind def
/initclip[{matrix currentmatrix PStoPSmatrix setmatrix
 [{currentpoint}stopped{$error/newerror false put{newpath}}
 {/newpath cvx 3 1 roll/moveto cvx 4 array astore cvx}ifelse]
 {[/newpath cvx{/moveto cvx}{/lineto cvx}
 {/curveto cvx}{/closepath cvx}pathforall]cvx exch pop}
 stopped{$error/errorname get/invalidaccess eq{cleartomark
 $error/newerror false put cvx exec}{stop}ifelse}if}bind aload pop
 /initclip dup load dup type dup/operatortype eq{pop exch pop}
 {dup/arraytype eq exch/packedarraytype eq or
  {dup xcheck{exch pop aload pop}{pop cvx}ifelse}
  {pop cvx}ifelse}ifelse
 {newpath PStoPSclip clip newpath exec setmatrix} bind aload pop]cvx def
/initgraphics{initmatrix newpath initclip 1 setlinewidth
 0 setlinecap 0 setlinejoin []0 setdash 0 setgray
 10 setmiterlimit}bind def
end
%%EndProcSet
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o pesta-nama-2010.ps pesta-nama-2010.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2010.06.25:1344
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 90 2009-01-30 10:58:51Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.06, 2009/01/30
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionaray
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
/Rand { rand 4294967295 div } def		% a real random number
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/PenroseFill {%	 on stack: scaling factor
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
  pop pop 
} def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
%/NArray { 
%   aload length 2 div dup dup cvi eq not { exch pop } if /n exch
%   cvi def 
%} def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  showpoints { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED /c ED /n ED 
  cvi dup 1 lt { pop 1 } if 
  /s ED 
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if
  /dx ED dy div round dy mul 
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput { 
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
} def
%
/BeginOL { 
  dup (all) eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 26 2008-06-14 11:50:02Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.01, 2008/01/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.12
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower IsEndingFactor { pop exit } if} loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
end

% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 26 2008-06-14 11:50:02Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2008/04/18
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def

end
/PSTricksDotFont exch definefont pop

%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 90 2009-01-30 10:58:51Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.02, 2009/01/30.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
end
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  /next ED 			% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge { 
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  GetEdgeA GetEdgeB GetArmA GetArmB mark 
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  GetEdgeA GetArmA 
  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
  GetEdgeB 
  mark 
  xB1 yB1 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def
 
@fedspecial end
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/UniqueID 5096651 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 121 /dagger put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AE6ADA0192657E8078A1D27420093FEBA111333314658021B90DA4E7A8D4B829
F1795501020D5FF0AD25584C1D40539DE74A31B0CA623CA9DCE374762E175D0A
65D0D0B45F164D2441F7CBB3F86FE50191DF171E0ACFEA45E9CAB2BE910515E5
B5FF9D2A28AF222DB3A1E1EBC8C3BD5CC0AAB87006F4B7FB9F10C6BEFA6F261A
5B25FD44700ACA85FAF43A89C1380403CEB3BCE247E57D562848BAD491C7015F
0EF6865B3F398C720EDC7D66E3532C6389FFC941B250373BDD6D8F80FE59F3B3
7CA5D9FBEF891874A1AD09F68F3F761C6E4B96FD501BC43CF046FA932047C601
255A672A4704DA6CE54BE541C186C6B9CAB339B7285310E08EEF4120654BB3E5
4531F86E9E162D186C96F0BDF652B10FB882BBDB3ACEFC0E364920F1E2760475
0C4A97593D36244BD35727D42B5EA2E94DEAABDC44903D33F3743CFAE6E641FD
EBFE94BFDA686EC3D18D0DF7EE3F9EC6C4EDC5AD9B11D011D83B82BBCDC481A4
3CE3B7A026DEFF7FFCC16460
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.0: CMTI10 003.002
%%Title: CMTI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI10 known{/CMTI10 findfont dup/UniqueID known{dup
/UniqueID get 5000828 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI10 def
/FontBBox {-35 -250 1124 750 }readonly def
/UniqueID 5000828 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI10.) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 72 /H put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 80 /P put
dup 83 /S put
dup 97 /a put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C5FD29DA32D34C95E
2AB2ADB3F60EEB0600C8ADE15A2380DE10AC5AAD585FBD13097B1A7E8E210D4A
EE96785449E07F0C8EBC2EC5EFBFD0897DFDC15E5BFAC9584D8DE95C5AB288CD
8AD8B9BEF0B8E5F887B3B0B331542FC8184DCCB753DB6ACEEF98B85756B988DF
CAF1AE0DBE7D37D5F44A2E760AAE3A5197C27B15E32275A64946C3E4D0476FD2
7FDE148C788DD2106F7C825E270588AC05B57E625AB17BDD02306F9E5FC851DC
32A5A6EDC43C770A71419B2C0C8074EF3F222C8A2097CD81A91F333A521B3A09
482A4FE1CB231CE344AD126AA284C3280AAC3AD162CF0EE241BFB4C8F20502FF
118507F5D1B5FD898571015E73E5CF2281085072E00D401F6F59761EEC3E8381
1F26F75DB66C504AB6BABA87D121B1E7040A07AA2FE01F80DBC246CC03C4B2DC
C2A715980C52B7F96BC1A78FCC7F4F52EEED5F705E08FC1E5BBFCAD121FA88AA
8EBE58172C162AF409DBB0728F14923ED02A65EA24E5D52B6AD07777455A70A4
61833D3789C719BA92E901232599767E423D5AD9C807670BE0E7B5CFF8256A20
C7BF7214FFE0342809570F5966A2C43E784F35015D9040BA34FEAB6A6F089504
3A40A9E9D711A2721D3F4998371430FB3C94BFC619559B97D49627BB630F4B70
9D0A8FE4E916235335C3962F3CFDB04C4A3CF714DB5E260F4E66FFF2F27CEF2A
D4AA26BBCAED23B8BDC98F8F453BA27AD7758537561E766B82DC3032E92A9EB0
125D98A22C5466AF069BF72A9BFA052A8628FEC6A6AD0B711DFFEDE3AA2D7CE8
34EA487038EF50F953B8B4471CBA6FC3C53877EC1BC94582B1123EDF44B4056A
30F49394BDE22CDAD7F01951C7013D26979277D18EFA594E8F4F2B5E615187D9
39E842EC28461B9ABA52020A127D2CB9002A673A435B13C10602EEFDBBA6BD49
9DDEAB9E68D655443A5C2492BA061C1391A51592BA8C353A6F6A0708E8860184
2B5D031D2CAB87D618E9F6F7A0BF3F66B3FD5A25BB91F7F1F5F99CFF56EFF4FF
0A35C55658001ED2E97B26C869292F6274D433A5443179DBB8EE987196306348
3F9E87C6422AFFDD30080C9AC4EE7FE5E2DCBFEE4974331F4AAE479FD8806D4D
9C2B85FC69EB0453AD827A1E767E5C484BDFBF5C8D6E2B3C96298B390F22D757
802643A79D5E29CF3AEDF0E12CFBECA4663444FC87F2027571DBA9ECF688BF28
FF0DDB3AEDBA0FB28447CB4B5D5205F40C1E7A525FD7373392EEFFD910AC82D0
98E71660A1B3227C4A2592F3E853CA4CDF64DF19A52582E167234F4036FAAAB9
5446BE102DE2BF43E82F0112C2A20F15A3F92C6571AC761665A905362C4F8BDF
AC8705519C99862CD9C0D75113C4AB5FBB83C880E46B82715B5628890D9103AD
A2329638B95D93C4DECDC5E6C588C9D5183EE6FC28FAF9825F02DCA567306D93
5440987A81B51EE7291107A08F201C609FEF91A8F0587E8B13D4BAF74A5A6815
DE9E4441F46AF8E1DDDFA2D611C889614040B144A5EC064DEE4638C04EAB2E37
4CA8F50FB8C4D65BB296DCCCD39F1F554CFBED96670A91F515CA10EF896874BC
8EF48C6447752C70FF5A06F928DB55586354076773BFF7E94C4C3A7A1C1F421B
A9B4E3936EC26E0C19BBBFC90F021E877F54B62108F6DD1C7F6D5B8E64FC9362
E173F01BF2904B7E5A08B3543611562C2714099DE7D4FA330DB148B560A9601F
42A84452811CE213DCE782A0D7809CFD954D6BC1EBF2BA4D1B18F50FA8174C96
3E0120E266AD5DDB40B3F6798AC28CDC5C3C4BC34583528F5B5DC8A222B80B59
A3A93DC715D061EC6915E6E6E21A25425C25E8747C60F170D61047108826F96F
7830E220C108B441B6EA3198E33C49BAD8D43086E49F5A2BC7958A1A8CD011C4
49045193394696EC3DDD0BE084E8F2E9F0B9496F035C0DEC1CE11409DF566428
D50043CFF5CDD1092F6E0807E660B68163BCA738E8D98FC6EE3F713164CD204C
0BA84FFF4F33F47BC31750B448603D7ADB9AE92FA91AEBBBEC0DCD66980E6955
CEB425ED07115B24E40F53B29B9D840842EAC691B4F591F866DF27556474B485
1C6F53DD72499847109B16C7093984A6B8487D4F3870DD517945CD90E648C1BB
8A6861E540FCF9D75B984B5009B5CC760CBE297042C240DD624111670B703388
6FE6FC0E89C6B4C88F51DFF3913D0CC1FB4770C8CBEADD4B86393605C0B6C468
83CA5594754411B6FC331EF56D7CD6D247FAE42E966583C29239A8F862348D29
60B177984B6B957E733DB4D275015691D91443BBB13C2DA96097A29733CDB284
42F89C85A7A743338C9DD3BBC4EE53F695E5163E6E1ABE5791ABF100B198B9B2
1C21E2FA2FB4AFE7F9BB2D381260CDD3A2CC05BF513AA1E80ED69FA27BC5ED5A
21445BF00BC2F997B356D94AF13736C6D3B0613EB6F4CD96A685FEB672661DCA
206105EDC3CA07900676EB2FAB37F48D2E8207BDE1463894DA3C5B1488AC1EE9
D39DAF691648048F5D7A384B8927F8DA2BE3602669F71D80686E427F395134E7
7ADCC611BA91AD4B7A0237213C60CF2C905359C90795230344FC3C50A22BD44B
55B2044792509F50F5C21F53D9F9E9F063ADBED3AB99E2613B23334FE8DF70B4
6120F2EDF69F50BE793EE145B9FF9C73179DE640FC2ACEB5C6617F918CEEB762
4CD81E665B2E544864D13230B058717B207D3CC5D6647D5343DB4D0356082392
871EFFA896631A7E0D6477942B632074A9A4EF7B09D4701B1639BAAB4E03A40E
9B54A7A4F845CD63F88831EBFA4FB847847CB98F3455CB5957F2E0A0F5623645
DBB5C5564C7F8B117D6E27E65C0F3EA81AE67B4AE4B201E7C4FB0A8364FE53F5
41A7CE8F834C2C4B322809B353A5E63BBA7BF3B7DC1A85EA700BD287C2BD3FC8
2832B0BB4695FC937FF5EF06FCD87DCE6DE793C2B1EE10E6450352C17726155F
220D550B1759E15AB2C1D5968E52C8080CD280E99D3CCC0E80C2EF8BBFD96001
A226FEED7311EFB4B67F424B557A877379A15BCA54780F0CD2CCA00400B9B39D
981C6B552AFD2506D1B23618FA9AE6D8143CD7198A8482CB416CCE62B992347F
337D505A4078713BBD91E5535BD58EF0351EBDCD749CC24D4AD39F8CECD7D6C8
139756680A4C03A58B3374CEC658D30160AE4863A3938A891BB59CBE02BB451B
1BA4B2B6E68AB61DEB85F95E3C909B8B66E220B9F18280161C279F10F7093CDC
100A53D542F071CC0A5AF834DC1D18738F5DD62A5573E884E1FFD22BD810828A
1EA47F8218C15A2E97CBC609927DA3CC2B802EA4A0D7EB57627C135E3B065905
F97597D818A2C5CC6F328AD25AD11FA50F1E4FE637980B7474D6F85A521892FB
72989AABEBE02A2D0EFE88A6F67AC29F5D8DDFEDAAF465C439983C6B84389FF7
A6434462BEB7B07DBE4BBA61ACD4A60C55B5C0AAE527DE381DFECA2E6BAFDC8D
310364ECB42CAFF72BA93C067B2F02D1CA7C34AE7CDC46787A0E234C8BE8A928
7A6F3DDE0338FAD532A9886E8E3525B85DD39364AB03EC4C0DD25DC179CC1989
1BE232E387E857C78332D834679195E10F1E7B87B7966DA3B2238F53D1E13FE2
8F55ED6A92A750C7250C9B91E29796621E7E9520373214D7DA81B2875A986D33
80382AFF6DE1F829F048E57664D9C4ACE91E4684A51023943A4964AB5657D610
3A5405EFD4CFD1EBA684243E15093C9667797BB47617B66054EE02C41FFEC45C
C1BAE8AD56B00D323FCB1D2744F061FA16E161988741A319B1564E04BA210996
4F9F02A3268CABE450D166A763F5284954564A1C86B76544C5F5ACDFE0D758DB
865A1CFCF9FE8CD5F9C3B2998C56468FD52DF8EE60C6935A3D221EAEC7714E3B
301371C7DDA0B03A2416238F2B47BAD3A2C5021C886DF51C695AF9C87A864B48
3BB3FE0B355EED5454B59B25A0D8A1B8CBD356C24F64D9B55E16C30C011365C9
1E0380753BA3EDC0868788D5F50B9353D0227BCEE1BE36998B2622C0759BD66B
E4444250589F9CEDE766D8B940770CB6B89503E925B35C00CBEC2873D2DC4A29
0823FB7A3717B69A7DEDBAAECC067949932728E89BEECAA91DE3AF9BF070B9C0
30EEFA8C0A55C8388CAA2F0515915C98E67FA095BB98967D14B0DCAFA9622E4E
2E0EBFC768D80585ACDF28D8A5C2B6EE2FE7AAF62FFB90F569F84A0903996DF0
C1D5723366C436E4088F3E2BB9B47F9789052A71CF5C49908CDC1DDA194BFB89
14D7E3D7D4D72A150FD6FFD8303E9DE5A97A71B808B8BDF2AE466F31BF5D7A4A
44F81230BBE2B456A221E2F72A8B59F8FEA8D31F8A005A5BD93B9F49CFDC3DCC
CE2B67090460F632271C7157BDC2F05BC2749FD562FC28682A616A52D1B67654
DF78B7843A9EC26A7DE2EB168F874904C2915B97534B2D4D9F74A9573A771D34
9F7BC855E8F794621BF6AD471BCC347E2DF5F620F5C209E33A4CBF1EA85AEA87
4492A77342DD33EF615FF34037D660B713C908786D9022051B825226545827A3
2AD1B05D654DB6E6D261B4E8AF0933AD1F0FCFC7201E1A7C1B4199F160C38676
21ABA2DDF1CEB655B3EC3226E0B122976EEA998F7A5241F062E54AD1DFD6ED26
47C99A439E0AE95415059179867CDD3F0FF751F3141309F40E00A6C7C28433E4
F649BCD5DAA64177580E05C495EE7BCBCC5FBF104DAF360CC2711386655B26F9
D349D887EEB32ADE595241560FD5924A1745A22E6A01DB9C285EF14596EBFF0F
03F36EB2E0A7C3864F819EF7B0855121292D49482F046A55CD7271FE03F02EA5
886864D9D8EC22A68C23089EAEFFF03DED6484D8C341861EF8B6FD3C5BDF5AC8
352DA4E13A1E30D0CB71E090E9CFB9AB2CAFD0CA7C34AE7D8E3B2EB4666834BD
9CCD1AC2108348AFEF6071796F4BB2FFA4A67ED917E76A109FA2DC2A30D744A0
9AE653A748C1D18FB52595D84E87F1C1FB6B2F32667FE203262C66627AEFFED3
92B23861E5EB238BB4EDCE09DAE1C65BAFC198CDD1B45D42CDF93E16BB82D35F
821E9E49067E966AFAB2AB52928F8DD6359984071FC37AA652FB834A09E5BD93
3AFAE161140E74C6531E413E8FBBFC42BFE8A464B71EB1D8CAA93B33D7BCC3B0
47C7EEFCD3E9FCF26FF9441DD9BDE68D77AD7251C06BBB9A2103049E8827CAF0
F26BEF33F656A690235DEEC623CC519AFA82DE2AE16FB99F780FD7D8290DA40B
9B604AEF36B529FD184239E7D50561A07428D28E51B55546590A1AEAD4B7F2B1
AB8C5B9022C1FA03E33F8F409B24911AB8BFCF6EF4A8E415263C789F89063E71
C0910DC20347469380B7FC1EEB87D4CED7F4A361E58B61C91AFCABA35C03F978
B9FB5257C31657EE48504C355CE893FE3C553274C641DBC4004F5D5B879CC5ED
D3F21F867F6DF054127067DE86189F0B59A1B90FDABCDFEE61423609D888EEFD
F4A1367129962110C651D9481CEDDB8C5C2576A59AED64E95F7ED042AEAE2F7E
81AC0C408E593DC30DCAC334EDE9EE27D932B98F040DDCD195D6155607DD2038
970EB78221A94C52BD4F0EAC65F1FC10E5DAA93C17266F351669CAE56F42B68C
6D01E1EA03AE554D63CE76D800FDD9CFD89F80A241EAEFF7EDFA41794EA25CE7
97BD5028464D2CD45B53834B4AEF8BF0B9E7C6ECDEACEC887E8790A47A93F668
A9095E5FA1116A122C0E5B74E2226C654D3187C6CFD8807917820423DA3EC1DE
AA020EEEF2280C44A15209EE2F3FC1776875308CEAD38571E7BF889F287E4594
971A83605E0B4169D4A23EE790515223DF8724054EDAD905F57918FC0BC64F96
514B4BF7DC9BA79E763C22C977FB6146B10D26FEA1BAA7BAF21312F78D1625A7
8E242D743471DB5821408AB786E4A7EA9D35E30E85533C617689F95758FB2C7C
392E759C299DCCE36689686DE0C4DCE32649493650BA194A6208C5EAB670B170
3F2C70BF0EF0E3BE2FB0A79224FF4ECECD6BB3388C6D06867A0E5E3DB93C1B2F
464C23E44D3132E7D4086E3B59B1D13F49EB4772DEDF8EDC4F603217233FB7BE
C13C28648E9AA51D53F11FB896839F97AEDD8834BCA53CB0021AE91FD8E95E2E
F8A094093AF556B9639F508A401542B06821FF9DE1A745FE9AC5CACD5E8E1053
911442FC15CA5333751ABFE2C617D38FA1DC332BFEF44AE569DC631C93EC54D6
261583A695F5A392867A57F59B741EFCD2DCFECBC55D1EA5F2317601C9DFE9ED
D1EA466210FFA905A8F85BD58B98991BEA58DFD1CDED5C9B086D42CCE632DADA
147941917B879139E016B0DDEB8446BA017FC8EE5A354533D667B0835F5D027D
C2D580C16B80B3D05CC92C0465CAE077729F0A15B2DAFC89DCD349B3F81D0516
C65526EB5C10E45A8A85D716EE35FB9AB201FD7C89ADE5AD925A174169DA20FB
61E96C73A143DF964C20589EF24A0FCFE6195317F2FA0D2249C0D8E649C3D9AD
FF13332EA2E4C9CD36D8443EC8F027B61CEF92C6A6B72DD4ACBACC16E429A9A3
F5F29C1631360E32F8C1C93ACB22F810B86D2969A7480F486F62F8488BEEC74C
2C1AF13BB92BC578E8CD30BEA6BC8CB68ED730F54CED0167605FA76AD7B7E88C
7AE7688E598F91C471BD65A542E96D64B1EAF19FB4F1234308C48C2DC86E2193
11ABDB4C6189C6F201627C693691A86DD07FF55C30FDB3F72381E09C6080FD7C
9182762E5001E30F52A216E0B71E4D2D4E2F3B20F95DF3A11FDB2D2B5B5FAA66
C46226D5E0C77066349770514E5675550FAC9394FB27CD2C2F974F1FD58C04A3
1EF53A8AB3B2202CCA1CEFA66228E1480A0709436C44BD3319C40CF888AE4692
5DBBB52B15CF3A518F627F672135A24D5DB9B2EBEF04C860AECF231EBB5A3BF5
6DCCD5E72FE4B6DD29E896691868A7DE4120AD06AC573F5608B8449B38E71CA0
EB5CDA3F942482EA7973661170F81DC88D54DD5B92323F46F833DFA757107E9E
F62A47CC50FAA1B68ED535C3E0E1073532A05ED339C8D70B3B9864808ABACD23
AA95E9FDA43D54C66A675FA074E0A5B8777D3C07850A09087F36852B5351F35D
8BC4DDFCA35CF29CD5E3DE118A741FAC4DED36847F2E2C6CFE08669301722D94
376F540982958074E7F1383C409652F6C99DA39FE90B38221E75BC1ECB93ABF6
B00F410A0C5651DB418566AB350FDA1789AFD88286AF3BCB42B98386F7BC144B
02DEB8940D20A6B3062F0C4244EABC50923390064F1D027A8BACC3DE45156E56
4A942D1B87F1C4A76B0D4D6801AE792CCAE3009BF25368B31B6AD5476FBD3BFF
9759EF463EF5E78E10B7BF64005B2ABE0E8813950A08A1808587A98E0021D0DD
751AD515E8278F1A0759E85D8A084490BBB0F8206484AA36388B1013643D3198
3509078847BDAE08E76FA5BF3E3A73C323CE093DCC148E3C02C2DE1E26C94D5A
40EC8308ECB02FF7DD04EC1005A2A0DC74D4E587F10A3EF349E828F69FD38962
2F0C74D5DAB3ED6CC9F97008ACCE74C086A503948DEF1AAF58FC8BEC703CD360
D32098A56AC776B1BD08442052A2A4EF6C8798F7CDC102AF1A2009657254762A
0793F79A39DCD6ADBAA5EC84A7ED6018BBE727E5D477893D84F157074B24C13E
8D4881C7DF8ADC13EBA0D89745EF93B7616EC5355600BB0D2B630AABA3CF2946
AFFD0B2B724EF0F28393F3C731AC72A38427511974305A4D86CCFCD4F291E0BB
1A9D796DCA451DCC4F5A374F838049EB984BAB5F5CEEE85CAC6CC6D3429CB2E2
86375D6713CC49A2775DFFD6711A61D97351C40339BBD717BA15835815C8E29D
6BD5706D9F0A6B105DCA9D58467BAFD6F42DEA149D44C84A2FFD5AF562683076
4344CCF1B9E4FA5283CBE6AB5E0A537D6B45F1FABF411AF961F6E6BED4A1655E
DC31C235D20B206326C7E3DA0B2F5191C2C721CA94A3F62DF5D6AED3AD275F04
A5355BB9C6E760AED8929A4EED593836DC944115C3734157442A161BD5A9818A
95AFBD19A4965820046666AD30B65C11C377B8756144A925E5C17E27CE4388D7
15C1F56885B36AB435E9C8813CB052EFFA1AA603DB7C65046CFDE4172E5134BB
F95DE7945F482C2AD3A949D41A94C28119DDC415526A257154FE145DFD6FA4ED
3D2B15998D02304F1F8BA19D607C5179BCBF3B1FE46D4BF402D864759BE81002
EDE3E49CB9193F4A9F02506DAA39886CAC4D93D6E6823E197EEC09D1BD84D00D
951D4CF9252A4443EECCAF1E56E5FBD7C545BC4D21C7EADB5AD309E2D327457D
09F34BAF7397A07F5CB058FDFBACABB8859781A88518AD8F61BFBC34A074CB3B
C8C1754662B5D3FC0462AC496092E6BBE6D10EF49349387EA298200DE19882B5
A306DE901D7508E17C81A5199A57BA3B720C1693D02E3A547D0ADCC055264CF3
8070833FE36F3E9E75ED639DFDE977B6BE8BB8B73909AA1117B78A5506192B15
0CAF3916DE4271273CF39110B40FEEF6B961452F14E08BA8682674E24838BF99
B06FA68C91E1797DB85D919052E2B9229A62EF76D4422E27F4227102CF7D5683
F89FCDF14E112CA917B5EA3E96F99B310834A0C6D1DD0E52E08CFBF052D1DB42
2D245201FBD6463F31D0E7F52B464FE65352F56E78D58BF1E0922FBDD3D7BEC5
45AB58388D6060D8095361657973BEE789B157868AECE7FE647F18E3C3615CA7
24A5DE4FF8D33B3D5F1AB05BEE28D7C7B2A151CB492A289E74873A4547F8501B
0613715081F66780BDF6C0033E6FB2A47352A306C2A477CBD1EF75B55DEABAB8
982D6AE5E796ADCE88A7DAF4C3871902506AFC059D24FA744AE8ED107618EED2
6B3A0F90F6D28862998F74B32F2DC260B3347F7D862EADBBC271344EE3309283
C16637C89647853487B44A5765332A0498E8B89451F218B6DC58AED2F84B18F2
2D5FEB8538B736238140E6998BBA0706D024C4B08590598FD0D72F5E8A10EE76
F246AE8375E73C862E030F2F5353E1FA4BADE4B196DE9E61C256F4BF37AB40F2
DF4E6AD3AA2AE5101210DCC72947BD7E007974749727B0380831B0C3FB020D7D
CA0782E78357F8A8690C5E6F7F3C437BA65A6C53A80ABAF100054DAC4D4A57F4
362046B50F9AC28FE77BAD910B4226229646AC703167B2CB7DA20C3481A5B1C3
C65F18C7FD65F73EC51116244DBB1BC5AE83CFE9CAA763CD150D472A625CA467
EC7EF8F34D00DF889396E7593C9F37F0210FB1CE0908DE561B224DE635CEEF58
C3CD492EE4D97077D3140B4AA22256DAACF1B9CFE374403C5DCEF99CA59AEEE2
D5BB9B10B58BE90DE3CC9E7ADB6A6C5E6A486AA65076EBF7BB068C9ACFE42A92
5AD428839D16C5BE073B5C1469BE1B6F645FB7371CFE00C7C024B0AF16EE0E7A
A3C195DD457AF579848AE1DBC6E42D9116A02A19B5C0AB4A6823E23FC6FB2F1C
4933EA5839A8479834416283F68B72434AAE9A7039732A5A0DE07858CF7F9DDB
84E0A8AD234B7DAD0C88289C509955F9AA4F90E8675C43F7BF6F0E2F4C4B3F81
BBB14D4D70E9EDD479DE21D36D6F446008A1130EF51E10642FA39210F0AEDEFB
0648BA65BE0416FE1EE4BDA71618D70740BBB31824F9335253E1B4B548A0EC5A
A55A9FACED611429DADB394BBA7760A387723F6ED414CBB3AFE8CD8F8038A919
807DEBE082B06632DA3CA6D0D16A3BF49BE650D7955ADE454045621EF30E799A
DF8846FA2ECB062779FEF781B4565871B170058192073973203FBD823FB3B4A5
C7677AA18E06AAE8AE94F744C02B724540625E155B7E45B9C446E0F9F2A9382A
D5448BF453FCD9A4F168FDF00EFD3FCE9D611483BE3D786D3D553F31A6264C1B
93876C6181048DA36B7D906398A816FB529112EF930628BB617F31EF47CAA351
33F6462490CFB257E5D6B081360F9496F4DD7A73F263523DE9FE327EC1940C95
CD76D30AB4AB8D937F5902AF169ECA81F0D8966EBCEC46069EC0BEE499A5F48F
E6417610AF18EAE732BB3A5D77C86E5CB57F29CD07883CA9DB40C4FCA61EDD7C
E452E7B72D3703C8433C903378BCBCDBF4D72AD1C968B86C0C4DFE8BA179DB1C
593C70D1A10FF5BAAE421918C7A2DFE60CC5BB2AC073253F74B28EE85F15F4BF
259C4485F5ABACA6F22A2954C736B9B4FB898D039D5AEF17CA282B206F51AC4E
A2CD0B411DB4F1956AD23BC3657B7C248E6F350A670D4E8160E04237D0418967
AB8F1EE9DCAF169B5A7231E35646A0F58459620321AE0E475E944C2C8955C98A
3F55E17352B8FAD0C504567768CCF6E860E5911B0676A1142F8B0C4BE6FE2472
98BCA460834BA05A6DF1E208478638EA5BAB206BFC8A98FFA5E9EC133980F8BA
1D74DCD72C72929FCBBB10806422F015FD2A9B9805B82085A56C8F03E69C4D4E
7C4D37D6656EED6F026E8232E6301CBEB3A08C818DD6ED37AA95D997DA44BD9F
A34500355706C18A0013014E9DD00FFD8C36E34D02F8E1DB179F359033AFA0B6
35988379ABC290FC41DA0FC4844C3B64A6F7A4B4C4F93A88CAC7E19B4041DA91
39AA0245631CBA9AF590A5946096012DC098914713B6D302AB02D73EF3CDE114
E6CAD9281050D6620E162CA4211C4344CDA5057932829F3D7E2D2F9B271EFDF8
AFF3F4645F32152DF32A23E0D91986E81050C0640D12EE41AAEDEEED5352757C
C012BA1D20087F3D1A8FDC29414B78232CBC1FF6FCDAED8BB5044BAD51988EC2
B2E91D534F788487DAB64850A522D3FD063232DE2141571C8E34B2FA818DA6C4
B5C3BAC60D089A98049573D6251FB08D6BA2D094AFB6BD68E7A2231B947492DA
D4537ED8DFEBFDDF72633BEB521BE6C1BE2CD15EC64A6D8BD426159CF635FCE4
D84197971B052AF4C84FCD20858116024EFFE90A6747FAF1185CC86816271695
CAA34E92BCE1F96DBC64362CF4C6D69C1704DA98C319FDF2B7F05EBF1C4ACD3A
FADDF02C821AD8412122FD2974E171157B28E95413E77E11FC59C1CADC515284
724ADB32D4B7514C14170E2736A6334043FB150EF2B86B5DA77283C0EE5C56CF
BCEC78B44F0682A9BBA8577F6E6EA532CE3052CE3465E50A2AB9F4B05C0F6E45
B944A39DA16CFBE4CC9478A9A43451A7D5013071F9531289C5037DD18FAD526A
FDF2E9AE9A1F3D86EED0389A7E0E427E1FA5BF0A04AD1CB4571BF2AAF06D221E
7D04B1FD0F9AF5A1E173349FEA011E486955D44E6E9D9B32AAD01A32DD6BBAD6
C6214217E9A9290A0AECC7BEC04948357C2764345E492239413902AFA07582B9
5618C95E9C9283B98F18C43A8B3BF515C5D4D0B3A0306E3E05519FC2D7421D2B
83B643E58D1C313E76BB20CA7FAE10DC0E6DD5D082D1D47DA3D6342566B2FBC4
83621798555BC50AB46CD1A696105C3EE67058258909B35BFCB7948B288D3F57
D5E6B9EA76E660A4FB9DD3BD4286BC9AC753F1F43CBC7615CD91BC957609E7EA
B6D0910D6E2E4B26B55FAB89CBC6CA70C51784F53A739A75A5BB5BAA7179675D
A8BCE36EDE8B8C3BB06A0E38CE06149649CBC97737293C0D9595A1327C8E57F2
72D690BE25FE5ED51293D5B4B9E0C664228616B44EC210F19AF1602B83BFD1BF
545D032A636F0333C1AE5E2AB6F591C131B9E894791B47590018D3931035FAEE
12FF1CFA023973672DD19E6C23CE9D07944BFE05A4158722CD7BB538E6457731
B9B1CBB89E59B330D28535DCFB21009959AB2B1CFDC605E49D42F21C780E25EA
C5A49314EAC762E857D90ECBC263C3A2B924E2ACC0989592C3FFE8E71C29307E
644ECFE7194A7E5157EC60BD65CA87B43F6CD2031F2E16695524E89D194E5E2D
CAAEE71510B95A9CADE919AC926F78E978FD012E7B32028A1CDD87DB105B369B
1A93B6E9DFEF7E03F1BBA2793A4B16725A14BDB45D923742109A553C6A39CBED
0729660D6735928FB9622DF7593A91318C762B1C54741953E707BB5CDDFC9478
2C84B082DBDD7D25034D47506F9C4543115B56772EAC6576CA8F050852EAF9F2
25BB7BACCD7C8AEB5F79455DB9186FEE2BF01F6EB73BA06508FD4392D02CE38B
640A85AF157E9888FE780E416D89B950DB3FF13FBE4EE9B53BDFA4F800031921
9A74B31223FDF983D12B0804D96100B40CB75C27BF8523778B63A00BD7ED298B
0367580FB54F6F704A78FBBD2E6B863C7A73970CE49A633A540527189EEA6917
0A2CD6DF30DD7410023854128DB9F5BE9B9CB2D79A389A7A1582BD354A138666
F3DB802E3D1C47256A0E8B1A15C55BD1C45D2C57297689E04A1750EC5DD33F1F
D3E90054C2A5B88C55F52FB3B7687755654189CED5888BCBE6D100C7FF3F8235
FE432C27EA720E28D400E98F78187F0F6B99EAF21929D3001AAEE93ADB605F85
D66FC24DE4487F2D4CEC0929046C73BAC19515D7FF11C075A3BDEEBEC4375D8F
40351194B8B06DA43C104CBD51D45E3CCB4C278223EFE23AD60A0EEC1E7CC2C6
32700602951B87EB424216059F40083F5C8071358B42B2F7EB31331C5B83E666
21DAE7008F0C0BAB04A84C7AAA81B42EC94C58DCE21612A1E964ECD616387E64
947D72F3FAE824BEB6A2285D5E5208E042A32EF8E9574F0A2F6B9885CBD9D506
CABACC0FC955A6EA60137F09E8C4C782B5B18302A32651FA5363BB72F32AB627
C9412F68CB0D44BC1A36F28715DF3B63AE5F5B16F4C3AADDC4E0D28538A37EBE
56C5483ACBAD0A9962638562F111A498386AB7C884FB76F1EE9F81371ACB51FB
C4A3D030C5FE603963C7885590813CEE362D47F9C64321AA2C31E3EB87B85B3E
7807EA1B1DC2D5BFFA125DC4292BA5A348A50A4651EADA080ADC63748E80DCC7
1FAEFA84BE7EDD8A0EFD98787571683FB206E1306FF7221D47A749AA2CBF5974
2490C7B1A81CC16056DA8860D9FDBB1FE35E173249F4FCCED3B333EB63D19BEC
D1891057EE3DEA3CDD60F5AF54A894563C0DCA96DA219FD691C0956274E7B24C
8F612501BBC3E89D883121F5811306D168A9E62F9323DCAB384EEEE9FB443196
BB55118FCB687770AE08E0E493C803D3C1C83EFBAD7D2A9D242A18D6EB8FED9C
B920708F4EDA65F1643D906EC7632CB075DAB707145CFE3A087B69A617EFD847
62ABCAC2A0D4951B6FE60E5EFA0BF53488420E34A59D2735E24BBD08B8F9698E
9384A917272A4D777179ABD4E7AC872661742BE80C66B0AC223830D3C5C1EF4F
8F29A9F036F5F97B410F4475D24434423F1BF2FC4FC5937FE1E91649AABF31C6
422D57AD31A07D3F828CEFA8C9C1D992B8F40B8644105F9E81C0ADCF36EDF391
70D18ED1EDB7139A251BCF348F2AC4EE11CD22E92729129FE63C3E62AABC8522
023D6C95628DABDD4903020BC0D539D10688218022F349501B673A15C7FBB2EB
7FE472130BE22F0DB6858ADBEFF294C789EED773E82296FC1CBBE2035F472931
875899D4DB3EE3D07B281406D229CCE9AA21AB957B753A3512E83B7162365F77
B8A372E6345BDC21C237E1942089D64AD65953969CD16F492EC9A82989F07D9A
2744B2BF44C22E1AA8BB4ED45D7C4AA48BF76EF164691B9E1599EFFAA6CD0CB2
599A0C334DD0F97C85EEA6171B227A4F9428E00D7393D111F7991A1908AB7DAC
63FB885D32E9B2CB17D0C4DEC768352A458AA88A9E75719949B45D4F988943F9
05E40FE3439AF9C8B23C41EE300527400D5E55C98B8486EF38F5BF06F73D20BE
9A90719C56201F93112C850E663E5E30EBB0E99A97840820FE54817E32632B29
0A9681050BFB0AB7E4A7FBB382BC8B21EDCDAAE0FEEE8E515E2835FDE2A9A2FC
220FC693AA9F59EF01924BEBFED8867D5636CB44F6ED3E291183ACF5219DA2C9
FB0F2894C145379180BE2CAA768EA838BAFE9F77D97BECFF492AEBFE5551A66F
8A8535EDB78D1D8EB907A97E24312F6A96E37C5D3C945633ADD839EDDA606B09
4385C4179F17B41E713CD3E35E3D23C83B8657061F49B97B16B0B8195C897D53
F615900BDEDD90B6CEDB3CC9308E034160F075C7F0A56132BBE2FC5E1B71F71C
940707227C395A31F707286BB25A7AF609EF0F12A56D5233C0000E39755CD561
1F16921232495B0647E70D1183F17A9D861A71E1744D5AB27B5F13EF54110C23
D3DC327C3F8AAAEB57900C4CE5C2460A66D9206AF2D65FF98994C581ACCA5DF8
12FB3829A0AB14C30A69870367A5161198BAC2106078B6D8AF4B2F30050A1BC5
DCA14D68DAD1361CBC6B9BD797CB99762C949ACC6E93A13BDEDE53C6154836FE
B78D02EC7C4981DE3B772091628290BB2D5DD786274D5E2AF42197845061F8CE
C1F7998EC546F43A7018129E0CDC984B45BF2A0B75EADE7B607B5DD9179828D1
23FE67B407E70483AA657269B2E2ED0C46B5D574425C6999FFF0C6ABFE456F76
55B178D3043204BDD9017178516E957964D00C1480EC360E5F36F827FAF47A3B
84AFF286AB0086007D882338A7E60679512682B4ABD4F97773BEB893C39BC9AA
5DDF4928EE2DBCC7AA38CD861921043C2B0B9D2AC3D50C5C73BB619D9A7D4442
0AC6CF188D70DC363AFCCEF9200F6F9F63F17338ACB5E4B5D5092E8A7F01FA1A
23CC64A05A52A703047B5A8181F8DE6D43EBD9142275AFE418EAF9CD57C8BDD2
F44E295512445F3C23F6E4EA202A9A75D4D8FBDB5583399E8CA3E1C60975E109
E161C55ED8FC4552B60B161FDC887624F17D929729631470EF2B81488C0C1B39
118DBBB94C79ECB1D1A44C127C337985995D8E5B15C6040A4F57C31DC6CFA703
8E5CC8C4DF2327343143F91FBAAF570564B4A40E2685A9F500968BFD350A5B7C
C62DD2E4BDEB6C8E7590963F305B87FB60DC71D8C64F6DCFED0CC9861ADD632F
CCFE44E6DE8CC4505B7C852691AAB200A7CA7F988003B603EB90D8AB78CCB074
FB41ACC2F908525B51F332A26C018F996F88CD0A638A53DC4B7248D239EABCA4
A41C0C7DC81591482BEF8E37C3C4E22F495A2F52779C27422E5DA7DDE4E6FFC4
FB05EAF3BD39290AC7980344208F9F1525905658399134FE039628913C3D8B64
36A1E11A15E51F943C6D0674BE27060866F3E549F8B4B148AAEA43A78BD9556B
C94188C68B0E5F7FD80585B13A276A90E128D1A046C42D11E10694972CE5137E
792F992F6EEF7B97CAF7923A6610890D9EEF3BE6F5E48C8D4806096BAC27C4C3
3C842B8F97623392B255E60A9944B037E7CBCDC983937FE538DDC6C5E3E1678D
9BE4725F2C103472044C211BED29EC7AD83DE58916388C2FE17D1510BA0133FD
389E0D8CC9EC66930E55E6D44DEF2CFB2CA49D13FE70964B2E1B70F302279E29
37C390DEF33693CFAE1DD15E608A1A6B0380B47FAF54675EA0180CE5B63C6A78
9C4B74298D7E86C8CA42616331F7E9DE69B89698C0A56C1B821964C5528F2894
D64AA457966E3F223C98E9D377BB794528AD6D7421E247955D1A370AAE04E141
A64B7187808C09D882A012149287095AC8A7D89AB497E018CA439F52A93D82E2
7ECAED2FE0A021513ED68FC6B91321CD9CF34B0E5234B03A614A4AFC8D5B9AD9
29429D406FC0F7F50022E9F3F895667DE616F4E8F6D64C027E2CA2F3198BB2AE
A846E64623A29633E22842F5398DC28F317AC2EBE579DC979BCDF2C980A32E2B
2B511AF89B47D9DB978EC60F86659B11C1EBFDD615ECF1E1A00EE70BE637187C
B9247F4045E2835232FE50C707C399A9E2F9D485A6CF72E5A208833AACDAAD38
41299A8E47306A624AFA80CC2932C49835D18B6A51BC936B881606346091AD02
4C027BC359687637CA22348108CDDF2E66D46E8DFDBFA2A991A7D71D2DA64993
7E4011FF2E44CA60865FD42C5095B0DED46091EDF6FF031A7FB6B15D2E6BA205
0B17F3DAC75FE3A88AE03FE8EE1264F7D351FC08976719F07FB45B95E453D4A6
C63FB618F1E89F0FBF44A05D0BE38D5A09CD93C5E6E52E779BECDC878F3F2827
32A26326B9C65638E3A601F23AFCCE86C20F15FF5EC54010981EA6A8801398E7
FDFC6165E0E7B858699BF647DBF53B67F81F8E15BA67D11C34B9701637
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSSBX10
%!PS-AdobeFont-1.0: CMSSBX10 003.002
%%Title: CMSSBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSSBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSSBX10 known{/CMSSBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000806 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSSBX10 def
/FontBBox {-71 -250 1099 780 }readonly def
/UniqueID 5000806 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSSBX10.) readonly def
/FullName (CMSSBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2919BE7F4437ED75BF2F7BA7
02F85142A4EADC8C9C7F11ABE2AE2A9DEA79CBF9577DD8627E31D25A7E4DED9E
FBB1C413696C88A07E5C937451D40A9211B29E24C9424635CD4FD6B16FA7D76F
5BA1DF0EC26097EEADD70EAA577531177A26B5017A32675C68052E90E68538DD
E779AB23150FCD1653460CDDCC713599EFA381C3322175809A73447720F6911C
6BFBDC0458C477D2CE69BBAFD05B5C2DA1D2E3E8378A2112066B045243D3D080
DAB211DCC25430973C18E7FC5574A814E3EB79F34FF5197453873C8AC66E47AB
5EA57CB3C8365D5235E7746C8584734F002E9A28C38B0C25E3753D85A1D2F3CA
B8DECFE14A7AFBFB76CF3E91A1E0203FBC8052C2DF967693C9BA0ABE86B5D264
BC345D7954C9523B3E70C4AEBBB0F2D56BAD6D76E095F9390FBE2CD607F3060D
F713ABF47F0FCA5D5C27CBCD4140C668F733F769FF5326917C0AC5D4C72F99BC
5AF4540DB169622644D320872947BCF1D30DA4EA150AA22D6D53777345858DFA
3286EB68314E30EC650C8BCC572D72879E431FB4297AAD6533C8F4802E0B9902
8360C57504D4176C1DE7F57382FF2E2C0A3D5285A061CE91D3149E3096B91076
1E914125CCA8D1C9230B72427990ED4468CE79C11E8F0CB89A3213C535B040E4
0C5784E6D53C96696EE45C87B5E0DAA80D3A06E5759D0676ACF99020DCFC3E8B
50002675B01959500133BC30223C75A54948DD28FA83F399924D4ACBE33F1F2E
D85095A76AF6DD92EAD139A8D5673A35B3633D25EF3B10A40A7E28F329D6E7AD
DBF1DAD1E666931611FB107D1FD3576F11A22B50943C536DC2BA477EBAA52BDB
B65A98268602F26DCA5EC761526CB7F33CB5B345110B7A90E1D078A21E332F78
33A0CF88EBB2CE852384DE3435F7B3564A0AFBB2024F79A633BA5B6EB7CC5389
C43621C82972D60F7DAC71FD9DD38CAAB865D7DE4ABC39D71879BF31549DE649
4B9CD8C149880504E5B34C2153E963B3FEEDA0D59F70E0ADCD24EDBBB8EA961A
90E5AE4ABB26E1AB1757E25572622D5A2541CFFACAB673665C7693855473D78B
847FAD590B657CC0B8289034AFEC3C54FE97B010535F70AF67ECC88E21B077D3
A9C2C52D25CE9714EE430735DB57991AEC946C96B6988B2C85D17C8BC80EA844
3A076618A686040ABCAC347F1B1C14676B05E13C239E99C3A2B63D0388CB50F2
BC119D6F74F70DD96BB5343D5458950070576BD6E319AAF5792EBB9DA5778CA2
58DE0976AEB766DA6A865F09FD6753FB4E7E0E9A06AA1A06C2636AFACF787460
9E73BAFC4A56A99277DCB14F52555EBF6DC5E5785EF7745521FA061227B725B0
7A5BA223D5EE9239A7A1694D4F9EC1132FA23DA44ED0FB0AFD8987A01F9FAE15
ABD485BE098CA7B1AC780A9A02AC58DCF0425D4D110226DC7B5982FE31BB78A1
C0AAF9B712E8D478FC4F85400B5E6D71AA653F9BB2E967A76D02B04887CEB9F0
0EF50A956AF7F790400EBBC07467D9A8BF8BFE8200F8F7EEB5DF3E62A9A332B4
513120FD9F8A93ED683CC47551C629B5313E4E20A207845CC37491ECC3945EE2
71A0C5633B353B03B1A7727D5D9A0478D20D67A981F6E5CD8737548ED4348A91
82F2CE805724A028E346E6B7C542FC69CFC7935E6CF3320ED9701C6127FBDFD3
B20F0DC2D1F92DC69E4FEE57B457E82D5721D932B140CD6DB9BC86B961E7E6A7
5816F42AF937D97C3149DC2AB0054564592448D0CF52427B766FD38E3B040B81
59AA9030CE06A9A9E3A0572A11BDA85531060B75DF8791176CDEC0A9BBF472EE
BD433BCDAB926689B8806CC8044D0925814C1784A41CEA48ABB9AC039485BFA3
026FD30CCE84AC57DF09B1581ED01B3A840AC5E9208465BC160238EECC7A6753
D5B65B159FB08E0DFE4C9F2EF5986352C0E0C4DCA0EE62EE5C19BB6C486FCADE
99D3519723B70B20FACE685ED8D364905EA64A15981B00A6DC06D7B0E3D38FC0
9DDF04221696F7A8F3CC7FDBC25A61D9AAF9F65D3A64BCAC4084CF13BBED7195
6BA4C2445676804C333DA6569E4AB7E6999505DD1988C3E62495DF61B722A6E3
00ECC4EC698E33F7B8225FF591B746E449D2D178880741074D0C3CA740312D21
1F8B0B1A855FCA081AF1E69D14C9131B1769943EA6D5D6210E10BBD9E404B445
FC3E2ADF8C9AB6AC07BC2FC0482515625523C04303F7884283D5CC35A4A6ADAF
59738F3DDDFB51E7134327AC4CA577BAB076F3B588FA3828971FE9D561F46358
24BEC4C7F84D8FFEEAC94E2C632AFA5AED635E867AD362E373CEA718C750B4B6
954A7CB6E4CB2614A4E1C707412B7B09F8969EBD5B6510B66818A2F5AE4EFEE5
9DD7690A3520C477DECB7D61FBE5F84D1C655971FAD7CDA78E695C18908016CA
48B468BB6B43EBE1DDBC49F43B7CD667B4131D7B0C9BB048178A31D0CB70A76F
527DD352F7A9F0F35226117FF305A9DF4AEDF474FCD5C7F31FB06D4B2CC40629
1BE1F40B6347201F84BF35CB5155BC4D2E1DF2A5C7613C27A0EE77BE55A744B6
DF7DA5741AB55F133D518660751B0A91E6BE43B527E9C97E2F06FBEB58DD0215
BF4105DAE1B2A29DB05FA204D0EA6E574C7344C3B3F44092F7F997654D61EA9D
4C811CE6087BA1615A31F8D107DC64F1CFF707234135B728EAA0ABB475E678D8
9200950F24A8A61AE6AA18F34A067849825FB3925A8E01D64E849546FF7F4418
19C0FFC2EEEEBDC7805612F7849BBA7BBD954BFDAF2E6FFE3CA520B79070F8E6
B1509EE0040714C9F5023816250F40FD1C6867F77FC8ADD3A16A3A6275CD6F5A
21BC03274B350EEFA6EE929AE91DEB8D8B309E3B3524807B4562C7758794A8C8
4E3C6EE0C0859AC9B799428EAC242BC4AD9564F2444E3C79F11D4C1D5672DCF3
2E191E25165C77EEA2DB51753ADE07F5E7E748704000265649A2E1DF68909F38
68F0D5F415330C9537A065728D2104C34CE05458AC1B2A53946890DFDD67563A
E044E7AEDA111FCBF431546D410D67602985F6E13988999E46C80A983C7F12A9
FB56C6735454F1E194F63A1B6B21683A281AC6164B3229AE25B1189366C9DDB4
09D1BBC8429AC3D64F8BBFEF1265611E7C2FE1D3A2FE24FBF3ED96A5CBA6FCA7
847F5E3AD4D14C0C77C225588FBD0DA2E960FA3901DA1B46B796121DC804FE82
C382F75AA0495312A80EF9350CE0F80CE0D18316E5D02B7BD78667C2DAABD879
E17D5EB8F274DD2B1BFBC04EA2F72EE5376D01DAA129FE257162BD19D19B13CB
C13181E6DBC12826AFFD87AB152A59D67D0FBBE5D9CADDB1CAA8C27689355AA8
FDC556015E4A9708995E51E46D6D1ED7B68A61625561FB594B9BEF87A1720222
64E4F8A47637705CA32B1B4CA5B8473F1D67FCB7E4041502B7ADA9FA4B16CC6D
282FB636979D3DE7C76F3000ECA08AD6E116B1558FADCA251D67FDEB4607CD3A
84BCA7DF488C97FAA4FC195661D7977A08EF04A7D9A2D619EFC7AE291D7DA633
C6DBCA7DA01EF336E378764F6B4E4D6C517BE05F10BD1FCDB20E5ABA7F65A8FF
17D93CDF1E60787712C40775A5C3808AD05A2F276C94B05E10C6042604F592C8
AF1F25B98A0C78AA7BE1DE9ACF2273965F0795B0D79ED6CE2753FD0FD7B41A18
FB490B06B5467561DFE5161C27F58E48EA5F38A5477C9CD0C2FA13683271E55D
8B08DA0C96BDE97C653B0B18096EE7C0E6BC3894057F14E83A902FAAA4C2AC7A
566A9EB8F9D622476DD4E722F55F28230124F67501866FFE952AE93DF5BBE2D9
4B9CB9955320A9E256E611EA3838ACD9073107936226140ABEE92A096659764C
4ED2485B33E75BEA57CCF19AB9409B684EB14103ABF6811E7A8C0AE0C0C11BBD
87801F3F0260D04A8921FB9EBDA2A2048F4B5C47DF63051A0BA6DDBBD895E0B5
F9F0F3CE62CB118B86AF595F4F34359DABD9EA354798E8561599CB32345A43B5
93B217C43E316BD10BCE1C66A10C9A8041A14570ED7FFDD95AAA76E92EF52042
69F0B8FBE21CA4E37647DDC890D13AF489606195900063DB0CB8D71968C1311A
D56155D2B2382119E603AA85E9ACF1785E4C0ECA137E7E4F5EE7915E8A080509
02FFCD2494DA2D3B2AD27DE5F11684BFFA2366B6C834AE309D8E07F98B7B556C
DF3E0B42559610F1B78C79254AEBD7B0F5B3D7F420BA725AAA91EA20D014334E
8FE221BB02BE7B59FC3D03D8ECBAE21F5E37E4A0352C475F9F29C5D2FCE8CB9F
2A059AC06AD9E6F13C39F2781D7D4B3FC34291D165E5C66C5D01B5AAA2AE8F72
9B3C634FB38FCF35283792048BACA9F7EE6789621D9243B917234405BF194BF5
A4F137680ED10F216076AA2767C1D220AE71EA7393C7E252209B6ABD94213AE9
F61FD2CB3160F41C4328DB8563483E13EEBA83A7935E4AC11A97DB7988585184
6BD3DBB8241EFA1F1DC5CA9C2E16EC1EE12CAF4471FA83605DA85672B34B1F9F
8CDBAB6907D6CAB6DD7E00A7D636EA20961BAC97D1AAF32C8096003E096855B0
EF4845013B9243A29BD509436CA78C6F8DF4F90DDED960A0D12BFDBFCEA539AD
BD4BF883E09542C9D75DCB8A4AE82DB495B0B918D330979F347A76D73B19995F
4039557D337FB55B8C5922F35B354F6C8E4D861A0B66B3D803C9862C9C507404
5EE039245AEDB521E90F83F15E44F42F0802F8DAD6A9BF6176C364286601FC80
E14926FA518CC035337904132AEAB9785361709CA01AB0F352317294B34B2B20
FF88CFBCC8E89863BFA2D3ABB2A596C9D9DEB261CFE48E403F88652150EEDF05
3390F002B2E4B53446FB39C488E3D0D4EF4AE2AD19019710FDE56FE29B58B00F
0A6D5B26B814BF64F13C35EE903FA2190F460F9438924E1D7158704F305E326D
66CB529B3A4836DB0FE383EF989C975A2F603332FFE0748E0D695327CC8D9AB6
E036E0E6409261C30B80977BCC3CFF8FF8A9BCBB889ABE47B0CE3450783E1EC7
1C030CC18E074E01605908C3FB61B78CF4FDCC8E8CB13EB77CE6FF2BFF91D658
51FB05DEDBB20B0E4C5604AE3CE6D41A4C8D71A1F90120B1F90C83989B892253
31D06ABB335DE237CD0CDC91256A54797CBA5E284B6CEA6FAE01F7BEFD905E5E
139D57E163137B5751A765B46A3AE6F653FF2551988CE792011E0548CFAA6ADC
E32B876763AF6F6FD6864E7B55E341C97FFA711913F8A7FBCC1FDCB4CF2F4D3F
17358EBCED45C975F2EFF3FB9F77A22EEE4C9DDE63360DCB2DA2C1AA4BE44BA9
3F9CE6F27631809DBC45643DF7BEFE247E79AA7937C409986500EC1026ABFDB2
6C30E0A4852A6976A73AD7483C36F1717460327BBC05DE729E23D370B78630D1
7E87C99A5C3A3C0FFE204EA81A8A33D7DE80DF3C0EAB557F4E86DDF8E03AD072
61B1D8E1BA05452A6FCA404D9BB8FE9831A367B0AB31041B474DA9536035E7B5
EC83DEF0AE17DCE958DA19869DD51F53D4A4BFCF7CFA635D6F9F882E6F0215A7
0494E76F258D44FF72EB5A1104E8F73AD2F6F2ED337D854B81DF4083E6A2D679
6B5613D76DA2347118CF009E8A88924C2A42B154DF1CEFC93C89DE0ED8DB26CD
8C2EDE2670F494DC591E79DA26CF8B5FB76613296FB1F39AF2001BBDAAB12CF4
3906B4C304CCF1D066524DCF92FF484CC682C2B197CD797056555F318279C3A3
7AD8EA9CB19724AF57EFC6706157A5E2F51F104F6232F252594510E0E4BC872D
D610F4C99BC3ECB668139331216DF1AA8F6358EB90CE1F0B8267B878B19BA7E6
77A53A674E0B029E9142865CB92A1596D5AB97FA12FD05A04369AA00BDCBC2DD
1AECE1A4AD55A93885C626004B41FD277AAE6DF68161F7443EFA7D9C913AF909
970F4C6292A694AF033B953CE37116A2AF2439E482867EE9EE2BFE1093A738DE
24D3C408DD105CE6D7B8967994F7C5CE49FBF61AF135F8F7799E2FEF29A168CD
B2F16F795FB475204FBC41AB78AF87E4E80F992FDCB770A3DC0501AE1D786ED0
449956A1BDC93876934331C24CFE4392AA860A1ACCA39978BA8AB90A2174F5F4
97539772660D3920E1B57E9E0674CD34C9EDA83B6AF1B06B26207FE5D67E75DB
B170F1D01D512CF6D586DABFCA32404253F0A9985A29D46641A81D5A810469C2
8081D7774B3188423822003AEB638F21661E0BA7AAC765CF8321F9677C85A562
88AB1320B3256EA9FE0C67E5B69A5127DC1B13E4062CD0C9ED10AB36CD370105
8FA04F89E3F836B01393F1E9365077A30D8E46B67400DDE8EB0AF8C815729699
469773FC3F0ABCEF752A5768C9DAA1931421214E69053775A238553AB6620E9C
E875223681E60B7F7B25BEFBECDD4FF799ADF34BFB397AA114515E2133304A57
B422E97EB3FC5314F64BAADDFEF9C0EC719A78915B26E7E3F381435563F650EB
7587F11CA3B14875F6B1D817C1EFA0B89C85B888E8391C74D77CBCC6A990C36B
1062D049E20876B40CB030367818A3CD3E2CC354CDCC9A0FBB8DFCF7135FB2E6
A0BB0C3A441CEB8D5FE849AC7299431DEE27CE28B33AB7E836D6958104D1777F
8010546687CCA23DB48E53376A446136F449A92C07102315D4D0A897521313ED
1A3A8456A70C16EAA50A3E67336DC89FEC56AB54A579EF264377A103939D5EE0
0A90B4F20AE1F2511469C34B5984A04D5AB8A162F18DBE4D613BA1C1C85E994F
80AFE3C18A045148018045C63376CDEEFAC53A55DA67D5980E3A99CC1C981FC5
5C25CD0A685E3AA6F8C0B8FAAE157DB91AAA50A2B5F7D8860624F29B8DD87606
C30F84C33D802DD5B95E090BD7AA4400E090DC1913BBC392D7E5E87717AB14C8
A031737560F3D132BAAC0D6DD88C586322804BC2D8C505973F015F7662571FD1
C89CA0281CD48AD84B9ED8D70D240A4EFC2715DBE98E545B987AB64FA259D81F
3F768326717675A3A2E22F4EEEA22A5201797C6D5EC644318CDA28A2C3CCD123
B0159205FD52E1F9A60A69AF7B40C4F7189FDED20EAC3869E5F53F4955CDA0C3
2B06D72EA2B8CA5F0B557E9A36B8E9BE7EEEF96B5EDCA6F79F53F83234B2BD45
6B3D631B1C9CBF7D283F377177C60B3D65ADD945D31458164043A17B8DAC8409
B4261A4A0EB36E18BD104A8E66F45C3AECC07F4E8FA9F3D2A27334F95AB79BF8
06C18D57EA745116DE0B36C12B6F5411A9805218B5A31731CA0A35D9AB6BF5AD
928726A6EA61E0B69FF0F4FDAB2CF5B222FBF9BDF4F89EE47373AA3944678328
1EB230EACCEFF4243D6B4F8797482DAB78C1A053F2800144A4C76BB839E536EA
2D4DCEB625DC0F754EED8BE3FA53A7AC3ED17C92757CCCCDCBE21A9D733291E3
61235172F117D4B8305B45D7728DBB2D71411954EE599B0EE786D7603D61CABA
AB241062BE3776FA150680F9CB8784FC7A94790FBD2922772EE886254B59D0C7
4A4DF7A2C1C4ADA1DBC51CE27D3FFF7F96BC5FF7382864369536BEB2EBA6DE2C
1C427990F6BC84E92CF718BC6D4CE9EC1F2DDEB8637AB1FD673C5BCE1A090146
171717B39B9A83F2DE0B79CB1B836390828B3EB6DC397AADE45B21F55D1A3583
C3A5BA93A4ACC08CCA4DB80B78AEA6002D80C5513A705E7232938D8423FFC72E
1B96313ADB255D43E2676DD2B00B51D116A328164BDA8475741EC234EE6581DE
06162F006405D6D823DC47DDD14536BB530D132975C0C436F08F9243F1A9AD16
898823B8E2739B4428E62CE0E41C291153B7DA3BFD42DFF5A4DE5BF8B86BFF70
F5BDB495EFF99DE8DB9D85A13BF77DF2C4A97A13E4B525245B82998865D5B387
4138C7E049944CA146DA73A2CC89C048FEC738F2BAB854FA378A1CF611A21EE3
DD3BA1A400EE8C4AD035FFADAD4B90F90DEFBD39D68F1405CC37786A223D6073
85E67FC314037C7E13F3D146873CB848F7B16C9D3247E7CBDCCD90E10600663B
161A15DB54D1C7DBB3B3AD271CB5CA98A92163FD90AF07DE1610FF92104A2AC5
D6DC1A665719DAF2D483EA1B294EA5DBF37C940A8F4B3E4DCC91413C3273DAC2
A3FD2C417E80FDB79FB0CA9553B16FA5E8FF48CC39F018729761E5951C372B31
88E10E45B58D0C1205832E2DEF58B5A84083AE200EF64F87DDD91DC6FFFB0682
4C426A71DFA8CEDBE3D94357D87CABD63E5D229BA73D9CB7FF02A992E251526E
FC607364D550859170B4CA391D713F3A00A3687773BD7CD3F9F720E758D344A4
CFB4F15A942D04E4C6EF4C96DD7F18748E4D1AA7857D8E4F9BC2121F5DC54902
65DF8C082AE3EE4F289C51DC1198B57B5AACD14B35BE9F362E7671FAA0BDAE5C
CBCF6C71B895D5894216D2707F974E29A95D4D3EE4F09B0ED0AEFC7F2081B741
D82067686FD1AAD0DB274A1E87749F6B1B850400B6B955E414218EFD9F60285B
6AF24D4255C87A206C3F062542EEFDCC485628A7DF7C00CF950D1C921AD1D5BE
F5964D51FD0205A254A6D894DAB9A423F170059CDE501A2E2172C937ABB4B0B0
57C6A77778EEF853041E7CDE27592276B40B0EE8942F265ED1FFFBA01E146A5D
F28E886CCAB3C91C19957A08F55599947267631152F5CB05EBA520C50B4E9C7F
70ECD389AA862E3D98991D38296EAC8C58A9AFF1FC76282098FE7003C051B72A
97EB4C9036E0A3089D4D6746DFB249CAF57FC294EC0726FB76438DB675B58FCB
6C820E5F06B3C3DD338E6EF9347046ECA07C5971AE1D26A89477AD8920EDB0F3
EBACD6379927DADC79C952107BA7821B6D4473EEB60F712C2E09F56351DCA0C5
324A62F5E2D3602126C40D56F382957C77FFC75466BF98D19ACF770825A3B2C4
78BD0D3C8BCFC9ACEDBA25064564E5A47434533AE9779CFAB4E3E0F8794982DE
4EA3E3C1B4848B4C11B73ED36E7D8AD21066FEEB0A05EEE07CEEA8B590E2C674
C4E874307B7D148FC4EB465DC1C1D4C07835B22962C8229231FF040E04B5D233
C2914D193B13FF547CE9792700FAC2F250BDEED087A25AAC21A9ABE84DAC7ABB
77CEBCA42D144F74B53BD7570BB1B29812063BD374631820EDCA1E621ED2A65D
66031A3A82262D61FE85C0FB2037703F80C3839875869D48B7160DF59654C520
5F4E4F4A8A82892058B1B54F434FF0FA9AF8906A90EA6E2736A19D7EC6652BF9
BBC154B5CE1CE5B1B34F77AA5BDB440D2C333319084C0DE58D407C424FB59F95
5E0A247564CBC32BA0A59116948B1C5DAEC5993CCA3BAA440F98055B67972CBA
A535A2BF833B984B51DBD8DD09051C6FF3E45E01697D2A16879276025A3DE62C
0C00DD4D76D6D1C8DAB67C2F2BD310F5E75B0FA5145E69B9CF18E98033BDF14C
D8795A4D7A1F008CBA1B649B0AF59269E4A8B175929F43C859DAB2D62A6C1FAA
EEA3209F510B782AD1D0324855ACB34BCE440E2C98AB7B3B6BA95434EFA303FB
3E827FEE2AC0B0C005C24BB6B0F0DBA1A49A00318E56FE952423057FBD51A111
CCE124064E7A8782856C2DE891BDA8DF81A04451055F839684BB18A2B35B494F
C1383FCA4DDF4E92F75728BF44C47F6CB4BA3DCEF4C687AB2154F32012104A4E
08DAF2E8F6BADF58E22BD11B6DFE5AE7AE18678707FF0D8E174850AFC39B699C
C5594CEB170BD64AB6CDC615EF4680396B155DE238A3AB4C632C45FF69AFACC6
9DE56079EF47A97A3913596C8404538486272D000B64ED58FD12F3749CAB5F6F
B9017F594C2545BDBE4F7B4D7E540709818E95CD333076A402770306B1D046BB
64E143BCF09B2C1F89581264DACAC5A9C36BD4BDFF73E83CF0EA783954F623CC
CA5FCC0F64C42CB14BFAC6CC910B55CA4FA85FF22A970A1C750CC46EDB715258
CB4C28818167623547BC394BD95217D4AC6B5B70C5D7D77E12F87A5B4381CA56
0B3805786B0BE56E01B1C1BAA4B0EA4002737480852AD5A876121C428A7F1E76
98AFF92894B67F3786814478FCFED2CF95FE373FE61F5BA24C0BC508651747F2
E31995DDB0BB2E99B7676292AC66FF5CBDF6187C2DFB2E694010EC00AB4B94AF
4C69D04B76C6F1DBEEB4D9EDA9FD1BA6303200F666DD5D7B61A46D84EBF94124
8F5CFF89D380C3CE884A5BBE195C500D8DF81EC6FC0A30E195BABA09D0A80241
CBF6AC448564E9F6195C6E1F5F4A7ABC7575D435FA36A5754468CFA7CD2DA7F1
F687664FCF245203C884E20462039A244B3BE175AF1661889CA6CD46C6F5FC79
755B8DFF473382129DDB7D50F5AB149217AEA8BCD81695CF0E0B2EEA7F657010
92471200B6FE61A1060D768F340C31C8165D7EB2655F70BF911564A5E4FA24F0
86E869633D2976CA45A3B5216F54D825E01DBF849B5654CBA21E3D4338B92AE3
A6736293D7524FFC8C5FA533175A8A41EB8E423EFDD206B36A8CD0CD02071F8F
2E2D6D8C6AACB4E7EEE669591974DF789E468048706584C2900F5758997E65A5
7F0B1AAF1EC8373490952252DF4B8B90C535B197EF4C56491DDBC591A276BEEE
B4B6A6759E0E7DFE5F484F20D2F68871713A8B26959EB85272349C9F8630C00C
56618EFCA3655058FFA1C3DB2B117932D581E92DDF7D79A3BDD18890F3F2150B
9BC3A70810ED3225B0F808B4F4A82F5C8072152DA9F1D007312A8836781FB1C1
D8DA44843297A0271AE2E8395BD6386DBE50FC094C200CA127E851A7FCF927F8
601AD4D7F2B0A04070C343004EF6CD3A8C8BE7ADAD91BC23E62860770BD1AC01
C5C5DBEA79CD838479DD9BE8928762C89E5A04AB06D7039A5F391C8A08A87C88
B6B770260E3E07A74CCDB61ECC07C0D504937CBBB8300BD8DAF220907586B08B
707E270ACEF6C3E12D2A1B0A764CDE48B225AF745EB5B785D2AB6863AAFBDA8C
CE214A7B3AD7E174CFDC61B3E6BED82C2D635AB43F5433733B571BA9F08507D5
907ACCA6F074A336576E42F99EF9A875855C4A38486151FBAAC9AEFBCFF3E090
6C50A090BB954BA3546B5BD994047685E98F84CCD0C190B740B241C1E57B7835
78E4AE0D73F22CBE83414AB3ADF769CC9444E89F22489D3B7EF574BCBFCF3F98
548A744A82837AC2AD15A74E6801B6FC3920A08359884F4F4552F81638830681
04A401F1C6EDA5EBFBB317354EAE6E1BBDEE1ACE29AE1F649C002D894D0E8758
C58000E7BADA5FF8385F34DC2159BBD9B82AC8B696EE34E21F7C1D444F17C94A
F52D4F9906D571D11ACE1F4F74BD7CFACF2A5DE493245D4B2BA5990A9CAFC6DD
5121462D578532A5E890A362CC3F3C9E3F8984F4571E016606F1482DD24E00A1
128493FFF854E422F825D6D148C6637A832357E647F9C47846B25496A81CA84F
C176ABB40404A4AF36D6CC2BA89F858EDFC0755D6ACD2D679E07D60E83C37C49
B71BD9C42B10FE815C9A30BECF058FEACB139F828D837A02610DAD16FDF59956
2C19BB84F4BC5138F8323CBB7C458D7BCE088A4810E4038E81B3198DC1C8A3F2
0787DC53D58D43CEEA7BB2D2780B5DA37A23DF3FACFB132A8F312A64D2D03E1B
BE9956020A4724974AFBFD149DDE6727F622057418C1033DD02093EF62349409
9E03E8219E76154152939CC2235993B53F39F1FE7D71216BADDED9B73C6BCC26
3A7065CD2CD256DE9BDD95EA1ED77A460DE4DD837F0D5E620A28CEDEFFF9E515
E8F21C245B086B23530E1A90BB56AE151401CE679BA9E7296D1C4F6BDEA3630F
F29442647A163F9594E45B3AEDF86B98BD0373D934D77F0E61583E1659E5B969
DDB2745CB43795E7B8597F7A9E1C86E22E91D85A1F820DEFD698872A60F8E2ED
A04EB860DD74A061FD8A7BA1A27EF8815A32AD3523C96B4471D7F7006966A551
E4F03525868F7FA49D3DE8EF12972A74C070281E85D96C318D37A7FACF6E8E55
6E71A3AE12B3ABC4CEAC4755E1A4617EFF11145D751FE356D390733361DF0D5A
2B7F66979B06C5C112F708B147E9613B7966CDB95926A22585B02AADDCAB7901
161AFDF91AB1E8E6D57C41167CF86BE0977FBC43CD5096862C5C93464A621455
9814F3E1B427A64CE6DEE6218CBA812147A5B346F48067C00CA8DE814E9DF881
DC4F954D28716F11929127DC1C5F1DDE28143AEE8EDFC48BFB9923E02C4958C2
90C918744331177DED2034FE92B98E7F640CAC456B189BDC709E8804A8751FA0
E4994CAE7D57BCC9C3AC1DEAD5ACDA36E3250A8C01286DD59F4CB5511FBA5BCB
E3A977F5C2107D72EB34872EFA4AA31BD17D7B3D3AD03550FF850943F5D064D8
0BB64477A181875F265F5466EB879436A5266A4A97A4B3129B1B94B0CA21B3F0
EC377C7A4739BDD3A8C9E04B4B483290A8EA8761F026E25F3508C48A66FB7CA2
DECBFF9E0101CA18D5DED17881ABB1B386208FA66E00A7370F5A0E4F97D8E6FB
6DF9F811AB8EC66E47179AD020505218AECD8DED98DE82B02B6D87C87CAD6C88
551BE9A0F44EA0FB8BF8A82FB73E70883B51B8391D1B6414DCD25E32934B2832
924F86F4921456352D4ED7B0740BF443EAFD9093B607B9743911B42F8E8EFAE1
A031D3F65B5A50D1B2DEAAF96F77D41A0CE67E0119B6A33BC362287EFBBE7D4E
2E872A3F93A0742E1414365257379D350CA59F6319B57F9C59B2758C5E371FD3
F9E41AD122BBD77D680773E52244C858AC5BB08538CD4C8E81E559E68EA1EBFB
3036079F4F10AD6923FA5F566D11C862BCC0B7508F516404D0F862632BF62FEF
484CE567F7B6EFAACA508E229B369DD7B49719D74BFC1BA62679A2B2236B6CDE
2B642224CC5BB2703D6C05F81D37C7118DFAB070513D673A47BFD5FD53C73AD0
BB65F575794A8163E47224F9D4E1B6E603F83CDB02F8E79DC52F8AA1F8698F42
DCD022877A2FF685E171A1B4BD1B2AF35F33C95A43B67445A48E18A1F80839F0
C7FB7B8DED678761FE9C3FB058232FF2383984E8C7DBB8B25B16DADB4AC3D1FB
10387E940E955B6A220247B82D7D44F3417C7A44A2B441F29D5A3E48A7966E3E
C56E8093A9FA2D3B75E9E948B9C069265561E19CBE929EC9D61EFC400D008B7B
C73C16254B2BA5144620B0403E813161B118F1508071F854FCDD9ED5954648EE
EB07B143CC272FA607C4891471E34B497F947F4A5E0D8D7E697716EFC560DE11
78D27C160C0106926121469B80150F445AD130F09C4F248A5488BC48755E1534
190F20FB7344F560D8332A25A50B80A2D6872F81579046DBCFE3D3E900C41800
DA4900C8BFD08490A45E5739682B2650348C7412A77B585045EFD8EA059A0652
11725D68EDE1478D0CAD1CE29873171D72FFC187B6EA0D59D1D2749DFBEDD612
A178F03CD369D9F7BEBA44FB50846965A59163181EAF5A5272E53992C75B4C93
6ADAF9E4C8858CF6F50E210DCA8BA4772E5D29FFA611B0C58C46B2CD1BC6C578
14796C042659502B2BD67C5BA5A9E40B79F73F0AA3E8990B11E3838C60C4395E
5F769E2C3C87E722CB47A63420B347BEE57D73261FD84CBAF111ED55D7F58D09
F6D5E55CE8503553951F1A0D38A97849286D6B3C5A19D06B07E20D96E34E7D83
AA2EBA075E3AFF05A44A0F95D920509656D395453FAC40BEF9324C339B72D49C
34642011C45D37BF5977256D0392FFC79EC9565A4544DCD060EBFBDD995CA763
A3F677E6C5D889F80EF853D1F3B6C7D585169F15A5F91AE45A6EB570969A37BC
357A30FF770908E08A0412A69715692821604A3D4B856D87AB6682F183DF9BF5
C48541376E1138043F3A6A7C1117236E426BC28239BFE27813C40AE9D9D81758
63797D2B804F97192ED0B8D795DB3A95FCF3E75EB4A3A28712A2808698A38EAC
D3A3C80607A425D8E8DE057495B044265550EBC7F2EDDB7F4D4FB03716FF675C
840BC8BB8575270D75B36B147E89FF9F8B6619D59613A83DB235C5B5A7046D94
18B624FCED796227453244DED24B45A79E59DF3F308A4C1E1861B4A6C5D133C6
4DD3C3EFFC1DD9A7B02CAE661F0850102096E4B7661151A5D5D0CE03540EA723
0B8748BEAB1E2ED7FBE853DA9BE5494DE3D3442ECD0F7B7119564B019A47903F
ACB10718F03607DA35E7D122006FB7BE9443AB66EBBBBCB4B96C8E9E27F3A2A4
0D03BCD786DB608DC5ED725BFBFEF430ADDE7594FD3CFBDB064F0EA97FC009D3
51DD2C93362E83F3ED6242429EF31E2DAEB4160B61951068C85E47C11CF0D4EF
2862E2659D8DE50DCC3F369C71210F41A6EE506DCBCB5C87F054346AA5EEA50E
75AFD728E6CCE4F7F4EA8D2CD930304B5A92D32A6511FBE14B1DABCDA48C535B
63C948C798B8A78093840D996F8140C2D5A7490BCBCC3BBFB63A7815A1232F01
07AB72F9B5FBC6CC276514CD536A5011B140985215C1DE1C80901A0018F3300C
02862DDC0AC4376AD016AC0E47ABE2739D0C7A8B666EF39FA05145F3D228A163
0F1FC50464ABE4BABD4FB475992AC73F84FD75CB36F23CC1C20D4384BD424FE8
EE1220205A92A632F4D8927FFFEBD23AF8840A00FDFF104B3458C057180A24D0
8491C01CACF08A06CE4F312E74CFDD92722CCFD7FA1EA32868CC09B5CCC93EB0
DBB014C3D65A76A9AA90960C504B9118696E8EF6DEDEB961261A213D8DB345C1
D18ED6515E98A172AB2B443FB69421C6A01FE639D79D829CA012203FCBAF68E7
724255E341CF27E4ECBA3E2486611EBDFB876E74E57DAC4EB4B0652FEE4D0930
D07BE239A807A760E6E24F01ECC67855038D16B3CA81BDD5081B2310B2982EB4
54A53BCD1DCE4AB6E7671F998C44D75FB5883838A000319CB4D2C534CA5D1F48
B65F7C75F9AD2C8621BA1919851F92E56B906A40810F249351BE8026310E2D56
5B26EC2DED0682B0281696B9FD471B2545EB4E2F188604DB84345B17D6252F47
F05A34C2E70D90B6C2256882A71B661E8406988C267F8C24E9961B390A8DE013
CEAD9BE4FB050096DEA6AF7AD28EEE01F43F9B90715265C684ACF16A2C762BB6
918F3BC1F476A7B70B541FA74A58FBADEAE5E0D201C8BD3DF5140511F7356DDB
80510129A610D5B07BCCAD899A3107F566DDD020C96D214BB6B90D3F05F6B9EF
1E9C73E96DE10D5F02C87E51620A85605F390F0875AAACAA5C565DA089FA0657
15DE2E265490C160BCD95E2BCDECB4732B312F2D026315813B73D4ED262D0AEB
8FEBCF84315508D6A544ED3DD9C0D79D24800DC0049420425F8048100843698D
BAC41CCD003A9F9345DDD9A3F2DA1A5C9441405834608AD68DECD28CA5638D9B
8EE065A34D7E381EBD55DA4F07A7EC02B1830D6F30A4C67B5FA6D9EDFE110203
F3E4D1A638ED16C15CA8097772704C7BE81C821782D47AE9C77923756CAEA58A
867DC07A1F829A2C75A36470AF94667CF3B9B8A2E0B98D49593717B6479E5E37
F1D5C915E1D4284BF19A284FD1E5D3110D88CEB822CA586B8DA3435F50164B94
593F36809D5A1EECE62DA21DD46BA458DCA4D4DD3958E8108ABEEA603DAC580D
C31A761953F8B3CD92A71B1028CA78BE4F7A1CFA90B0A31BFFEBF03D1AEEEA6D
B3C6EA9F455D9DF54E56AE91B22CD6701EB1C5EC8021344F6A7E6EB6943B66C3
365155DD41C0248467A32B590B9F0FAAD50D12FC435078F9E3DA826C24BFD88F
0E291B200F989CF0C54B7497D24A65CC6650D8A51D8071155C602BA4F5231F3E
4B87E98094E4D601EDA1DDBF4607D4BE032C3B9181AA25121CF1A4C6F124F6C3
60CBF1FB1C6CCDEBC61FFA42681CB0D145DEF1AEA96A5349BE1532C224970F6A
8D93D82EA0FAC0367B35C714D82A9C7EEE75CDB59366698AC821BE0D84FFB4FA
6B2C65E7F4FFEF03939C64D2614CFBA2480652838A0DDC831E3A0CA89196A457
8BD397C05E546FEC646421A28C2A3800453BA7E06ED22B4B204C9E192FDC2FDE
BF704129077B74817E71154CD59AEA15C3B8E9B99C3D20E9399F796F91BFA1DD
EC19C468988D23D85EA92E4C5683568DD3C5D3D759D87C7C61F42C3E18BF3C2D
C9C8A68F99E039BB23B982BB66C0435BA8B8B3CA595A4AE5CB5FDF42E672B04A
D365E87CDF12DF8B87AC4AE142CE66F165A14F892A14761B29D2579FD9D0D4A9
AC23F94B577F79D8E06E04D711FF63E9D03807A945C7ABDC61B3E40B9083345F
EFC819F36250D44BF6144CA74C4958B9D2666BE7EA2B4E01B3A103DDD7E5E143
DAA851A494B020A9AB4A79EB43F7DBFB4AC208DBC9696B3A27A15E6053ACC5C0
FF620626AA8BE9AA77E5474F00B40D8CE39AF9B3A6E49228DEFB3A3C17635D42
CBB71A15B4A89DD97ADDA7C8FF66AF51EDF40BF883CD1880BB66D690CC7140D5
309FAD191727A708A9027E806CB93839DF93E44F6F88CD07F20E6E63E276B9C0
E930685428C9C17195357D8441052E0B1DD8A617C77CCF200C98383EB381B65B
B4BD42E0443572216ECEB9708B8666C5B4C8B04F48E011FD48BDD00E68AD9CE8
F055DA0152754A637AB5AB2226472D58764C2938E683DAFFC29B28A429C3515F
85C4BE4EC0010AF04F30176DE2D8B65499D12F862D41D3CD5D52438D9236CEC5
C1DCC93A37F7F836F8A388836078820662CE07AC6AEF38AA5BFA2DE21C25CA37
510475477AEAD48442DA849C38E9CC54FC5C8932D7517928C4895D23846FD0C9
4E79DD90BBE25E0840135200CDF656071C0A3813BAB3480511737D9486760C29
9FAE2375FA8C2C663656D3E33CB4BFAA6EFD8B928B7C03A9DE84A7F936439E6F
5BCD1E85ED1BB961D1CC279EE8B13A0EABB7094585B2E507C0587B28CBC9BC95
9BD071B7E1C204C5CC9B8BFF6BC2F190AFA5B66BB018BAB6389B46035FA23660
D99214390EF4F32C0A9934A3A8958623553311DAB5DA3DBA0121467908538545
D9F031AFB5C02A6A97CDBF63B48B09BE325781786A936547A04C2936D26F48F0
29259E19B8F57C6866F1538B4E9571E7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBXTI10
%!PS-AdobeFont-1.0: CMBXTI10 003.002
%%Title: CMBXTI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBXTI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBXTI10 known{/CMBXTI10 findfont dup/UniqueID known{dup
/UniqueID get 5000771 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBXTI10 def
/FontBBox {-29 -250 1274 754 }readonly def
/UniqueID 5000771 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBXTI10.) readonly def
/FullName (CMBXTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 41 /parenright put
dup 58 /colon put
dup 66 /B put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1BA61972029CF9B4E1F6A
FFF97E53D6378FFF9043566D67519B5C031015C0D52A7B292D219A2BEE49FA56
820ED09A28447A71C5CC595AB286EE693EC741AEABDAB0688F7B46D9D584CB99
DEB048F0C0723F0D7FB57C896218D2AA0AA4DE241ABD632E25F0B47243CB7DA2
EE53CCAF1682D9B580006432DD7D53D06E90B3457FDBE18179DE415DACAF00EB
4E01CB49CE25429F8BD45069477DE90EDC87EAC15285D321569F8C19AB5100B1
DF31636EF29DDEB4BFA2AD85B83CC7112220D70E69D5A39BC3558F067A93C6D8
7A78976F7B93A589F0271A034D1A8BBBF082841719E2901720E89568E9376AEF
8D41ABE4BAF9E79809F5BCACF29858F8675E37804758D58F8909027A00CCCC32
5441C72BCB031D09077BA9F778BDF52F172C2EE62F0B98EF852ACE037C6240B2
671C0F01B7D4A9276A8F6DE3B6BFC2C34DC309E5888E249E398CD60549DDB61E
7E36890B1E37E26126485E49114B7CB938E2733D9A14288C3A763D326D7D9183
46B970D455050FB97612BDB2EB29E7D71C909B10CA1D479176652712C112376B
085E9F99C9A488C8876954EFB7520CF97D08AD84341FB55764879C5CDF8EEFF7
DD31DB564110A07119E52453B778531FE181D09D1A9799D7AF4773AAF77EFF2C
2091194E301CD88C97CCA29AAED2CD68ACCD8CCE44B9F24889A83048B7208BAA
84E136C58F9DAAF73815C6025DB64C45014BC472358DC014D243D189ECB1EEB3
267345D1FF4B6A01246CCF5FA90BB355E3734A7C774DE68C01B5F356D645C4E0
1D0B7734E05EA28AC6A9BB2123EF3C6E27F52982A7612A352213C6AE3E80A819
2304A70DB8A2441DC5321ACE962C6480AF736920B64A2B433DCC3519EC8B577A
30B0819700A2281212CAC280A0DCC50E78295B98B2DF97A78BDA1879E6B70C10
7BD15FE29C4EB1D5A33037F0AC9BF8CC1FE88C52CD114EB33F1C6F8ED88EF98F
DD0C3913DFB36147F581C91CE83CD73A0D012F3D0FFB162C0F4597ADC8D93911
0DC6D68F9FE702FD0EAC5039D462756551C379C5F4DBFE05AD2D1BE0EB389AE2
391E461DC4455E0D3C3E46F3FE9BEF488730D71ACAA63BEE72367C52C4F84766
C24E13D1E63791B4838161AEF8D0134145BBFA4D848CFFF1DED6814A7215F4F3
3E2D654C27F3279DBB22A568B7BD1D5A9D75C7778D36C36BDBE32C8FAE4A9209
20AF8B705A77CFF4AA9ECCF6011F0A359556ADBEBDAF5BB706FE6FF4A745D841
102279B66CE0C842DF8C2673ADAE354B2811C48DB05994388AE4053F4651A884
48DBEBF20FD05DB617F8FECB667B748BB5741D6EB62DDDD0FC58537EAAD6FC22
A11ED24D34827C3446C8FB81E4A0E904206A1053AA9E718B0405C6A7B8B893E9
30E7A31B9AF8A56B5EFE72FB5AEEA79D56E19E037BB4ABCEE079ADB53CA546CF
D98F7B38973CE3A6DFB315E87DD1E60C34344656D76C16E1DDA43C2ED276458B
11D7F4CF3692525C0D8B6307A2993F400760275A8648A0048E0C406279D48045
D77A92E99F9CB5C05E8202416EB6FF308C4C979895211450BCA82B19B33E7240
CEC18204C09AB3D7F8025C0C909BC03A1851287ABDB975A32C3FD8A1C99DD90D
4B1CE2F5DDCF140D4D5A19F33241D27E8EBEF4ED569AAC255E47813F31B30109
7075766D5BC1731B082531F3D132A937717EF67F496813139E8E263C088F62D3
DE0EA4ADAF3C088F562B0BACDC184DA3BD0D5A8A4B8EB487D0B6F1B74A969942
91CE8CC7A33670BBDB3F1E1D791F7F1D3A3F3183F2410DEF99EB932CA80FD931
C62D09A0ECF271B5BA043C9A214CE631CF8239ED0640BD134737A3E31B851DBA
912B507F72B80DD9CDD23A697F91D66E59346FA3A75726C386827D910714C989
5464B041E69F4B87290BAD381600AE0A976148CBEC8DADBFDF0CBD7148C3AAA1
7AE2EB15686E1AF68B4C90130F795E86C9AB88556E429EC943147DF363029B81
4C637900FBA19DD98792F4CC9888AEFBF9F7765B817ABE83494CA3FBDC79CA03
86CB628F75612209DE9CA4D585565E9509D5DDB8C00A229F07918B062265AB29
176657CBBF2382A219E573667B14687647DAA7E9203FEB4CC94B10B57F4B1143
C4962B6A888D62093A1D49E2C7D65C29C500B61E810BFB94DC2DDBCCD8B6C61A
911C2643F55E9E2101B1DC7D7176F7743492AE7CB84D460E8C00E91E5486117B
D9ABA9E16D1606705A0F698EDED5AA877A2CE7EEF25ED1D97EB348115CE5BF26
8A48BE961CDFC6F543BC89DAF665A681908ECD8CAD545D0A72C9C184CE67F6BD
7B51399925DE379BC59E9155A30C67D73D01BCBB1886F8276AAE58B2422DEBA8
266CADC83429DAF4F80CB25E0BF455CD7863CFFEA9E318FD043908D427CC07DD
683F6D977680E9B4F6333D4BE7E729F4D15C07C917862B47F0DB2E31500ED372
A556A8B617FADDA12A2F62DA2D9AB46479FFBE4FA42D9B8D597CCF4E6D04B418
8A9B523F4678DB40E7F325F81C1EB345D71849E57B059653CAAC7D9D56CB2E3D
D4F532A2D674BDBDE970D9211A3EEEB005128BBB5E0C313B42554F058EA1D180
BFBC9521FADB7DE03EAFE314CDA873C3532CDDB83EB0A6A7454EE85A4C36AF2E
895BE8309FEA168B73C6AEB2D454B234F1E2EB554C7406B79A859F6B303BE795
B6B4DBF104E75838F3EFBCF85E0B865779B016AC38272F8BBACDEB13164EB282
B59BFEB1E3392885916FEEF86A8A975DB9BFFF17B9E2173CD18264BB14CF5633
FD4BA46D7692CF7CEAB7EAE80385566061315F8DB8A7F495E68D4008B09BAF99
DF4275727F08C5FC58BE9A084B267D0BA62A907F22C466A3A79CEA6C207177AE
B1254F0810E6092DE5DB1BD3F238EF705DD4E806E0EB1988F2AC92EFB8843064
3CC3CA506D9AAA0CA559AE7157603D34BEC19D6019F0566974BB835DA172FE37
C15C0367C8FC164184648BAB678D37871F7F610EDAFE3F49289C6320F9CC113D
44775EDE28FEF4E14EB5B426C06058FD32AD12B42A2FFA0D9CF0C7BDFB6D7C4D
72F4FDB716D7C8E7DE84F614487ADF4DF5F304370043B25E07445F8C65109708
EB771F62E01350B7C9B659D05305CC3E4D94378BFADFD8D94E5704FEB2BAF58A
5B874C7EBCED806F068E93D4DB888B325CE246D02D1220ABF55CE646DFB45F07
CB8488F229A5562968B079C2CE2067B22B98904D977E3EAA82A6BD44135A6F07
36E3252FDCE218EB5DB8773E2DAFFD1DAD53671EB3D83A275D011BF5D501A22D
407AE09257CD21297B617E0443FBDAA297D37F66AC436DB78B410E79A002233A
0D7DA619CCA9DA4714325A51CB0BBE9EB6CEA352BB1A0A2FF83610B2A17E1948
0E9285E1570CFCB8EC7E1D691A72611D336DE5C6626A1D1D2DF363A1D781DBE6
1235F1D1805CC2A8C670005F84FD468167F8640B12929CF347538B94EB37DA39
904D4763D93E757AE2B4C775D98E23BA983E35992A292A04976544EC462CA656
E5EC37EE8EE46BF1C3B0B4C912DF05AE1535CC654000B06BCDC95D9C6B5F36F8
FD8A0EB31A02C2B863DEBF8FEDBC57D5F93D2604321FA66070D14FED60441E09
999B90A5FB715347583A35314381554031BCE4E6E73AD3FCBB61ED0D4C015863
119C1D945E981AF3F38C81EB3A350A70A63EB06119965C90D7EBA669359FCBDF
A87C4DB920F8F3D99C73A0DF7E10D3C410696D679CBFAE831E3E99FEF6C038F6
69C58E1EB6F60FF587F5EC561629EF429734CB886AF914AC3E6BC04F21D73F18
4CA12D7E033B301C181D15101A986BB95132DABEE082A617520CF95EC9069499
A02F073D7DBE41726B51FC05A9348953495B4CDE8D0A8F8C04D07ABEB3BA0076
3A80F2E3B5804947E690DB3A7B3BC6C48A67F5D45F5C658FECFF28790B709385
D24D02FC3B0C9F9AB04E168BAC78F0837D9BD402C1ABFA84148FD815240108CD
511E50FB8E64F20058EE54E4ED45181AD9BB777DEE3303C4991EF8EC56B6C278
CE63F6C2FF92308A25B9AFDB4585A808AB3F03D8A15A20FFE399DEE429C959F8
B3DFDF81433C41CEAC874479A2C51F9FAEAAD5B7B23230B99523FB256896A85A
8C48C057A70DE745F753B4183AAA6F84B4ACAB090F33CC2C31186D1D8A0218A7
4E1987D86B9C3602BA294CD29FEECE4187523CF511FD075692B1C080A5A22281
BAAA4EA701D7573D083E2F6EDEA3D49FEAFF2CBF989703E83828E6C7E324558A
FB73E3388F0B0E6A97EDED5A9553DD33DBBBBAF2174A562AE2B8A4B6E7D13E90
FF9B7D650231CBF9EE48DBDB00AEE2E0FEBF8D6778F19CBCB8766A0ACC9BCE26
59771BFA97CE7BA811A3A6C8CBEE899839E525DA2ECDF66CD99FCED902AA102D
92CD9A279453BA74EF8C0CF32C11A412A05CFA2C187833F885F359DCEA34EE24
E90F7F107A23D9EE269C15A647916F56C32543AD5F81D90C84B8305E5BFEF1F3
B356CEEB5BAC54AA00DC9C6F03B4AFCF7AA4D31964377525A661FBB743D39964
47AFBF76C8FA874BCBB374B02C538AC626004EC8E1E9030D60C4A097CDAFC143
732FB7431008CF28ABEC4529F4689720D4EF580676CA855FFEDDC66B7C1DF07D
B89EE98C0DB6FAA5551ADE4D674B51E4E3FA4B24A3DB5196E01C6CA1DF5D669A
3C0FC57DC1F576C2BA14D5DE284614AF3276E3A1159CBF8D40426A60E8C5DD42
6F1307222DAA8AA78BEE55C27E26013120FB5471CB33CA4FB642B1C386018EE3
D4424CA411F49CD569CDACB51AB9BB5E66E1E13ED5F8BE0E912BC13C7B23E10C
042C33DA19656264D7473B4E0C3DABE14F9F94450D1113C88EEC18CFEE640A6D
9A40DA9CCED6EC5E2E9F1B357DA635C3A2C5A23874E496B868FD0260D30F1780
878A900B90637A1237C63D83335A3FD4A664321C048BF2273F9C4AE3161E1F06
E6EA5F3F15CFED43C622E0D7E245EDFB866398DFF2EC994674767B7F3DD853CA
356A3607C7BF8F9C6889EB9942ABE469EF88368742FB5C41D06125D2042EEA41
4B344AC718FEAEB308302F5607C06852A30CF778D236EC90CA10934C629FD598
90176264DBF9C1AEB33A6028B9EF09B06BCB182DA58ECCAA4E2E1FBB13868C98
CEB61223E9658EBF003AC67493587A156EFBE73EC88CCDD55C9C10CDFC52F7A7
B274D631DBB5D629F41AC8760741953A6B90C6E9E4D2C79702C59EECDC65D894
8317D67808CFBD81953AD32837A42EBBE48F77D6B387E272855E54ACD32D3377
E19724B3BB370A71C633C3A41A0523FC219EFD5310EB3CB5FC93F0F9E6BFB115
17E2B901016CE8DD44BFA8590EDEA88F5229FFDB83E401034C826F038D58C19E
54704A4E2E36B7738FC6F80DF4D82A5285853C49F9689363392536C3BA25C00B
7885E7DC3951E9B5D22414C9E9A264954CCCFAF8BCE70CFFD4F726263EBEBB70
D52A58B3D6BD029F555A630D687C7E7103C8B8F2B33EA41732D6FB7FA999CCA0
185A13C8BD80A2762AB9919C3E9FC07556BA8C7149B4CC5B58DBE84297E3E8D2
B34591D9FCAC659C0FE115F34ABA807DD94410AF8F532418382EF8F7980E1598
A97A61926B809FD771B2795C69E6B1F15FF0EED329FB793FA3FAF0580ED07F51
B0E1BC1401EA5026897990CF09F9750268AF812E89DA551EC14B457836CD38E5
C07179A3EE0ABD3A85C693ACA829A5E492FD4F1BF12725544FBC81FAA2004784
DB367184315C68BEE9FBB1D68F91C9D0901BAD3BDA4FFFC203C232276A495EF1
B2B82F36FE36716733F0E993B19407744C067324BDD2D5641977B1A118DBB844
104397F963CA2E01B7155CB84BB642FC315C028FE4502335F761A9DDBEF7ADE1
ABE87D31AF848A5285BD8328ED3E8A2A608590DA11968AA8C0D8010329A9E172
AAC2C7D0061B14EDAD1142FEBD3DDC0ED20023CF06BB146B3F58A6A197DDA1CB
2533B236FAF2825E8DFE70B79A0938D79664C1D26B4412FD10C76729CB22392E
8976960ABED0A03D5FDDC7C5C2C6221BA1FA08020B88FD9AA0CE8B5FD26D58A6
79339A2AE6730746B8413B6E05361755FBF11FBFA4974CC1AF36136803DB8282
A7F5429327B875D0FD222835C7AB82049CBDA6AD1731F6D06AD2A20027765CF6
2F7E4BE9521465A7C3E968DBCF95F2C62EB3829CE6DFE845EE20E8EA89CA6C46
BA14E5A920D8E28A4008C210F747622AE31F5F9036C70FA52BFFF08A4BAB3D5E
A2EF6E8656F89058F4A67933AF30E9A16467D563B2782268E2568868F677650A
74F415289CBAC0DECDF828485066AC07C011623DE9643DDE39840B1A739B33ED
3EC705C13DFB191472987059E5017002D278168B5280FA2E26C6D51CA663B384
F5CFF4A6232F5F68E185231EEA239904319E180F91DA98A63B38E16E138D2DCB
CFEFA5F3E5AC6FE764A3A9F3EB622117662AFD26A124933CB1E04AAB53923AF5
D9DD972536C4904A1602040545A9AD4904D867C1D0AB907D733EDC19EC093391
3B0EE96E8578527FD3D1204A25982635CCA01A9B101A843F6C373AC4C8E39E39
BB13AE6A0EA170B59987488481D38806D429E902801F9CE25EEDEB6012CC9EBA
0736820F82C640CD8C7D852D9EFFE6F769D7FDE1DD628861FF628BC0BA8EF127
26F83D7FCE6ED8785DBCE502DD0571A76D88B7FAC1E2DB24DB97394937A1EA17
031078EE07D00B554B9C892C68B624D3900266E8850287243BE44F11F86E95DC
00E89C5C47F573C0A7F1CD0CCD26498334C7D37A3AF4457CA805446A74344597
8D8C3D25FBA2350A878E23DE65D49E9E5F819484DC1B85ED2BDFF923216C101F
D8F411C1443AD7BCF5E90FDD6BD29899C86EB3ECC82832FE75A59EB3FA696F26
96A450E2504A473123A8D24956ABEF5ADAF5B3BB57FFA5364214AC0E9E245CCF
431DFB8A7A5104BD97D5E5104CA9A05774D0FCA9EC0458BD7289794FF19FD00E
2D05086336902514F5CF8141307C037E5D2E30B62D1C8A5A7682BC941A5445D8
A17F5670554AD4AE24EB95524CEBF2599D5D00AEDEE2B5537F869A46BF093296
C77F86ED5658C3DD3AB9C25850624A53F6573A51C7AD9F43EB8320DFA31F7F58
E0FDFA9FF640DB5B55FB5C4E014A8C50E062F13D573C845231F98CDE7414BD44
0AD4CE9E00FB39BC93C3D1C8F5FEC652FC28AD9EF814CD964DEFC5813828B0A3
8AB0E0BE6E3CD60259B8A50F95CB02EB685DDE048D73DB0460985EB16DA749DE
3EE1625182EDC552F104E547D22E62501D9D4EABC09531E6457B7AB148FFBAC7
927318F8BE99EAE5AC9E6AE81081E236187C2D384A92494DE6BD1FDCC5A79413
609F865C6067EB60B83B1E0D49D2CABF88F252377787534037AEA74A842CF21A
5514F3A89A00EEA33793D63040EC2E1231C04026B8DFE67E0E0B460E3BC6E60F
71AB1C05F295F617829255BBBAD68D6D7E5AEE12DAD835A693A661AD9923BB65
C781B9085640D3A5317C312DD3C6159C15D8DAA3A592C9F4B4AB648B160E4B3B
D2E3DD475573570F5EE110AE5BCA3C499513061F202DB76ECBB5316F21F04195
4B9EFF754A628ECC2B68077CD6072C630CB99421BA3D0D1DA24CC09B8D42E8EC
B52EBAA0E16DE13F0F2E235292A0063ED390D9A8E685160134E931F924D150C3
B1E315CCC86F2AC29D02D0D98DEB83DFC7531128E0AB55B5F7D161A44DE01547
38DE065666440E46D94CC4AC21C42F362D222A5CEB4FE9FAC0892ABAA08F3A3A
B76A22CF73E343BADA5C89355A821C67A626C0FA6F8742178B9562543607FA64
8F9FC0971734B99E476E36E9127419F27469DD3BA6A1D82680155B46073D42A8
AAE4A6F8B0B2ED3A99469BCF9EBD004DB631F105D77CDF18A2EDA5801DE620C8
987AF2A7C5BAB3F09769CB0CCA5B1CFA6A01DC0EDDAF693D168F9CD580D7AD66
A2DE7D9CAFBA0562AB6D20C4F2D4F37A3B26398A1D5AD2F84F0E1339008A37D7
6973B67E1EDE40002AA5F65AFD81A00CA4343ACD98CE454DA2E3E3FA4916BCFF
9E4C39B3B73A2BD72D4B83CDC6D0A1C4FA92634DD6A46A860FA2AF035F558C1D
BB47D3903FFD37E0BF91A6F95BAADF2996F9AFE9700B1026F344147723E172CE
EB00514439893A8140200B2C30952A4DD9221DE09A77B967058F386437E7BEA3
2C7762AC27D37041D63165EB3BE7A22843B9D8499957CB6F4CDC952EECB94CF8
93FB6B35C3A90D8B322B8C2B0E7DD71884F926D8395E8CDA17A60E242F8FF0C0
C95BC09BC2CD796AFE903FB45F7C2C1342F3A4703850FBD58F43BF82FA7C3639
08DEEDF872E8D57F2F631C34FD0E7EE6B3735317429D111049B6639DA160DDA2
5552353E6ED578ECFA6389BB0B585FCA9CC4C7EB627C6AEA5A4A2F0D485340C7
A54B3FBD5192D368BA257A95C8EFB551F57D03F6B79724668B70A0EFDB234B24
EDE47DC3E804676888A092FC0394FF5C195096A8A7031F62438A961F2475590B
4674D05AAAF9090E019C03467301B40FBA81E3809E377B2BAB882F117D3871A0
6E1FFBDF0AD3D5A7FE75FFDE652556FF5960B9A211D263CF1C786660F544C311
2A16B7C9861719D930C1DFE3B27D8597A0757DB752635E7CBB769246A796FA4F
3B5A53A15DF07039805E87938B15A9B4D9ABD4FC66F07DC492632D635B659892
67868B4AFD52D8E8272375FB617BD92443AD527A546AF80BAE5BD0925E73DA3F
F72B854F765D7BD588D0816444906C84AB964654F70FC34E2041406754DC1216
DC16207A44F8582BA319EAAF39D4230A1C5691C23635BCDFD2E1545B5BDE0305
AA817A460C6AB6E25CB1F42E158464B89D0BA03D3D3C93BADB47B1E6852F6ABA
EBF28407B814FD8D40E01A35FB442313A4FE0726CE630CC7870E2CE89B1B812D
48F649117CA18CA4495BDDC144D0066801763083B7D94A67FAE37BED5459F1CC
F3E3DE56025A0A66AFDCED16A032C581F5D9AEEF82A66021615A5E87AE51B54F
D3E9FDEC25F2DE0FA4722173064FDD31C603BDCCA4CACA9F93FE356A73542610
D6A54B92B26D991558A01E4D5F159CFF15FA287B149E3E32B64195FF76A5F465
97811898E00B0EDA6770FA7B5168D35FEF85854A81E2CE146E6D7CDA58E498B5
E58677D515E8156959B33369FBD7F53B29E69508EAEF92F42DD41204C0D2E4A3
9F7D254179E5F0DC67B6234BE98A0AEA12F233DF5DC12EDC516C2A2BA1206403
4A729075CE02C03150C0F495D684A3CFB9574CD5C80D77C32E999668B1D8D16C
F3ED672C0BFC9EE7D3CE15E774CC26EE077ED700ED5EDD4B14E1BCD502CA1958
BEE5560667548A47D48CBFD816C9FDF25AA44EEF7C49E8A469BE2567E27FEA2D
580B8B768A5DEB6192AE953A017F8A15AB5E3FF83BA01E198396FAB53FA3C353
D7D69C0F85520F4FC286F9E5560B77D3846600D81986846ADF394EA5D34A3CB7
638C1C30CE1BA61FC911C23A958CF6E245BCCCC20AD1465C9C788721CC1D05E9
3DCCCB79E2ECA72782F5DC5B9B964A3EA1EDE3517308DE286EA5EB794973FD5E
2884E47DD860113469E8761046A633B8025C12F122B2E77395CE9C4DF4E83499
09045CB2D8FE622BCA3C4EF8DE62363A8286DE1686E8777B47F24CB0C86C84BB
F307ECF08F87AF7CB1F70600241507CD9A6EBA682FEE77FAB99771538442985F
CBF1F70C971CCF822769E3F0862E176F0029FD632C1262B86A162314D98FBA78
CC7AA0A9FEC9AF4568CDDEE8F0D227A93B6744B73F5FE886FEC5BC068C98E90E
8FB9C7C7A4BF4DF6D6E0D5C0CF741AD37A657B90641EF2ED3AE656904CD64241
52C27EB534D6FB91561DBBB78934476646728EC43AB77E0FEC03E9EB9A23218E
223158C8C42F823D8C4165D231A0FB31C7CA783FD42789358223B96B0E8E6CC6
8996A99D51A40BE1266A191DB64CCC164D22561DEEA37A8FB69C4170CB06C41D
5D5373828BDBD5F9FF06FF626DA4D6EFC2CC9D7AC8B06190C4B84551B4A212D9
B631FADFD70C7AD2C09ADD110B155257916B593A3E34B2D88DA21D7C17E02FCF
08E8DEC83C21D99358E1824873669DFB54A7B1803B0FC882B80D1EDC5D10EE14
E56E8BA267615C1C3B276F0E4ED8A66DD77004BFC3E6F8FB23256A256CDF8378
F2B974B9A4638CFA26106CA9DF278E8BADF7E17BF53E2322434FCD8E58B4A34F
9E4FFB6B994AF732619E871229F22BDA6CEB57C6CC1A086B5D85EC14921ABFAF
F74FB01215A1E598CD07C1EF7D98D3212AC53F967AB2E554E4C82079B828FF5D
5DE134A4B9389DFAE439EA943080B188F7C05113678B89D2A1C7E40F868DF380
DD9B1AD92D5DCB8B1D0EA3AAAF3F707250B5D7EFA8DEF09F01F15181FFE21DE8
353AD222B4919F6AB55D364CB938AE16F09C4A1DD8384A0C40C6461DB06678C8
DEB5130EBB7CB3A59A6C1B38B51D03471BBD928E195679D2975B20B2DC01702D
3BB77E9D129AC392EA70B53C140933F2A6BAE4B494178A02F4219ACDC4E06B1C
F9C8F98DD7EB0F46E4636A5830D8979F543C0F9708587DA7A93B760BC154AEB1
EB7B64EC35B600A4D6B63BF0640A716C39CD292F491ED6322B6133DCD0AE57EB
09B33D3C4ED6C9740820CF43177C9CC42FF0E963FDA55A7D3710AB632B6B4AC6
5EC6908F9DFC402C718F0E195F5B23498558B4972FD55BBB5430DCAA0A3D97AC
1359DE8A02092C40FB347E22AA56BB0A75D13E97C3B089B2F04A65D43404A6AC
103E994B62D1B36F54CE477C2B5BCDB2E7658686D80148B65A0CD0F919889BBB
D009F21EF860A6B2CF6A26E86B3E686D16C89C5911F3ECECEABEA6B57EA3B0DC
1F3C372A3013D1E564C1BF8935F299B70AE91CAEDFF7AE0834338EF8385B45D4
4B0957994F24B2ABF71E827DA42D8C27C6C0F75617D774BC6D76301A80417AA7
8ABD31681CAAE334AF44638A3CF46D0DA03C7035DBAEFD342ED3C5FDCD794B6D
B4E04480AA99B38478E09B3FD3618A28A008BA7134CD8F631AB10A39A632F8D6
322DF3FFF3D49A59932A6875686A5FA27E2549041DA3796797134440ED954A0E
9B10DC5FA8220932B14E373B20F8913638A4F36D3BF8231CA54B44B5DDF6D1D2
C76675B44DEC59D8FDDE8705C02BE68DB9728D6AF96A5C4152D62BD6A0AD1ED4
F3CF14033168711BB4943A4A8B3983633BA88DE091156029B96AACF76E9134E8
9650364E75B8CB6B81012F985CDD6DEDD967398FF493274607B464B6DD35105F
C6E45227F25842E1D2634F33570167F19CD4DAD5C56E3183D1F4738772512DA8
83CABC8D8A18C04CE265BA714D78E95066F4F6BD383463B07CFC72B4616BDC1B
A4A84F7B708490C537ED78B9B437A9AEA091114548AD53C9D8B7671DB59CA11E
E5A451AB1DC88E4702FB7DF3E19A9684DABBE8C4AEA172E9F743A073F7BDF948
6111999D4CEF872D43CAEAB2BB8A17053B24AB85F8D411A5731BDF3D91BF79BA
2A927202C673AA9B239146B47C75E0259587FD34124AC9A20BE68ED188BEDCB3
C5F21DD91D94A61D712E408DDEDC029323A90E5E075D2191F16CE759EB4127FA
E6EE2E7C5B7A70C72BC399FAF5D8B64746CC0BFEEC5E29160E3FFBBEA8C43DED
E9AEDF164C390E6C780F76E9B90E285BA6C203B19C1DB3ED6F557E76C0259C3A
AB181EA3809A62C50795F70E83160308F215D68AC288E05D7CB46D62370361BD
8B1C5DE5B5341A1A1561FF9993F640336F728ECD86693E6AE57D3969F77DE0AF
9EE9B2386C0F01961A9EEA7C11FC837F253E3D2E18BBD50E6F229AAA0F646C75
999FB2AC4125C6359433211624A604C994661A78A7261363565A571923272173
F99B4ED435CC6D4B4965C14F5A8340F5190B506E09F5F9282AB559949EC83C4E
6C1A09AA30B73CBE77CE9FB7D94B36A70740C7F16C17C9A5D5270FE35CB16D4D
1B471836E94038016B95067BF4819B87B90EC3D49FE10E7CDBDBE24C51F03809
C01EC5E7D420DC3CC1EFB491A387711FCC73F7650D145908033AC88692EDC26D
941ABDDB42E4008E28AAEB2D8504FB8A840D893F79F3FF0624220181B2AEC844
78DA0D7C2C1DAAE90E886CD2E9452FE35242502ECDDC77601DC432868EA68C5D
72627E2AC6DB265448F14012CC5E04437F86114D332D2279C03D3B687AE4F4E4
EF9A9CFAC82DA769492F82BFDFD9E821F734292744C3BCC26CEC834D7833EEF5
3D3F06D5F9E1BF9933001B35CD7E565328EE0748AF8D55CCF992C343027E19BE
A6D1B454195B58762657D4C73E988B66589DB9EE62B41AF687093B2B4F5A9AFB
9964F4D2AEEC355D2EAA50624A2B7512E3BB7035152BDA977F2CE1666FE41CF3
E96AC8B2F4BC932BD77475C8C2E01C9EFFAFEB39510C26A68FC4B3219856D919
F4771EFA4506081F8C1509E720594C5D19584E2A947EE2B0C49C80E96F1C2717
296D8E72AEE40E9B21FC245F8AF2CE83B29569E597FBE2D2B1AD6175CA7EB636
8EE3D24F9D40F8C7B0831634F02FBB11E574C06290513BEAACF38B1244ABF5E5
99EEAC0B8F8516432D3C029CE0E3614BAA32C1028B845ECABE00C6BD8EC4E629
7EE669893721D5808D636ADC78FD4A693F081C138F4806C971CD0C75B153919D
62AFFD6FA9A3BBA3D02FF5BC6358EA7234AF4EBC5361621444E40C4E4851E7A2
9466A7ACDCF0BD2E3D3771C5B3735F285DFD4C3A474DA6A82D7F86BB459B11EC
013CF9A8779D287E867B053072BFD24D80FD0ADFB9C2064E84E5432471EE4924
3D900D4E2296DE58FB0703C2F214ECE3A50D6745910D67D9FE073375F98D8FD9
B491B2A3F2570D425AA82BB6418CA29233FBA8DC6D67E1A26FC41D39A66FAC82
D253D8254F6215916DAC3A0343E40B14D8F458CEDDA47B8CE55588388C61AD79
1D72EC835884BE85463AF568D23166289B003E35F5BCC46E8A0DF59637C98626
FC61D2C1B48B49A79F03AF953EAEFBD305CF772691897D5ECE050E52E6502853
C837062F5DA5B61D72BD542C6344D912805779F4703ACB60F79CF759975DF628
10B3698CE57E4BF8F74BD63CDBA487040B00D7EBE820D74144DA3C0B1C5B6D7E
1F12CF98F555ABE4ABD697216385BC1988A4E1FE61C6567C99D3277A55ACE379
1E70B0A45D007188ECE4FC571B24C81FA9C68EB98F29C6F5B89F0FC61C161115
7EA70228DDB2C0E703630217D5CC0F44530A70D5526E3943A204DFA22660FA0D
8A24F2D56AF0F31AC17DBFD9372A05ED86A2DBA94F2B50F3DF261F09647EFA05
4DD14C5782E41B5445252DC6DBA27F10E885ABDFF549E634AF88AAAF7BB96B8C
446C8E1C03222C65299179CC3570FAF5C55485A2A4FA201288D266B63081FD16
D7428A8EC780374DD9D021305AB4EA7661E45B53B50E41A0662B37A57172BD6A
7A4C7E0D2CB3C088FE4F9FB5369219E3FEF6D3F2509BE59BE0714BA8AD50E0E4
802F1C0F7D4284BFF88C97C87830ECEA302C5B1EF25EC1496973BED697790EBF
E13D9CD40B49B86FFB9B5FE8F8DC4723E830B3CA25064C93C81B6DCF1354E838
6492F537E61D2EDBB73EAE4882AD063168C4F7A9A0C8D071F583E7BC08F526B5
A917D6703A40ADB46F6A99447B10887795F9D2C015332EC0111EFC1D468AD464
CDB22BC51CE5A441A756FC4E06CAB0987F401B78DAE0FBD33EC99F766E97DCFE
2AE6225871BFCB30A92B50FE5A2AB9A256706F72F9146EDA598A7AB59643D6F0
92046E52934F7A02624D9C21607F8B976F8F82B4943B47400DB6C2AB425259FB
3F8D1E6B97B6D38821BB4BEB5857AA3ED07EAB1A36B21417D31917FB575A8CDA
BD4C2E2B0622B3B5198C7D9EE093A8A09AA3EF914C18C7A81C4D060CC0210FC0
BBE4865B1E90000B93D7D0BE735C3AAAA25FEAEB030319F19F5A06850A131078
37FCEBB6148013BA5F2609C70E157DC17DD9AEFE271DE9D7B4F884E0F8143005
E83A451088120EA01E6DE2C19EE4906905BD80DC006060779329E1F57D2FB093
7F71C18FB339005C8A68E0B61BF0703C1C1E85025615E5FF5D5622627940FB47
610C67CE025D45B889FE38C01CBD3547D68289A012F02547DC7C29E99B5641BF
3A81ED613CFF6C53AD08441AD16986C84A0F32B1A9FE823040756B86254B2694
3F98BFAC633B5BD3C8E5F92DE6E4F92F4585DFBC4FBDAD5FCDDF600D1862DD93
5196E9CA3624540041AFA711EA6D9850DF6E6B64D036B9D31D0673B2A90EFEC3
008F6F94F6D33E545690DAF27DFD9AE9045BBD6B7FA756F09AD9F720EC52B5F5
994E322D9D46D30FFB43EED8A6F15C38E01A1222DA8E7588EC9A92308271CFAA
2FFB955B1CD5B991655BAFD1B92C6562ADF20B7DE123F10C98F33C4006CB565E
1497C9F8A00A1E6A8E736DC428907A59588333AAD152B9EBE3F44F04B654BFBE
ECAE876F2A8FDEE067E841F633B8230E3E131EF14F8A924C6449222D1FF7D1A3
1718A522FA03FF7B920CA216B2A9F64E6DCFD985FD60D44329AB758A068A6CAF
3AA24C20785B35E42D4D543C2C068D48B8094191D80E310290472ECA77A6A3FC
76C79852F84700A4C695D17A9A0CEF91F742F9AC781BEEA3703A66ABB5BF6A28
6B58980BBA585BC2DB9B5F39906AC28A3DA2733CFC718B1A1B089778A55C2802
26C0C88E5DDDE23B40E55650266872F32396F017A13778BE8E0270B47320CEC3
507188D9950E1163573AE2800CD708654ACDCB985C2D82BB778233B052429A0F
01F5CD0D7D99C51AE66047991424C4BFA040A3B7FFE6560CA76D1289F5BD17E1
9681823E4C53B5BB8B9C3CDEA315FE61BD886E972F233B9709B6F85E9884B9F9
6A405C12012DDC0905AEE1A340A8357D4FB15959B8126D7A293D849532ED8500
19166EA6F14AA814A1728D408494554C3ECDC09ECAB1B1AD5A023A1281E39749
2D8FC4DAC5BF790AE419066948576F81132216E1113804A062BEF0A97F810E86
FA9FA00FE0C8542F33B8A6A309B5015107F2268D9BC9EE4C6DDE12F023E98D3E
030B32888D0C8CC0A57DFC7EFD00FDDB37157CB638CBE64A3AFA1A42CAD4AA24
B210D7C4EE3D915167F776EBDACFE0E0853D41CD91332EB2B9D059EA390037B7
23CC3C066E61C8B41F8F9F578737057178FE9BB6F250B5728A13283C05109D47
D6478100D30C8A36E8F258765E81BD133B5B6EF43C7105BE78C1ECF6A8D6405C
CB16A1EC86F343B216D7014D9B1E671B579CB5B9583AECC066AD11C424664863
AC205424397CA28BBED0EA730339EF06FD47F995320425D428CCFD020590CBF8
1C63B7AE4B30915E66B8AF3B15E61A500407E204E4F8BC956B653D7F6DB5ECB7
0EA124FCEBA21ED5A28A7A0590F6012F3CDA23011D04D40953AC9BB61CCC1C47
1758783975AA46FB5BEC610D09A169604DC7B072D106FB8EEAE7E3B04A7D7B80
306761D8AB397C8339051E2B17FC8F5FF16B3B6087E8B36AF573C5983A047766
B7350413379D639D9C5E85C2FABB2DB46EFAB826AE4382CB70E24F578B97A0D0
6702EDB52B6216830F40A1083F04422C232EC8E8761741D7FFACCF28B34ADCBF
8C331F5B9AC5E7C714E88382952B1DDE642A851EAB70EF8076124D55B6F2C67B
6789A0AA90DF5A249C3A2A5B65E7F31C332B1C60884073554BD0B7B708B2278E
527FEC29CDE51C26AC87256EF3DF7D05A5ACFE7758C0469792BD1D7D8F17F6F6
1A457FF7BCA0A57026F4D1CC6CD1AE7FF5381AD07527A3A14C4F27A6B29292D3
556031153DE96B6A2B2D568AB39448665FB18CF701384F84AE26175927BB501D
9ACE961DC8408B448F1941B06513077569806E233EE033C4E03CC7C961A43B19
72D2B9428BEAFC6C8595B0182A0C911C3E82DB7BD4658A11ED9595396875C9AE
030CDF64355265FE444C2CD2CEDEAEE5DDDF30B6D38751AFF9E7070F3B50E195
A4B851E9043F681774FA340E58552E4F681876547BB4E7B00798D95D20C9AAE8
785C11CC9094F45774AD8849BE299C46C30AC5E5D017CFABDBD211400DF97C89
7592D21989102989CDF2D27BC06A42661D51896E856AF0057B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 33 /exclam put
dup 34 /quotedblright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD10B4729E5749A10EDBE644886443D1249
2C8517DF8D8AE98E2882439FA81903941B363A7D885F93C6DF9E1FD89F2F8CEE
B870C409ED13E78B4C914813B0A01DF8F876EDCC4F384055FD37C575726AD69F
F23D50EC5BEE2FB95A44F2B2E2DD94C933D90BED2C97B53738B4B2ED56EBE617
BEF17B9DF4F314A37F10FDE34C570D7BE76A496A58242F51E7321380CB042424
855F4B53071DF5A0DA5A31B8AAF9FB4F4C491625FF8FD008BD4402918043BEDF
77B840B2BE0DAAB4EF904FFEF935954AFB9BD2041241B1BC8519EB642C89E288
479664226DBB6F1171F9EEBC7E1273D0CABCF6B1BF7F26AF21C21D9B1B916F4F
603DDB68D3614B86566FC91D67AC3F4A4A96E256FA1A3BD35F4465AE4EC64D82
34BEB4BBDDCEEBD9A89D932E55F14CA277683F279A4429B2939059D1893FB106
F1D448AE5E4C701A416692E7C0EDBF299DB408B7B0B38F672C78E76128411F6F
62DAD20DA98A3CBB9BA472B6A9415F94AF74610ED1EB9045A2B52A1914040B14
69E70AB0073D6C92F24B1D59B05C81BE2AD99D3ED86668487ED31BD3A28222BE
66F462F417FC15EE79D98B2F15FFA7271DF32E0B88FF15EED28A636809D1C712
D6A9B8D4344AE230E06954DA9032B1333396FD545000E364E7E6A79BD8A403E5
0F8CD6A2E4D13A42A5C45F3E3AB381C369EF591C48CF27CB5DDEFA1DD5D3611B
DD489D925CA229DB410742EB127441F4B6AD29C2AD58FE632E01BFC732E99A53
FAE0A25995BECDFD0353655C34FFDC52737F0165D8345BD37D96218F26282369
D01B049ED5955EB269FF8E725A79E7E5120F911D26FDB4C7A675F202487188A7
BAFAD3270635A182E82998A2695FCA8526BB20DDFA42B8B7A99CD03BDC2AC35A
A2CB73748ECEFF58FE0FBAAA7523628FE96F015474C93B1DFD20D54984F61A42
558D65D985E4D5FF713903853B66C2E5682DA716B05A65B7782C3B32C02CA912
5AA09D579E58EFDDFE71632C1F0DE74F09722F59D86FFE4215E41F37FA015286
4BE7EA5B517E5331BE0254292465D2D899C2A120C4759F953F03A37C772A3DFB
D5BEB5EB683AE59A4A3B90EE6AD37F383FD0BFBC1508FBCE413C07CC76DDFBE8
615A4D066E47468F57D79041B69F4435DC12710E884911F452C339E3FF422315
84805688C232D2CCD09E81AF06482B4328D45EEFF8F44F5AE4A7BC74E7A8E8E4
45FD98201ECD2D38796FAB8E7F3C78D26C89F1A55E0A830A411EBE698F64C112
22832CB5B997DA5A31B8AAF9FB4F4E22D84054599448EA77982CDE016339D9E7
8D0CB57D7CEC60FDDA6FA0437B9C40B23A37DFAB7F41D9DA081133B7CBC27472
9C142A7803BCC95D2469B40B3D872207EC5F5F673D32FD2FABE8AB73E68516B5
714E25B540CFD10C045215C334AA5FBC519416317B8151B6435405255184A6B5
4F2F0CFCDBB2199A8DC08CAA7C3CCD30D01A188FE10A825C38C92E5FA445897A
B88D05FC6DE3E42B053DFA51F0A495337AE8CF47ADF11B8FE226AE94AE2AD4AC
0320EA84941031B1E8176BDF68261DC400897B7D2D3808E9D4AB856B9CBC75EE
EF8D77DCFD4CD6F5A57F0F302A83B960B624C72D86913A3221AE9CE1E7A23159
16800C801F8773BAEE0CF615967F7F4DECD492A0214408BDD7D6BA0BDFB13866
7D5D69AFF5AE45476130C3F6646E2E858EA2D21B5AA5D6AC95603B2FBFB59DFA
497020F57D55612AF91A19C55CCA6ADE38B085522ED01E3580DDD6AAA4A5F222
848FBBE62E1079FD4BF4FE2DEF5C8F72AEC944F1873D042998E607A891E5DFE6
A27F8CA87D97FB65F5317B98B4DFB7F802AEB5CD937B60978AE0D5C9426E2405
1B2CAF4126501FB987EF947CFBC8BE111593FD6463784B62E682D64D67B315C4
556EA67D8E71E73CD14B200DF449FB9D09F917E5CA703C7E9579A274E3990DF2
5D88067CCECFDBFE75F52D2032C9155B72EEBF0C3E801B71695085C8F697EED9
E8994E35A543B4CC878DC642AF1D72BD2D398BE3C3E16F89A591338DE5C961B3
AA70A4A7D434785938FAF7DE4C02B929B4E8A52BFD265773A5E86A17A4190D02
CDD229749F777687ED8E8879C26149F64F24022206670A2BB62DA3D8642F1E1C
9F38AE9A61C6A3ED2CA064517546F0599F0977CFA15D0C9BBD91885B2ACE689B
F5C70519CCA3CD9ADD55A04D362503CB2528C8CB78A48EA4F3378FF330328CD4
2207B93B56459F1022363D7F93308CC9DC0E2BF00C7B0D2048F56159B2A302B8
01CBA297C940491A4DCF54441D2E2D255D74926A13A7BE787CEDC79A480AD6CE
5925909FD73ADF91D562642BAC2D53944F47E4AC0282271F5A3265A4718DD16B
CDF768640FB271BA917998B40D1F95EF9CAC30822D4AF6E9B50724C67557B49B
9378E431EBCBBD0149BC294A9A29640874F1BC354D3CBDBF84092C9ABE53C544
DE8C78050E31FC4EF0234B6B50333C6AA68D7557A78417E677C1AC919DC489CF
112C663A5F4DB97A6836374EB7584F372B11CD509490AF9AD1CF857AAF3BA249
0664A1016CF09CD3684B90E9FA25639CFDADABB2692B9886E9FDCAC2756E95C1
9E24C0B8B0BC7CA75EBA4593D5CD0B3A818DB9D51A80D39F1B836E50FD156D03
BD12FF9B399DB1AF4B228360673772EF124299AC7887521332BCCB55239DA49D
23EC2BB5EE74761F7EB57C16A763CFC9BE67E7CF119C1F1C69E91AB943E13710
2DC4B721D0DE19C80384B80765EE5690BC5C2E1D8C2C4506ED22372FC9AD355E
97B5B994A0E1FC2DC8AE60D565F519DD4924475D4619111181991F755B2DBA4B
D7EE7159C5E8945B1AF5A33CBA9310BCC8F7C23446D01DD1D65C1D50D791DB75
EB33CCDF1DC4CD54AFA074607EB7FA8FEBF0203CAABAFA063BFEE2915E522C46
8C4529613B24B543241875C14EA3366EB36E57CD92CE36BD9B00FA61A579FD73
672EB6DEC89A9FA5772BD7C4CD819EE077FD3ADA7DEE0A77B0065171CF099A98
02C0E5BFDF26EF89AB428832B7FD2E0A483928FFCE6C27A74D40CE5E663A6F3D
E81E47827D97A857A30F4474201FE75AE9541576B6ECE3E267062E32F4ED1B59
F70E372172B206FD75D56690F7B9C778247BA227A03C996908499357E68D64ED
D6B844ABD02FD2031714CBB8EF011768F1C9B22732A826C8C1B277C4778AF880
7317592B2A96DB3E491C62E50F6D7F8459AC97D824B8D0462B9C428DEC23A2B1
7C29A6BB0B22DE9D6DE379E358B5C7D82FE866AC5DEC8FF6C7CCEA8E66E55BAC
B3C737A5C7CCD52C16F3FEDED9E891EDAC170100B37CDD0C6F6D84DD3B711E97
6BC9C60C8E1FC7692ACD662779BF9273B7F4B866696C0C6E37D3CD6F30C7BC1E
5F7AD6A316244DEA6F428ECE9BA632E5F1C4339519910900DEF856C4BDA4233B
707DB0036C9DC7F68C1936D5A12D93DDA4218476E84A34D02447AD2B3B5EA404
31A79B31D99ED2CEDD1F7989AF542DEA1E4DF9D3999F4AE58671187FC42E9C48
14FD77EC0C2D3AAD49BDAAF8846E1DCBC08B40C7895D5DE5D69CCE1CB06363EB
36E7FCE3C125DC8FDEAF158B62BB900BF6383105A5A218342C18B77BE75E2725
5EFC2423976FD70454252D35EC5F35D5AD07C4CF813F9906274E18FFD4367963
EFE10A46BB662A0348E70A97A46A89D64E626B5CED0623606D4604B8221F0C70
0201215FB1E15AD32326E59E27952649426FBD46FBBEB443AEDD72B66B8DFF75
7D05048CCF86D9C2503E26F73FF3123E5BB8ACC107D8B722419A9C1F8EBE3307
4B5DEDCBEF64FEB4F057940A637CDFF9E3FD95D8002D55E77AB46A81DDCA5F7D
A80BD5CB11FEFC480BCBFDBAC428DDBE132DBB21AA7C04D6ED9CC0F9FA743598
1715F0A3E2F9C310DC6C3DFBEB4E1D1C5ECFA2D9AE13FA389CF21CD6C7110B2D
FE8BADD01B58B8684AA0C7C72324E4F7774FBD896843C02A9DD231B40A5DC30F
0189BA4936B63757743043EBEA32B094585589363F8D082AC5C1C042F1D8BB2B
8F25CEB0D5E7D86CC735EFA66BF3E0988D81FD999A2189D8AF3FE8E4A61F72B5
E8BC31D78AC0096C026C2C2CBB93367A69DCE16AF779DB50594C4E5EA79D4611
AAEEA72B791C22A1822E686F35CE00300E4C81D9D739DF88C655165C148CA55C
7A16927F06CE2FB5827F840576BC0A55717C052F0667803A819D480A63079235
C60E9E7A0DCDCA545740E4112DFC8C5E64E6BE1A95FBA7EBF7FDC4F85DA441C8
61CACDD51ADA79DD517B1F013DAF613ACAB509C56792EE25ABA3716E04388563
89693A1ECCA2A7D444D418C8690F3B04B2D3ADE23583CD1D76A973A1FD2E01CB
119769B595A0F18D8079FD30927DB1A14EC59EEB8219066AFEAE547178A3650F
D45FB825DB9C9CEB2CBC04293A9DA1F939952C0A923E760A1DD58164D82FF078
B002FD1134ADBE2BB894EA141B160B3A6BB1A35F0E7FF4110BB0B411B494574E
F19C61E0BCCCBDE0F2A47744F98AC12C717BDD870C165AB805975F9972A62E14
808D405F2225FD0B0E5186F6949ABC046D3DE64A31C3146F3EF26C108EF41637
8BF74C509F14BC3994124AD47A2B474812AB95F3E06B3DBC35A760D0E9BCAE7D
3C3C20CD3DF14C1E1E386C234FA3858DC3C5D58905B90454B314CBF25CBEF5D4
72F90D0E56DA81E33DD127F757555E8577D023969834F1AD0D7F4327D8C16AB2
4214F3C046A1FEF4D4A862142B7A895F9DB67F41582D0C817460440DD1F178EA
B563F7868151FE6102D84DD1665A27B676B05258DA53DD77119E72F95F4C7178
2FBB09B12D405F51F3E5CE9ABA9C9F49B8866EC6A4D273B61D708E9A1C099803
7E4DF354E6148064571805C3D73BEA323E407A523FF1D232E033A8C6DDEC6A9C
026C58BE01B45966A9F6C2FDA079F3D2FF1CA3007ED3D2E422AB203AD39270FC
A2427FE619E4AC6087C527D2DD3BBB08DDCB51587B5A3C12DC5DFBBEB631741D
7CBDBE6B92647636DDC16DD44D3D730C1F63931E97965124AF855AF2CF5FFD1D
914153C052DF8107FE1AA21263A26C6205BF89697C235D5386BD8990E377676C
5E19CA249E4FF166644F70777D820C1251EFCD50A97A7CB33CF713DDEB28F865
DCCFCC74BEA45494B1C4329971CCDC2D77420DC98CB0EF304281DA31795D7F18
C5067187F49B5C2187CD85A14849055D6DCB5F09E8F117B9B97C8DA30509FAAD
FAA186AAFAECAF3FA97A28F234AB1513399D102F1144EFF7B59F2074D9681D19
219B751C7387DDE6F1AB98E7EC926486560F5CDB858F66C8E6D0C6F493EBC74D
8A1724072E9CCDE45C7887C48288789AC00A1E20ADD3E96E04BCB21A2DF9D335
B976B164FAB2CCABC881A47DB1450E1085DE5304789D59A6A2F071BC6A141FD9
0D56DE409A3C3A5AE883D46B507DE859D148D32E66308FD2580BF2EC453F7EB4
A72707B9A257D428BD69434CD09B3E86E273333047B5787B08DA3D0C1E29D32C
F54C3899A15B75F3B35B7DB97BAF714B439315D4312F546B32A710531571EAD7
D6ADF4BC9936C0495138AE2DCF9B5FC5AFEBC11913C175E5A53153E122E9EC7C
A6F62EE88AE6BB55D1801469BFFDFCA22B671C3C7CE3EA6D715CB8C994961B44
3AEDE4467605FB8B7A51A9F94970227C6B393AD6560AFCEB1356F1D37D0DCB6B
B2B3C2117959B076B717A8CC0B2375343DB517287F10C06202214E1B2DDC7747
C1AA23D5B6C27DFFD164D7B2C9902DD50C61E0EBDC3601C45F2003223262F802
6BBFAFC91E0616D3A2E0716FCC6E7F4E85D21FC00543988A5E5C33FC09B2F843
9AC1A1B4FA32183E83BAC8E2BD839CF23BD5C6210451C96D1BEFAD2F5F7C8FD9
09C98EB154C7F8F8DE5701B4B8BD2654229A1E9EB525117FB7178F6CACF51996
BE10D62C80BD0C558DFD097F3208C3AAE0F195AE140A2A9D061A78F9F877F554
D4A8F55AB9EA0DD485F91A8C9084B62B69A5B8AC2E5F97326FFB01AAD2005752
4A889A0A1940CE9A60252FFFB4E790E19F7A83694FB0C69038889213F5700C72
6D93000C15AC6C39638583557EAFF90E52E17EC38A0C46E29C9B4DEDAD4F7FC7
0A728D4DE1FA8713CC992A48CE2E147580AFFCBFBB82DC554C8E1EE3F4558EF0
928F1F99E75413A82FFE9C6D4B5B073430D2105373B0BE836374F22C97ECEABD
7D9DCF82066C6A2A1DF5960A9AEB7A4B39D1451B39688837D0A273C8AF2DA484
2F427C6D860D7E7D9FB0DD6D7C211C91ED76A8C328E89A6B2B15BF0AD3E17246
486CD43D2355FF888E47717C7CE2D60C1266F963F8AC6EEB6E3F18993CC91FE9
47C2AE9E302F3DDB0F64E424BE66715B16FC5324A9DF0C81726584EFBA76B36E
80AF07426A34223015F59EBE5D0A5B4C2800944B0256953950F3F5C5D3BB954E
2B2464D99201049D1BF0EB35DF4382A31F024773503347295DC47EA179C2F8A0
9F553BE766F1DCB6880806807C5CE5EEA2763323E9EC141D5BA5ACB977B2751A
0255465E6CF7BF79048FD81B40CFB2F4C2B3975F4871D27341AB7F8B1CC2E69A
6F945D7BF78902B857A01541463FEF58AE0603B78519094F80947C507B0FA915
C4873AF5ADEAEE3D2E365F989B4F936B63B4424C5DDDC2A76D97D98DC52E36AD
4B283D3E8CBCE48BA95888FCCBFDA3A3F69B8B41C002598AFB81B23EFC9F0174
3025C1084B9159159D3736F8161859311FC8DD5F5F044E2F06A03A44526E4A92
91435BEFCB556CC54D8F803751B3B2D4174021D40E38EADC468E2508C01315C6
619E0545F8CF0EB3B959EFD26184289C1826AE848E6D49D48DAE3C7447F47DE2
7E970D9EA68F9E8697501A84289EBF0EF51261C93BAB612A3996C807D380CEB4
C01069CDD1A8C352336A8DBFE646BCB5A208533ECDA3779D6FFA0BBDB214677F
F88EFE877AC41C42A2DF583F2EF8B1953109969E59A577CA3CCC64953C593265
65E398B641CB5C8AFAF7CA82C6FA6A04F203CC0F9BF2F0C9E188B471909B8996
ED678319626D5F89CDBFE77A9F3B0DDD69361DC49A23D72C5C0E3B7BD91B3E0C
57C9ED14CFFB52414C93DD2E75FAAB717329DC4F4BB7F17FC30F07306179F4C7
0A41DF8DA31D6FF1FAA3978FEAF9B633A3D20230D46C283F92E4E210E2E7994A
B56A35D40DDA1FE737E26A2C0E1D9415DFD55E328E3DE18F12A0D91155F8DEA3
B331E835007C39D720B1769ABA9AA49A6C0FC677F16F483273365672A7EF3D34
406578D1F485C3801E1E555D7CDF6FC46CC0C26D10E323A3D8571EA6DCF33496
B991D5F93DD64219184ED5D014A68D17772992CC43893291BD06E59DB3ABD42A
2FC160228EECBBE4B264BBF80F3042D13E4F4F7BA4710A46DA560F185A15BB55
B9D6A60897AD52709BAB80B212E5240F5FD6DA15867A9FB435BA25BDF4BFB037
0753C2DF2ADA1FCB2AAC6D292D23A26FE18C2D5C747799603FB438B9A7CABF88
46875BE8DF8C6E7C83E4F46B79884D24DF7E7F609D3B5E7A06C9115395DC919F
18BCE20B17AD6513E46E787855FB020F4916E2C896A1751CEE53E9238485E89B
E4B392C5D63A33600B7A5C8E5DF9707359608D0A97123C8EE58E21E668C6721D
3676F9084D8EE4076B8A450DBF575A0B25C9EC90AE2664A1151451555D924FBB
A26AB139A84252CD582F7FDD03FD4F58C2507EB9D337065BA0FABA6410F535A6
FEC5D94E8F53B789E93F4FE0AD307AD2D1E8CAA23F33ECE28D9E58369BD6AD34
2714E7ABDCDB6187F5A005EBCD6CD66206A4F1469037B229FF58243228CB6877
75ECE962F47BE0C1FB861B187AB5FD78F539693763011C14D9B87291F456AC38
6832E2B101246CCC9687575D85AA60B69BE07AEF1A41551EFC8EA499354707F1
1E23EA91076B4A1A0268137DB7B3FC1BAD726949F3D9773FED1035509775B87A
DD97ED5B2AFCEB3905431E4726A2E00014A3DB1772D222FF14D39CD1D21BCCE5
9BE12452F6FD65FCB90078DF23E7523F4399927F565A95B7593A3217724BAAFB
CFA50805F1DF2871C1272892BD8BAD39BDCF5BEBDD428A5E8B6E99DE9C6DFEDF
2465E1852779EDE7C66960E2F5F2B5001F8CDF69C6624F85A9EF69AF489A0D44
7D9F5B5BBDF7A4410CEFA505F1969EDF55D0CED8100DC551D60CC97D6DDA0CC8
B7E3E24A10A014751A2F6DA4609D7658B51260B202CE8CAAA405FFA4C93CF842
8248DDEC5B62A49E708231097BA2FCCFCBB84CC4B2B2EA375B0EE84EC02B5EC4
C4C8A74B647CF78A2EFB9F6B4A2E70D49F4F4FECD446D22851C37F23CF662BC0
B3EDFC63BC7735554084C208158D1E06B1898D831EE54F628EEACA0FB98F7324
69F9737F1CDAA294839FFDB0C04A4835839102A20D60BE1C2EFE74B9CD54836C
3B1012BB358635CE546E75A988A7FC319FD071FD388BCD1793BFF8C82629DD3A
3A6E6B7170331B0A841C909A66894A02312C164430AEF665A651CA81731E20A5
6995219F5351D9D4D02D676F3412745C77469716E04821EBE8B266666AD62168
75D20F9220A0CD708BF002F85523214BFD77F0FE6D9C7B340011852CD825BEFB
B7E52C4D87E591A567037BB996BC99890736A323756C825DBCE46222B2E69D90
F0810A9E06925F12E728C1CBBAE1A677EABEEC5DBF4C6BF0FB6E19767C84F8D1
2BDED71CD31EBFEA98095B3637031FCA784612BDE61D8D407BF78624E135AE72
4C723FFE61574A69C8559ABEB14FD2AB07803C3EB325D3D82EA6D31535E63257
69F24986485759A8162AAC4746EED74C6506002C7F99A24E8423E12523F32ADF
19E9A5E1CC51C302A9776ADC257C0830D9293545EE7DA53A87F4425C937A7604
FD2CD4D609F08AD635DE38635999CC08A2B7AECB111E06D48F1B6B02DD3759D8
D010E6560F32A74F141D8778EA562F20494CE9B60637E5D326DD1DFCE909D379
93BC9272478BE242AE988CA85F134653446AC26339130E87CA23F16DAED712DF
33569478AE98CD1C05BA956FD562CA28A75A7514BEECB4CE1335BCA594E146B6
4D3938C91A30B36BB9E3FA19E863A2DE3313EB1AD725C414AC5D8722A134E89D
C740B0088C30839E3EC8DC8A87EC94DB4BBB13B8F8E6C139927E054770F4E123
97C3B74CED55A37A566C68BBD716D1DD3247D638F1D1885232F0473DDA98F331
EFE7D23F45B08E80DB4C34393232E08DDCE98B5471B4A6548F8D4B74C96879E2
5A8411EBB0B2FE7B6A05795277C7365D3D7D14107663AE8D9954C37718B075B5
86FC85474E82D0B34E82CBC70C3E4CCD056A3162A2AA5C43B28D79174C2EAAC5
06CB4DAAEAB310E5916BA7DAE6AD42A29E2A1DFEB712E67F6ABF349E5057E7C9
DADA0B6C53AF3B1C6E921415698B0F34F94EF1F9FF483273F55D39EC96625AAB
B86F853690A1636E4BC099D77FE1C2EBC6279DF2BCF9FE685C7AA9099EF43B2F
7700E58D0F6DA68AC7F4541EBD4332D906E05BAB78F893BFA669CDA0F9D39E15
66EF812970E3A61F8B4376BAA14320E90B8959412A1AF411DAF24D29AE85CEE7
13E5DD2FE6B45C00A80828CBA82AC29395762E2CA39FC932867EC66A799E05C7
8BD4D86EEC49E5807D47EC36722F36D3D8606F1394E2EA47A6A8A0DC52A6D444
C93A9D63526A736B664D9DD43D21938B00707AACA00D4F054AC936C1E51E5B1F
4005830600C61A87BFFBE6A173D00849FD6F90DA91BB043327118044C8B766E4
EB142A58D8785F1A3D7A74FB877391625159B6B229FA7D6501058F8B999CFA0B
3BBAAFCCAB7EF7B2B9D482D25F6E421A79E478B576A69048591E005BDA662D5D
37830A5B8853AE7289CA92C9A18D8F5A66B40E085443B2B0A8A58CBC7BDFDD78
AA19FF23F8AC9837C46D05084AA7DD1875CE71B84A48AD580183B0FA5AEFA57E
DE994EE789C50EB2028C9A7A755B28E6A80209B76DBC3D1E8A1D08ADB6F457F1
16F61B827B81BB503581F6C63DE970413EA1A9057F222B3F4E212B44A56F71BE
ED38D6577B4779B0206CE922B2AEF913D10EAFBABA3486C807E445B16A35447E
E33A661780D8D1AEDED3F5DC8632B89DA107D5C919B6525D03CC8CA3DB9DCAFC
A2CB1466E004607FFCB1AEEBC3A16944F87E9A13E80DA7CE33975F3C46F78121
A0813863639B131453D61933F64DB750FFE3A5ADD6FB7182B43132DAB49DB051
FB67F67DD44AF76CEB13F8B534EA696E329F86039D1682450FA25EEAA1B52C2B
86A7EC12F04635B3E1C1973459C129B48590B13206405B82C95A55959042A1A5
09E4FD71704F524E96B3D7437401E7343E3C201D34F69696931AB0620BB16490
CB6A70FFB947DF1783C96F32E0EFE15D364AF5ECC9C74C0624A6F7B4CA626EF4
56BB863B480FDB611D0C1B32717E978D5B946B561FDB764624CD4B016D96D8F7
B8574F6E9DB8A89E910DD510D512ABC76861C1CC81FBC7732AB9DC9844638EF3
A6CF91B5E83D4B2AAC84A4DD0BB51676190FA984194502AD6BF453721DE6F5EB
A976614441D734E00EEC02EBD496A79F8351108A5362C004B4A25B9C08D1BA48
20347296B3459C89E303F37ACA22B9BE8D7AE2C55DBD4B5479BFB06EAEAAE2FF
0B6C90BC4B42A92D64EED9D6E8D98F3CDB6A11ED2D6887D97E32E8EE4F7C9060
B68C4802AF97820295F10137109CB7B71F3104B4DC6880F27B6B22F732F4F679
E86B9CC6994DE80528CE6F854D87F30D31A52427057E6386D9D2F2AAEDB75D4A
6C458959B140C9FD4614F6BD714606D675B31318468C8336B48898BB8418A8CD
BF995861E269320688672BCCCDD973FCB8FC31B08BD8E7AEF2EC24F866BBBBA9
57395B3EF67B35DC25C879564101AC9B0BA9CC7478BEB689F7C0406DBFDB9D97
93F32BED52E54518C5D0F55A5DA6DB793529D04AB3CCEB6D659AF47B9CBEC363
AF29AF858C041C69E5F5C6C15B8A2BD9146E6EA0007D1EBD24E9B1876ADE13BB
B7B666CCDF236DB22D126B4656A8220981C21EB358B07F3423008A47798D64E0
800A41E8ECC53795D515E84C8590994991C0AEA72B7DF4DF44B194D29D032038
CC12F2556128703CD40F6A15129E2A1F5D79934875E3C3B886C39C064A34FB87
A7C9AF49DDA4B68D41D527B1082CBAB1435842FBF1A606EF4DDB2DB279E2883A
F3346AE83535ABCCE78E5C30772542C904B7F2B74D1FCA2A35A302622B7690EE
2E70C19AFB9EEBB55D08CA49050AD4E94AE48D62CD840F26784BC2A3F7473AAB
2C861E767C2908AFBA9716E061E23608ED48DDC2782659F1522DDEC1F742B198
5E19DB3E9C8D4CE9F1FEE0C76FCE8B4FC2D024AEF868A2340D40A32D1125DFC1
F3DC88990B85F33669C6FB3D27629F2AF96876F6FDC388227AFA1662D729E184
29581EDE0188401F4170FC855359927676EF705F9147910D1B77AD6D24E79EA9
AA1D0711C6A4B5D9365138E73DD62094264361988F069A990F3CAAE8FEC00DBB
FAEEAAB40061A6764E55C76B5729264EEE8EE773C7F023F903F7AB9155872032
235E4374A3BE5170994E6F03E2EFE3AD26A0554742FC5217BBBCF3A124D3A058
28B65D280BB129C57CAE8F2B221BC91A7CC4052990DCEBCFE00D168D02CEC065
7D92F2A1A0354A4AC5DC57AE4B2F33775A78DBE0CD73C3054C0D87E71241703B
E24110E4483E19F5715E33E0C32C380C70C1D73BDF3A6C24CF9F82A7827E1C69
91E268743DA556AAD13BB6A86C96E05D3BB63105B17E05A7030FA69974C7A448
27125408604C1B0C50A09C89F35FC69A02C750C48E3BBB54546489E194BCFE84
596CA783175004B2A199F4D00D7F7C70AB365AFE9088D4E621283534F91CFE4A
A61B9589071811B48D33111C20EF6B9FBA3822F3458042B94CB44C2FA8CBAEA0
7186FF583EDD5EACEF72ED3756989CB0511CF97A48191F78E8C602D88D1F8B83
9FDC11741DD6E592BB4060E6AA0943040805B8F031A0CD282DECA13F1139CF7C
6AB074BAB8E4D83700EEA53BDD403C726F229237A47B56E24AA69DF88FE8C4A0
1B6B7FB9CBE5F14410D40587CC72028BE0B3BCAAD75748B8E111F5102186D32D
310219B153682E3114D3D95756D573ECCF33653F9230DAF9E2E3C8D939711377
7EE799F3149FB936C7B7C54A59876A31DF8DB923105E17C3678DF44F20E71854
F99F2273915D3EF9C1181E5DB040A9C29ED2056AA9F7A9D7556A93DC4A389DFE
A9DA90AFB02DE399AB7E8437F11DCC18C248A9D650F7E0906F2779571833A92C
919402D31607255184020849C137658359D45AA4CA279370816BD9895D298E18
8DE2BCC517385E9D022F429633CD7647EBB31CA2DDDD631714022E1F4B5F0711
3677178351A2731A51697CBA4151CC583EC815814AA8617D281DA81E4A9C8D29
B99AE47BAF81C8F356E21F079F9A7714277E1D02DF15A9DAF78C12131D52BFF3
DBA52C97C5355FB29AB0615088CFFA5B8F2F285A9B5FFCB7D8090412CA96A554
3B016FC1BD69BCBC0E61E886783B6E87206D6880D61F397DB0CA9510B2E8D7E2
0CB6B33EBA01AD70390745BB78B06F42278F36E84AA6081BC7879870643F3997
C53B3158DF1785687B2160E769C1164E7820A8FAF2BB052FD4260D0C7BAF6E61
0D77C3EB44ACD90E5E17C6396EAB0B5CDAACD6B80C7D033F4BF912881FA0CBA8
F00B738374B3771139CD742FAA0FE336ED5DDB82D60D595EBC0D15523FFD4AB6
519E1ACB313CD847E8A25DDFD8FB3F8086075CAFAA88222388211659695E0556
1719DFB70569C6A6529DE39BDB1C50425D4580AA4D4CCDF68AFDF2BDDAD894FC
84E7AAD1B818E8A98CA3E9BC782CAC54C7A38D1D33C3B79669AF309E08E73032
DA70E495506323935987ECCE6F5BAF387C6217AF4D4DF72B1F0FD50E59F44F28
012425AC73A72E66A094ADC5AE9B0181DC683937203BAA13A9CC929BDE5240D1
C531710047ADAC47432BD364590BD0B9CD57081763637CCD5BD550A74B6BF23F
ADF4744E1ECE7B45AD976BF5D0964C46EDC0176059A7125158B776B038AF83DE
C48FE616D0269A77003BB2E4E9D6BCACD518468B85ABF9EF80CC9D6C8EB7F9E4
718C4C6649F7E490FA6D957C2433CCC614EBBA6DDDF9A16DCEFA6BAC73619ACC
62AC4A77A96AF8BC7E45AAD434BD3A222FF4C65FE5531BFA5F25A5D330E76A30
FADED318092FDD2FF5CB54C1E2AF670C0363ABC3A744029F693230C9BE46A16A
47C519C856C0D28CCCA4A3FFF052F74CF910E686948AB03FAB43E9ABB6E5BAA5
9B935D4E1A51EA17CD46791671B6C82D7263DE921EE8F20D301C3652C3526A95
757D75B8D3C5C5F3FD9C4E52317CA0BADAD3C24FC341EF7B17FB75726FA36DE8
265253EAF0BF384373039726F4046B9E5C88A95408A5D44CA9B67DCCF4F86B53
9B0D5ED0BC92712D966C956A7F4A6FDBA248A63D211D2D849107E5C2DE54EEE2
CA959FAAB0A3C40B304F0B0643CABA66454001A4FA028D8C27B13033E0461B21
709631C2CD0F5F8E325D652C0E18E8DD5294C6003E646C787DCB4CA4F1DC4F29
FADC0479BFB95486D6DD856882C2178AFA3EA518EB25F0512C2EA5DB6A8DAC97
28B7064EAAE94F0FEC8CF291E9A87C14E063B05D9880ADCE7504AC5DC8BAA0B7
B5C1016255595909779521A35284754AB9BDB829A7157F0771414D58715C14B8
846951C967CA92C36A32C972689B1C894F713B4E7F2B7755C7C60514E039EF62
9ACA3AFEF36236DE95FF57F7FB6DE1111C7B55BA740711EE67F628B75813048D
4227AF5C47E236D3DC7CDFFCA82C08FEB48B829ADEF197E722AC8839408D1B2F
0A8242B431C1D9E68B294027DC6AD6E232B7BD85A4DC8C23315B828286ED8303
7E69BC23A47530D7294F66F3030EB4579BF108BF5F983C360B2C06333DBF4748
442643EFE96A4AB847EE283011438B81918AA92DCC0F7256312648EF4C202BFA
772AE45453611E65C0C9747679A91EF3CD577542F3C312106CFDFCE1184FA00C
217A768C4BABF723ABC0AEF9755570B3B93566E1A4768F040A0E52A2A296B0F2
CD4B5DBE23F4F9FC5379F6BBE0854AB5599C1F67AE9F27C6163447230DF3A23A
950B796D8ADF42A043F6CF933004643F83CC0BE4EA172FDDFE5AE43FA2EFAA1F
F66F74CE1C905FFD2774F011CE5817D7366BEE2F7CE10AF7D453C76D0A3B4629
4FCFB19C56E0942F241563FD03C66CE8485C32803FF9482A02126BE1B1E4BD9B
3D0B05A44C61BDCC727B47E372DB8FFE7E012CC7FC4F0B6777F51D1375DB8804
36A6259EC197C3AD1FEF7EF7E638F7E4821E33391700439865CFCE030A061B9C
3F2C1B8F76C7327C57CD9545740ED1D296657899BA5DD048E5565F0DC553FCCB
7E20AC346B0D55BCA56B80F40C2B57D77CCA3CC72CD62128234A125D1D40A984
E6E75ABA9157729BAA63FCA56DC2763E575106C8C5012460410A4F1CF26AD783
B49572BA211DAEBA8CADF1633D36EF2730A13EB18D6F8F0AFE8F7ADFBCD50618
676C35ED414AA07B36FE902E8ED3304C431034371358D6E2AE59B6BF6A43F2D3
76EA9CD37F2921720F2E81BAA306761DE74DE41A9150AD13177B45686A53F428
B14481A6AC63B25D2D2A0254CCFE46E7B0EB086D551B64AE239EDC1C08501664
3E3F9870E78620C282FE1094CCA208CD010031590DDB77BFBBE129681F6BDFFB
C68C90F16FC2083811195C4C7E8E54673095D4E86FBD1CBE4469B2FE4EE8FF55
703C2EE19E9DB98BAA8C797E3497CB5A0A0FEE92D3494E29C2A4487B4EBC7B46
00D37EC4CFB57D46CAAA840781B48448A4391875543624E1FAA0EAEF5F09F081
65C1A2FABF3C02A69000F773856EE234ED3063326AE0CA467C31FE29A22B2F9E
DFF965C6BC8941952396B900742DC4700A076872978A28F091E9885142A505E5
A5CE25A884BD18C3E6788F9297305C3410F628BCA602BAEEE50BDDD42F2D3C56
D458724F840E3AEFFFD8EACE02FFCC98FA7142F1D3E345275C01E2CDF7D16060
3A0CDA904C3B36D1184EAF00F5A94CD559793EA0215F70520FFB377CDEBC816B
38AE5D7E9315B179DF1C04BF940BA31E8F83160DF9B22D9D029A519E567C6510
C8DD98E09827D42462C021436D0A7AC31028675DC8C170F212AE00F1C9965498
B1D02958783A07CFFCD833C40FB6B5FC7DBA6DD0CD530E6634EDD457C698D018
33B62DC95A85A8297200A636B6100FBD7ADD27C1FD2FE509F9B5475A7404A035
77131F5C984B287C5DC6673651426B6E31DA817247C30446E70F07D571C435FE
075FC80AC3AB23475DC4A696C429AF6A8959517BA1FE6BEB9886A7AE004CF6B9
62EDD9D9AC338C3A941A1A4B793EDB0E834564D76C081F7503292CD741D61021
9F1BFBC1EAB1EA167628A28E06974EB33C8AC6AEBA78CADA31896C746A89C9D5
82A78DEE4B0A1E27F3B2668CF4B07D9A198489AA1D0FA3DDA00D1D820778FD25
147CA5A508D82FD76457A3D8FE1A0711DE350AFC901BC6A5E05349A3E4D49F1E
B3BCB11D1D692966A05A8EE601DD625C5BEE82876CEC62F1EABD9C791F4E19AA
4E090A3D1CB9253AF7908B4284D58609DAAB7926956ACED086101B23FF32D914
458B70988F886273175EDEA78BF3E8E3C2EC80B4437C024148D4DF253F14E38D
8EDE4BE7992EA326B9D22B3011380B8A5FA25898E446A3B578882E956BCA0DA0
57AAE137A63647413471BA1D2335D87CC2A6EED5A203D000B889104867B19A37
07D182C5DFF0AE2C07C121A605B768A1A33C390D8B3A1D26633D1463EEBFE2F1
9471C6A6977B627D64F329CE26F4B3ECE71B0E4BBCDF33D30323A999A4A92A20
906B39BF3FEB5795E2F244FF9AFF81D98208929E180CA034A9DF7090E7E0B5ED
42E263571B92BBF299411AEF9C8332FABC575BE30A2A9B68FA9AF130DB24FD4C
DAFB6769C44D30294B97A22AA69A235E0CE068CE50426C7496B9F89DCDC74820
996C286E009555984542534345DAC40852FDCC16ADAA69521D5A389E7CE26C67
57BBAB0EC9EAA3E5A1E1EE8C89477AB9EDBB6A2CEDC55945EDB35176E8384734
B073641920540BC3E82A91AB20F0D97A794B81F1039C0D397AA08D5492E0964C
14419EDD8176E9637A5079080243CDBCF285E591048AE4BAF7EF6868AFFA1799
83001F10C0C5F02805B971571E44285FB8219E1A6FD0E49D9E98D47F60FFF932
86119DCE15FDE07C89F68B7F2E8C596039BF645DCA3AB539DF3A9CEF68BDAE9A
8CCB3513528D9526E1363C678400572D861C7A2D6404474EDEED34791FA90E59
7C727DEDC93BF6B1A044A8AB73D6DF7C38EE8D87846B7B1D262DBB65E2DA7873
79A8F4C24D332B18E20542BCF6B480FC0788A5AAF1EB65E09D4BBB00D17E6F42
F06FB32188FAD62658D2B66E8BA98BFB7431DE25F5F388CA9ABFACA563A3CE51
A60C820F7BFF7AB9DE853B540BCE20C04E4E9D5665394D6595E737ACD285F509
63E008E6E68BC3845667A7EFE6F5C4978BEFA689B0E524FA9D1011EAB03BA7D1
E075BC67DAF5A54A62B70794E17DBCC2808DE3480391591DB615165E97BD1325
E43A7EE6B7A4BF5BBFF7433736B4E5A1C5E667D761223D3988F2F58554B124C3
46EDADA5A04377095473D0E4F2134404824C8870CB8B0C5036D219E29AF44BEB
8382C8EFC15D5D7BA5444E1EFBDD093F31A19911488BB6B16A9A3C26A5C904C9
3DB629A4B612E99E5D10C4A1BF090D7B8A219513B6010DA9CFDA8C24D7555BF8
7BF8FDE36C5F91CA102F0C9FECB5FF0772C133CF7040DD66CC2F82CEDD2571CB
5650B0B81DFC9EFC393236EB56E887F7C45754CFCA5BBE96B39EC9C7C4098F15
624E10C29DB5D0606047F9C37033F5F2B949B5CCCB7962F8B089C2894464D6C9
1158C32BE6C5C7A377BC5C3C45D7049A31FAFCC06E581C6D5082054DAC361CB0
EB5EBF976A9284590AD93235DC09458F822EE7DD460EC926F3AD48A51F62AFEF
000D11CA15F7D970AC51FDB64EFDD5833E8E1618BAC117FA210C2B1C69DDF5DC
265A68BE24D6119259D2F81B85F4F2A5E6027B7DAA6D4CAAA7FABB14C678E51A
577ED24D63920B847AC3B451580F50DE3F2238DEAA6A155D3AB696C865F700E4
627E7F16B3415194208514EF59CB2ECF13E0339EF185227299B03374FBEA73ED
518CDB28C2B76E4A84CD5B595BBC28D141BF697E2189C388E0248A54EFF4B47E
CCF43695BE5FF01A226BB5ED40EE2FBE2452F9DD1306344C5A1C35ED8D6BB5FD
B90F4069D8A94B62A6665FC33CA19D5EF965DEC967418ED8B38B6D4A58F4FE5F
94AE4F2C8B0713D8B51D40C7B39E2CC13D88279B2347D54E400F6094AD21A4EA
750B3D6E642E2A7C8B446184E6A081DAB9B2B88D4519DCF24AF824FB10CAACC0
1CFDC0333F8088F18A9ED317DE78630A08C86530FD470B9EC75DFD0BF3DA8909
9CA0B24C41CAC69DE9928D3BBEF58B228C8E6502138352FF535ED5230EA01BFB
68C165BE37EA18D34322CD7232CFF486FD0155C2F9BA998044E9D8DB1FE1D1E7
C4742B5394328781509A5C4FAE310D9D623BD740E82E1270773D6FB18F5832F4
7DB2BB4612F4B6C29D8CCD79AAFF0E0B0B87EE198E94A42F7316FCAA9C54CA03
37056D65AE7E0639034597C969E8D0AD13D8E88E29BCB497893832267DEA8A2D
3DF5247F9A945546F1DB5D2A5A662B966CB54DCD2BF4F420ABE6EBF0D0C24B96
7052F80BCABAE24D0730EDD2873049D8722434342FF3C7722CE910E94AA8C33C
264FCC039432C3A7C14C118994454FC406762BA6ED5A1F077E1E981D5C36FF2F
2D59434CC2DD519AFB1415DCA6780AE2CD53F2F1925B68872904102DC2E55E97
F849C8EE3356ECCD7099F62505A8E21D8FBD6333233B5852C3FCFF3A3DC795AC
F844AB9A9F2C5B0868915EEB68FD44209185B1DB3639B0C65CD657C32F9DD373
6B1B0D63DA0FDA591B3728BFC62524B34D819BD1E000E3003B91069D1FACC340
C997063C976C6D8743F78DC77C3A6D370FA8AF91AB731894AFB57248FE67D87B
23DDB2A1AE3AC1513A0638500C632C52C4E5A2312DC9963E23384E5E013C5673
30F8FC8885A733B6CC8B05925B779E2030130880514696ECCB309494BA3BD6C3
4B45C9D8950D1D27B41E57D9E69391658E9E6EAB114E27BC0D6EFC88F1FDAB3E
66E2F441349B4967CFA730F395EFDB2487857EA78942BC8DBA968BAFC38CC5C9
4D1D6A3C557F2EF918269282EFA78E9ED130D185F0C483C3CDEEEFD146779ECB
381C53046A3EE023655310683F7BC5A9355E503458B7EBE9C194A3097B3D5752
3AFC00A24A805167325DDEC46C4868E4A509445A5410DB8B0E23317359077361
67627AA7B65D703649970F50C2238E4959D189BDDFBD825F09DFFACB7856C7E6
0007379AB5D790D89A650E7506F290D343F3BB2776FDF74DE8A46BC20803FA3C
FF1E21B62742503B0E75B60D105682248D605E9F95D4F1540D587D4CEE94F5E0
24870ABA19976653F082AE2BDE83E73667EF3E68D17BC1021DE861F9B4A34B90
39CCBCAE127F25BB6E4E7583657390D417C0DCE831C91B5F4BF5B2DAAF64350B
E2AEAEAE88607CD9399220CFB245CA7A7BD57D92DFD7F6433492F52F04FF8B58
260ED33A1FC2C3D27D262FF4F2E189102A20E2A03AFFF9D61011A8443B7B22BE
8C8FA843FB1581F6FFCB83F0F03BFA846B5432C11D67BF6CEA43746CEBD30870
8899E41314FF5E8D8BB932F66598F534ACE1D922C9B7FD32DE1FA1085C9C1B3E
A4A14E5F9C6619DFA049DAA9368D5DC32FDA4F016E07BA80B6540E89B11F218E
4AA370AB5CEE3B7515B9964BDE8F60964843EF703FD2F1F7F23AE264882D947C
9A041D06DF12B6A5036D6416071F75FD2B9FF4999C91DFB8334227C4E1676EE2
653656C1E554997FE7F23D0A0558D621587E0B6A7A0420F6C60FCE6656E73592
6DE188F53F5E47285E11B80D9BB278EB2592B9A7F6E33A99D842B77E7BD0ECA2
07D0D408597C7B9C060859DB1D5C8459861A7F477EF3B6E0A8B76808BD43A3D7
671564B8878D670E0EB39516DACE875B3C7A57646485039E75A9EF97081E43CE
3434FEE9500A8DDF0AF1E2B027F0A6FCBC4C466841AC4ABEEE3973C1C7055233
91808390D991A7951CAF3F90979C8B9ACA93FE3FFFBCA7BC6A7D77267C571AD4
D59FF3F0782E67409945580E92E59964E5BD284B4C2015EFB9D4EBD52AD84927
F036C51ADC939019D7DFCA0EB759555B6473652776F610CBAEF44261957BD010
2732F4A369975205398760EF63869945329A7D4F65A3B492165B67CD84E0558B
2ED7DF53B889215F339C918153205B18E201927116BBF9521C644C904BF25FF0
4F50C8F4BDE43846C5FB109D6291F6E6A929322C5F02D2BE925ABB51F875D135
3431BCE40AE31DB8B0448899F9234B5C18CECB32B79B3C92F03039BB401B2E3E
CA20780FBF41696D9C6916249542E8429C9B2328220A08F310A410788F76097E
93294E49273F4932CDC7EC7BFA257995AEB678E475B5B8EB632707803ACFC874
A8E461D2E7DC692E4CBC06D44964477C8E48F3BB80C2FC23E3BB51B7FC5CCE26
39CE3F946D7D804C18456CC8D41049A414A45758D3A043A6A4B4EE7856DEB906
A92885D595796230D34363B0D0034B72DD30D5710700666A20364045304860A8
AF11DB8A92EF426EFFE3472CAE5F09346D564DC1C1281FFAD76E223688530B33
DE3F2C8F6BC345F160CF7A6FF079110057EAB8E9E046BC2CFEB400D31B890705
6EFA9AEA1270A2FC8CBC92A438290983745881AED4614DF3B82C7DB3C279EF4B
47F7BF31DA98964805C4781C231549825424DA8B9E32BF8F5BAA8F358CB77561
3AA382018A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 27690494 40090613 1000 600 600 (pesta-nama-2010.dvi)
@start /Fa 134[40 121[{}1 90.9091 /CMSY10 rf /Fb 136[60
1[49 30 37 38 2[46 51 74 1[42 28 28 1[42 1[42 3[46 13[51
2[62 1[68 82 57 3[68 25[28 46[{}21 90.9091 /CMTI10 rf
/Fc 134[50 3[56 40 42 37 1[56 55 56 86 25 53 29 25 56
55 33 51 56 49 56 52 7[73 3[76 73 61 70 1[70 79 79 97
58 76 1[33 79 73 1[64 79 70 73 73 15[55 55 1[30 4[43
43 40[{}45 99.6264 /CMSSBX10 rf /Fd 133[45 4[56 35 44
46 1[54 54 59 86 27 48 32 32 54 48 1[48 54 1[48 54 12[72
6[98 63 81 1[43 6[74 7[32 16[43 41[{}27 90.9091 /CMBXTI10
rf /Fe 170[91 88 73 84 1[84 1[95 117 69 91 1[40 1[88
1[77 95 1[88 88 65[{}15 119.552 /CMSSBX10 rf /Ff 133[40
48 1[66 1[51 35 36 36 1[51 45 51 76 25 48 28 25 51 45
1[40 51 40 51 45 7[68 1[93 1[68 66 51 67 1[62 1[68 83
57 71 47 33 68 71 59 62 69 1[64 68 1[43 3[25 25 45 45
45 45 45 45 45 45 45 45 1[25 30 25 2[35 35 5[45 25 33[{}62
90.9091 /CMR10 rf /Fg 134[67 1[100 1[67 47 53 47 2[67
67 1[40 67 1[40 67 60 1[53 67 2[67 7[73 1[120 3[67 2[80
2[113 1[87 8[80 66[{TeXBase1Encoding ReEncodeFont}23
119.998 /Palatino-BoldItalic rf /Fh 138[100 70 80 70
3[100 150 1[100 1[60 1[90 1[80 3[100 13[100 2[120 1[140
1[110 1[70 4[110 11[90 6[90 90 90 48[{TeXBase1Encoding ReEncodeFont}21
180.002 /Palatino-BoldItalic rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
userdict/PStoPSxform PStoPSmatrix matrix currentmatrix
 matrix invertmatrix matrix concatmatrix
 matrix invertmatrix put
%%EndSetup
%%Page: (0,1) 1
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 5.017442 translate
90 rotate
0.976292 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 420.944882 0 rlineto 0 609.448819 rlineto -420.944882 0 rlineto
 closepath}put initclip
/PStoPSenablepage false def
PStoPSxform concat
showpage
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 426.017442 translate
90 rotate
0.976292 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 420.944882 0 rlineto 0 609.448819 rlineto -420.944882 0 rlineto
 closepath}put initclip
PStoPSxform concat
TeXDict begin 1 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref package)/Author ()/Keywords () /DOCINFO pdfmark
end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -18 -446
a
SDict begin H.S end
 -18 -446 a 0 TeXcolorgray Black -18 -446 a
SDict begin H.R end
 -18 -446
a -18 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -18 -446 a 0 TeXcolorgray Black 0 TeXcolorgray
-9 -128 a
SDict begin [/Count -0/Dest (subsection.0.0.1) cvn/Title (Persiapan Komuni)
/OUT pdfmark end
 -9 -128 a -9 -128 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -9 -128 a -9 -128 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -9
-128 a -9 -128 a
SDict begin H.S end
 -9 -128 a -9 -128 a
SDict begin 13.6 H.A end
 -9 -128 a -9 -128
a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -9 -128 a 650 355 a Fh(Ekaristi)45 b(Pesta)g(Nama)625
632 y(Lingkungan)h(St)f(Petrus)1010 2857 y(29)g(Juni)h(2010)774
3139 y Fg(W)l(ilayah)29 b(Y)-13 b(ohanes)29 b(de)h(Britto)1102
3319 y(Stasi)g(Maguwo)668 3499 y(Par)n(oki)e(Mar)n(ganingsih)h(Kalasan)
p 0 TeXcolorgray 0 TeXcolorgray eop end
PStoPSsaved restore
%%Page: (2,3) 2
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 5.017442 translate
90 rotate
0.976292 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 420.944882 0 rlineto 0 609.448819 rlineto -420.944882 0 rlineto
 closepath}put initclip
/PStoPSenablepage false def
PStoPSxform concat
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -136
-446 a
SDict begin H.S end
 -136 -446 a 0 TeXcolorgray 0 TeXcolorgray -136
-446 a
SDict begin H.R end
 -136 -446 a -136 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 -136 -446 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 426.017442 translate
90 rotate
0.976292 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 420.944882 0 rlineto 0 609.448819 rlineto -420.944882 0 rlineto
 closepath}put initclip
PStoPSxform concat
TeXDict begin 11 10 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -18
-446 a
SDict begin H.S end
 -18 -446 a 0 TeXcolorgray 0 TeXcolorgray -18 -446
a
SDict begin H.R end
 -18 -446 a -18 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.11) cvn /DEST pdfmark end
 -18 -446 a 0 TeXcolorgray 2345
-331 a Ff(11)p -9 -294 2445 4 v 0 TeXcolorgray 0 TeXcolorgray
-9 -36 a Fc(BERKA)-9 b(T)p 0 TeXcolorgray -9 22 a
SDict begin H.S end
 -9
22 a -9 22 a
SDict begin 13.6 H.A end
 -9 22 a -9 22 a
SDict begin [/View [/XYZ H.V]/Dest (section*.22) cvn /DEST pdfmark
end
 -9 22 a 0 TeXcolorgray 114
183 a Ff(I:)p 0 TeXcolorgray 46 w(T)h(uhan)29 b(sertam)m(u)p
0 TeXcolorgray 79 368 a(U:)p 0 TeXcolorgray 46 w(Dan)i(sertam)m(u)f
(juga)p 0 TeXcolorgray 114 553 a(I:)p 0 TeXcolorgray
46 w(Semoga)h(kita)h(sem)m(ua)f(y)m(ang)g(hadir)e(di)i(sini)f(senan)m
(tiasa)i(dibim-)218 666 y(bing)g(dan)f(dilindungi)g(dengan)h(limpahan)g
(b)s(erk)-5 b(at)32 b(dari)g(Allah)218 779 y(Y)-8 b(ang)28
b(Maha)g(Baik.)41 b(\()p Fa(y)p Ff(\))29 b(A)m(tas)f(Nama)h(Bapa,)g
(Putra,)f(dan)f(Roh)218 891 y(Kudus)p 0 TeXcolorgray
79 1077 a(U:)p 0 TeXcolorgray 46 w(Amin)p 0 TeXcolorgray
114 1262 a(I:)p 0 TeXcolorgray 46 w(Saudara)g(sek)-5
b(alian)29 b(misa)f(syukur)e(kita)j(sudah)d(selesai)j(marilah)218
1375 y(kita)i(m)m(undur)d(dalam)j(damai)g(T)-8 b(uhan)p
0 TeXcolorgray 79 1560 a(U:)p 0 TeXcolorgray 46 w(Syukur)28
b(k)m(epada)j(Allah.)-9 1745 y Fd(L)-5 b(agu)38 b(p)-5
b(enutup:)p 0 TeXcolorgray -9 4153 2445 5 v 1208 4266
a Fb(Lingkungan)33 b(St)g(Petrus)f(Maguwo)p 0 TeXcolorgray
eop end
PStoPSsaved restore
%%Page: (4,5) 3
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 5.017442 translate
90 rotate
0.976292 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 420.944882 0 rlineto 0 609.448819 rlineto -420.944882 0 rlineto
 closepath}put initclip
/PStoPSenablepage false def
PStoPSxform concat
TeXDict begin 10 9 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -136
-446 a
SDict begin H.S end
 -136 -446 a 0 TeXcolorgray 0 TeXcolorgray -136
-446 a
SDict begin H.R end
 -136 -446 a -136 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.10) cvn /DEST pdfmark end
 -136 -446 a 0 TeXcolorgray
-128 -331 a Ff(10)p -128 -294 2445 4 v 0 TeXcolorgray
0 TeXcolorgray -39 -36 a(U:)p 0 TeXcolorgray 46 w(Amin)p
0 TeXcolorgray -128 349 a Fc(Prefasi)p 0 TeXcolorgray
-128 427 a
SDict begin H.S end
 -128 427 a -128 427 a
SDict begin 13.6 H.A end
 -128 427 a -128 427
a
SDict begin [/View [/XYZ H.V]/Dest (section*.16) cvn /DEST pdfmark
end
 -128 427 a 160 x Fd(Kudus:)p 0 TeXcolorgray -128 916
a Fc(Doa)37 b(Syukur)f(Agung)p 0 TeXcolorgray -128 1013
a
SDict begin H.S end
 -128 1013 a -128 1013 a
SDict begin 13.6 H.A end
 -128 1013 a -128 1013 a
SDict begin [/View [/XYZ H.V]/Dest (section*.17) cvn /DEST pdfmark
end
 -128
1013 a 0 TeXcolorgray 144 x Fc(Bapa)i(Kami)p 0 TeXcolorgray
-128 1254 a
SDict begin H.S end
 -128 1254 a -128 1254 a
SDict begin 13.6 H.A end
 -128 1254 a -128
1254 a
SDict begin [/View [/XYZ H.V]/Dest (section*.18) cvn /DEST pdfmark
end
 -128 1254 a -52 1395 a Fd(\))p 0 TeXcolorgray
-128 1725 a Fc(Salam)g(Damai)p 0 TeXcolorgray -128 1802
a
SDict begin H.S end
 -128 1802 a -128 1802 a
SDict begin 13.6 H.A end
 -128 1802 a -128 1802 a
SDict begin [/View [/XYZ H.V]/Dest (section*.19) cvn /DEST pdfmark
end
 -128
1802 a -128 1802 a
SDict begin H.S end
 -128 1802 a -128 1802 a
SDict begin 13.6 H.A end
 -128 1802
a -128 1802 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.0.0.1) cvn /DEST pdfmark
end
 -128 1802 a 0 TeXcolorgray 164 x Fc(0..1)56
b(P)m(ersiapan)37 b(Komuni)p 0 TeXcolorgray -128 2204
a Fd(L)-5 b(agu)39 b(Komuni:)p 0 TeXcolorgray -128 2566
a Fe(RITUS)44 b(PENUTUP)p 0 TeXcolorgray -128 2675 a
SDict begin H.S end

-128 2675 a -128 2675 a
SDict begin 13.6 H.A end
 -128 2675 a -128 2675 a
SDict begin [/View [/XYZ H.V]/Dest (section*.20) cvn /DEST pdfmark
end
 -128
2675 a 0 TeXcolorgray 164 x Fc(DO)m(A)37 b(PENUTUP)p
0 TeXcolorgray -128 2916 a
SDict begin H.S end
 -128 2916 a -128 2916 a
SDict begin 13.6 H.A end
 -128
2916 a -128 2916 a
SDict begin [/View [/XYZ H.V]/Dest (section*.21) cvn /DEST pdfmark
end
 -128 2916 a 0 TeXcolorgray -4 3076
a Ff(I:)p 0 TeXcolorgray 46 w(Marilah)31 b(b)s(erdoa)f(:)100
3237 y(Allah)41 b(y)m(ang)g(mahakuasa,)i(k)-5 b(ami)40
b(b)s(ersyukur)e(k)m(epadaMu)j(se-)100 3350 y(bab)26
b(melalui)i(PutraMu,)f(Engk)-5 b(au)27 b(b)s(erk)m(enan)f(memanggil)i
(dan)100 3462 y(meringank)-5 b(an)38 b(b)s(eban)g(hidup)e(k)-5
b(ami)39 b(serta)h(menga)5 b(jark)-5 b(an)39 b(k)-5 b(a-)100
3575 y(mi)32 b(un)m(tuk)h(selalu)g(hidup)e(dalam)i(k)-5
b(asih.)48 b(Semoga)34 b(iman)f(k)-5 b(ami)100 3688 y(semakin)32
b(teguh)h(mengakui)f(segala)j(k)m(ebaik)-5 b(anMu)33
b(bagi)g(k)-5 b(ami.)100 3801 y(Demi)31 b(Kristus,)f(P)m(engan)m(tara)i
(k)-5 b(ami.)p 0 TeXcolorgray -39 4006 a(U:)p 0 TeXcolorgray
46 w(Amin)p 0 TeXcolorgray -128 4153 2445 5 v -128 4266
a Fb(Pesta)33 b(Nama)p 0 TeXcolorgray eop end
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 426.017442 translate
90 rotate
0.976292 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 420.944882 0 rlineto 0 609.448819 rlineto -420.944882 0 rlineto
 closepath}put initclip
PStoPSxform concat
TeXDict begin 3 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -18
-446 a
SDict begin H.S end
 -18 -446 a 0 TeXcolorgray 0 TeXcolorgray -18 -446
a
SDict begin H.R end
 -18 -446 a -18 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -18 -446 a 0 TeXcolorgray 2390
-331 a Ff(3)p -9 -294 2445 4 v 0 TeXcolorgray 0 TeXcolorgray
-9 -36 a Fe(RITUS)43 b(PEMBUKA)p 0 TeXcolorgray -9 56
a
SDict begin H.S end
 -9 56 a -9 56 a
SDict begin 13.6 H.A end
 -9 56 a -9 56 a
SDict begin [/View [/XYZ H.V]/Dest (section*.1) cvn /DEST pdfmark end
 -9 56 a 160 x Fd(L)-5
b(agu)38 b(p)-5 b(embuka)p 0 TeXcolorgray -9 546 a Fc(SALAM)36
b(PEMBUKAAN)p 0 TeXcolorgray -9 606 a
SDict begin H.S end
 -9 606 a -9 606
a
SDict begin 13.6 H.A end
 -9 606 a -9 606 a
SDict begin [/View [/XYZ H.V]/Dest (section*.2) cvn /DEST pdfmark end
 -9 606 a 0 TeXcolorgray 114 766 a
Ff(I:)p 0 TeXcolorgray 46 w(A)m(tas)31 b(nama)g(Bapa)g(Putera)g(dan)e
(Roh)h(Kudus)p 0 TeXcolorgray 79 954 a(U:)p 0 TeXcolorgray
46 w(Amin)p 0 TeXcolorgray 114 1141 a(I:)p 0 TeXcolorgray
46 w(Semoga)c(damai)f(sejah)m(tera)i(T)-8 b(uhan)24 b(kita)i(Y)-8
b(esus)25 b(Kristus,)h(cin)m(ta)218 1254 y(k)-5 b(asih)42
b(Allah)g(Bapa)h(dan)e(p)s(ersekutuan)g(Roh)h(Kudus,)h(selalu)218
1367 y(b)s(eserta)30 b(kita.)p 0 TeXcolorgray 79 1554
a(U:)p 0 TeXcolorgray 46 w(Sek)-5 b(arang)30 b(dan)g(selama-laman)m(y)m
(a)p 0 TeXcolorgray -9 1855 a Fc(PENGANT)-9 b(AR)p 0
TeXcolorgray -9 1916 a
SDict begin H.S end
 -9 1916 a -9 1916 a
SDict begin 13.6 H.A end
 -9 1916 a
-9 1916 a
SDict begin [/View [/XYZ H.V]/Dest (section*.3) cvn /DEST pdfmark end
 -9 1916 a 0 TeXcolorgray 114 2076 a Ff(I:)p
0 TeXcolorgray 46 w(Bapak)22 b(Ibu)d(Saudara)i(Saudari)f(Anak-anak)i(y)
m(ang)g(terk)-5 b(asih)21 b(da-)218 2189 y(lam)37 b(Kristus,)g(malam)g
(ini)f(kita)i(b)s(erkumpul)c(un)m(tuk)i(mera)m(y)m(a-)218
2302 y(k)-5 b(an)25 b(p)s(esta)h(nama)f(Lingkungan)g(San)m(to)h(P)m
(etrus.)39 b(Sebagai)27 b(batu)218 2415 y(k)-5 b(arang,)27
b(P)m(etrus)f(merupak)-5 b(an)25 b(landasan)h(y)m(ang)h(k)m(ok)m(oh)g
(bagi)f(k)m(e-)218 2528 y(hidupan)41 b(b)s(eriman)g(kita.)79
b(Kita)43 b(b)s(erharap)e(agar)j(iman)e(kita)218 2641
y(tetap)29 b(tegar)g(w)m(alaupun)f(menghadapi)g(cobaan)h(y)m(ang)g(b)s
(erat)f(di)218 2753 y(dunia)h(ini.)-9 2941 y Fb(Hening)i(sejenak)i(.)14
b(.)g(.)p 0 TeXcolorgray -9 3242 a Fc(PERNY)-9 b(A)g(T)g(AAN)36
b(TOBA)-9 b(T)p 0 TeXcolorgray -9 3302 a
SDict begin H.S end
 -9 3302 a -9
3302 a
SDict begin 13.6 H.A end
 -9 3302 a -9 3302 a
SDict begin [/View [/XYZ H.V]/Dest (section*.4) cvn /DEST pdfmark end
 -9 3302 a 0 TeXcolorgray 114
3463 a Ff(I:)p 0 TeXcolorgray 46 w(Saudara-saudari)24
b(y)m(ang)i(seiman)g(dalam)f(Kristus,)h(marilah)f(ki-)218
3576 y(ta)38 b(mem)m(buat)g(diri)g(pan)m(tas)g(b)s(erada)f(di)h(depan)f
(Allah,)k(b)s(ersih)218 3688 y(dari)28 b(dosa)g(dan)f(k)m(esalahan)i(y)
m(ang)g(lalu,)g(dengan)f(b)s(ertobat)g(dan)218 3801 y(mohon)i(ampun)f
(k)m(epada)i(Allah)g(kita.)p 0 TeXcolorgray 114 3989
a(I:)p 0 TeXcolorgray 46 w(Sa)m(y)m(a)g(mengaku)g(.)15
b(.)h(.)p 0 TeXcolorgray -9 4153 2445 5 v 1208 4266 a
Fb(Lingkungan)33 b(St)g(Petrus)f(Maguwo)p 0 TeXcolorgray
eop end
PStoPSsaved restore
%%Page: (6,7) 4
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 5.017442 translate
90 rotate
0.976292 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 420.944882 0 rlineto 0 609.448819 rlineto -420.944882 0 rlineto
 closepath}put initclip
/PStoPSenablepage false def
PStoPSxform concat
TeXDict begin 4 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -136
-446 a
SDict begin H.S end
 -136 -446 a 0 TeXcolorgray 0 TeXcolorgray -136
-446 a
SDict begin H.R end
 -136 -446 a -136 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 -136 -446 a 0 TeXcolorgray
-128 -331 a Ff(4)p -128 -294 2445 4 v 0 TeXcolorgray
0 TeXcolorgray -4 -36 a(I:)p 0 TeXcolorgray 46 w(Semoga)27
b(Allah)g(y)m(ang)g(mahakuasa)g(mengasihani)g(kita,)h(meng-)100
77 y(ampuni)37 b(dosa)j(kita)f(dan)g(mengan)m(tar)g(kita)h(k)m(e)g
(dalam)f(hidup)100 190 y(y)m(ang)31 b(k)m(ek)-5 b(al.)p
0 TeXcolorgray -39 378 a(U:)p 0 TeXcolorgray 46 w(Amin)p
0 TeXcolorgray -128 682 a Fc(Doa)37 b(P)m(embuk)m(a)p
0 TeXcolorgray -128 744 a
SDict begin H.S end
 -128 744 a -128 744 a
SDict begin 13.6 H.A end
 -128
744 a -128 744 a
SDict begin [/View [/XYZ H.V]/Dest (section*.5) cvn /DEST pdfmark end
 -128 744 a 0 TeXcolorgray -4 904 a Ff(I:)p
0 TeXcolorgray 46 w(Marilah)31 b(Berdoa)100 1064 y(Allah)40
b(y)m(ang)g(mahabaik,)j(k)-5 b(ami)40 b(mengucap)f(syukur)f(k)m(epada-)
100 1177 y(Mu)31 b(k)-5 b(arena)31 b(Engk)-5 b(au)31
b(senan)m(tiasa)i(mendengar)d(dan)h(memp)s(er-)100 1290
y(hatik)-5 b(an)22 b(k)-5 b(ami)22 b(dalam)g(suk)-5 b(a)21
b(dan)g(duk)-5 b(a)21 b(serta)h(selalu)h(men)m(y)m(ertai)100
1403 y(k)-5 b(ami)40 b(dalam)g(p)s(erjalanan)f(hidup)e(k)-5
b(ami.)69 b(Kami)40 b(mohon,)i(se-)100 1515 y(moga)31
b(iman)f(k)-5 b(ami)31 b(k)m(epadaMu)g(tetap)g(teguh)g(sehingga)g
(dapat)100 1628 y(mengab)s(di)44 b(k)m(epadaMu)i(dengan)e(gem)m(bira)i
(dan)f(p)s(en)m(uh)e(rasa)100 1741 y(syukur.)49 b(Demi)35
b(Y)-8 b(esus)34 b(Kristus,)g(PutraMu,)h(T)-8 b(uhan)33
b(dan)g(P)m(e-)100 1854 y(ngan)m(tara)c(k)-5 b(ami,)29
b(y)m(ang)g(hidup)d(dan)i(b)s(erkuasa)f(b)s(ersama)h(Dik)-5
b(ai)100 1967 y(dan)29 b(Roh)i(Kudus,)d(kini)j(dan)e(sepanjang)i(masa.)
p 0 TeXcolorgray -39 2155 a(U:)p 0 TeXcolorgray 46 w(Amin)p
0 TeXcolorgray -128 2503 a Fe(IBAD)l(A)-11 b(T)43 b(SABD)l(A)p
0 TeXcolorgray -128 2595 a
SDict begin H.S end
 -128 2595 a -128 2595 a
SDict begin 13.6 H.A end
 -128
2595 a -128 2595 a
SDict begin [/View [/XYZ H.V]/Dest (section*.6) cvn /DEST pdfmark end
 -128 2595 a 0 TeXcolorgray -4 2755
a Ff(I:)p 0 TeXcolorgray 46 w(Saudara-saudari)k(terk)-5
b(asih)47 b(marilah)h(kita)g(memp)s(ersiapk)-5 b(an)100
2868 y(hati)31 b(dan)e(budi)g(un)m(tuk)h(mendengark)-5
b(an)30 b(sab)s(da)f(T)-8 b(uhan.)p 0 TeXcolorgray -128
3173 a Fc(BA)m(CAAN)37 b(PERT)-9 b(AMA)p 0 TeXcolorgray
-128 3234 a
SDict begin H.S end
 -128 3234 a -128 3234 a
SDict begin 13.6 H.A end
 -128 3234 a -128
3234 a
SDict begin [/View [/XYZ H.V]/Dest (section*.7) cvn /DEST pdfmark end
 -128 3234 a 0 TeXcolorgray -33 3395 a Ff(P:)p
0 TeXcolorgray 46 w(P)m(em)m(bacaan)32 b(dari)e(Kisah)g(P)m(ara)h
(Rasul)f(\(12:)42 b(1-11\))100 3555 y(Kira-kira)33 b(pada)g(w)m(aktu)g
(itu)f(ra)5 b(ja)33 b(Hero)s(des)g(m)m(ulai)g(b)s(ertindak)100
3668 y(dengan)h(k)m(eras)i(terhadap)e(b)s(eb)s(erapa)g(orang)h(dari)f
(jemaat.)55 b(Ia)100 3780 y(men)m(yuruh)44 b(mem)m(bun)m(uh)g(Y)-8
b(ak)m(obus,)50 b(saudara)c(Y)-8 b(ohanes,)50 b(de-)100
3893 y(ngan)34 b(p)s(edang.)53 b(Ketik)-5 b(a)36 b(ia)f(melihat,)i(bah)
m(w)m(a)e(hal)f(itu)h(men)m(y)m(e-)100 4006 y(nangk)-5
b(an)33 b(hati)i(orang)f(Y)-8 b(ah)m(udi,)36 b(ia)e(melanjutk)-5
b(an)34 b(p)s(erbuatan-)p 0 TeXcolorgray -128 4153 2445
5 v -128 4266 a Fb(Pesta)f(Nama)p 0 TeXcolorgray eop
end
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 426.017442 translate
90 rotate
0.976292 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 420.944882 0 rlineto 0 609.448819 rlineto -420.944882 0 rlineto
 closepath}put initclip
PStoPSxform concat
TeXDict begin 9 8 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -18
-446 a
SDict begin H.S end
 -18 -446 a 0 TeXcolorgray 0 TeXcolorgray -18 -446
a
SDict begin H.R end
 -18 -446 a -18 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.9) cvn /DEST pdfmark end
 -18 -446 a 0 TeXcolorgray 2390
-331 a Ff(9)p -9 -294 2445 4 v 0 TeXcolorgray 218 -36
a(Kami)30 b(mohon)p 0 TeXcolorgray 79 155 a(U:)p 0 TeXcolorgray
46 w(Kabulk)-5 b(anlah)30 b(Doa)h(k)-5 b(ami)31 b(y)m(a)g(T)-8
b(uhan)p 0 TeXcolorgray 85 347 a(P:)p 0 TeXcolorgray
46 w(Allah)42 b(Bapa,)k(b)s(erk)-5 b(atilah)42 b(ikrar)g(y)m(ang)h(ak)
-5 b(an)42 b(k)-5 b(ami)43 b(ucapk)-5 b(an)218 460 y(agar)34
b(menjadi)f(p)s(edoman)f(k)-5 b(ami)34 b(dalam)g(k)m(ehidupan)e
(mengge-)218 573 y(reja)d(dan)g(b)s(ermasy)m(arak)-5
b(at.)41 b(Kuatk)-5 b(anlah)30 b(hati)g(dan)f(tek)-5
b(ad)30 b(k)-5 b(a-)218 686 y(mi)30 b(un)m(tuk)g(teguh)g(dalam)h
(melaksanak)-5 b(an)31 b(ikrar)g(tersebut.)218 846 y(Kami)f(mohon)p
0 TeXcolorgray 79 1038 a(U:)p 0 TeXcolorgray 46 w(Kabulk)-5
b(anlah)30 b(doa)g(k)-5 b(ami)31 b(y)m(a)g(T)-8 b(uhan)p
0 TeXcolorgray 114 1229 a(I:)p 0 TeXcolorgray 46 w(Demikianlah)48
b(y)m(a)g(Bapa,)k(doa-doa)c(y)m(ang)g(k)-5 b(ami)47 b(panjatk)-5
b(an.)218 1342 y(Engk)g(au)41 b(mengetah)m(ui)h(k)m(einginan)g(k)m
(einginan)g(dan)e(k)m(esulitan)218 1455 y(k)-5 b(ami.)40
b(Kami)26 b(p)s(erca)m(y)m(a)i(ak)-5 b(an)27 b(p)s(en)m(y)m
(elenggaraan-Mu)h(dan)e(b)s(er-)218 1568 y(sama)39 b(Roh)f(Kudus.)64
b(Kami)39 b(men)m(y)m(ampaik)-5 b(an)39 b(doa-doa)h(k)-5
b(ami)218 1681 y(ini)23 b(dengan)g(p)s(eran)m(taraan)g(Putera-Mu)g
(terk)-5 b(asih,)25 b(T)-8 b(uhan)22 b(k)-5 b(ami)218
1794 y(Y)d(esus)27 b(Kristus,)g(y)m(ang)h(hidup)d(dan)i(b)s(erkuasa)f
(kini)h(dan)f(sepan-)218 1907 y(jang)k(masa.)42 b(Amin)p
0 TeXcolorgray -9 2272 a Fe(LITURGI)h(EKARISTI)p 0 TeXcolorgray
-9 2368 a
SDict begin H.S end
 -9 2368 a -9 2368 a
SDict begin 13.6 H.A end
 -9 2368 a -9 2368 a
SDict begin [/View [/XYZ H.V]/Dest (section*.13) cvn /DEST pdfmark
end
 -9
2368 a 0 TeXcolorgray 163 x Fc(P)m(ersiapan)37 b(P)m(ersembahan)p
0 TeXcolorgray -9 2616 a
SDict begin H.S end
 -9 2616 a -9 2616 a
SDict begin 13.6 H.A end
 -9 2616
a -9 2616 a
SDict begin [/View [/XYZ H.V]/Dest (section*.14) cvn /DEST pdfmark
end
 -9 2616 a 141 x Fd(L)-5 b(agu)38 b(p)-5 b(ersemb)g(ahan:)p
0 TeXcolorgray -9 3086 a Fc(Doa)36 b(P)m(ersembahan)p
0 TeXcolorgray -9 3151 a
SDict begin H.S end
 -9 3151 a -9 3151 a
SDict begin 13.6 H.A end
 -9 3151
a -9 3151 a
SDict begin [/View [/XYZ H.V]/Dest (section*.15) cvn /DEST pdfmark
end
 -9 3151 a 0 TeXcolorgray 114 3311 a Ff(I:)p
0 TeXcolorgray 46 w(Allah)44 b(Bapa)g(k)-5 b(ami)44 b(y)m(ang)g
(Mahakudus,)i(terimalah)e(kiran)m(y)m(a)218 3424 y(roti)22
b(dan)e(anggur)h(y)m(ang)h(k)-5 b(ami)22 b(p)s(ersem)m(bahk)-5
b(an)20 b(k)m(epada-Mu)i(ini.)218 3537 y(Satuk)-5 b(anlah)29
b(p)s(ersem)m(bahan)g(k)-5 b(ami)30 b(ini)g(dengan)f(kurban)f(Y)-8
b(esus)218 3650 y(di)29 b(altar)h(ini.)41 b(Sehingga)29
b(p)s(ersem)m(bahan)g(k)-5 b(ami)29 b(men)m(um)m(buhk)-5
b(an)218 3763 y(k)m(etaatan)36 b(dan)d(mem)m(b)s(erik)-5
b(an)34 b(k)m(ebahagian)h(dan)e(k)m(eselamatan)218 3876
y(bagi)38 b(k)-5 b(ami)37 b(dan)g(sem)m(ua)g(orang.)62
b(Demi)38 b(Kristus)e(T)-8 b(uhan)36 b(dan)218 3989 y(p)s(engan)m(tara)
31 b(k)-5 b(ami.)p 0 TeXcolorgray -9 4153 2445 5 v 1208
4266 a Fb(Lingkungan)33 b(St)g(Petrus)f(Maguwo)p 0 TeXcolorgray
eop end
PStoPSsaved restore
%%Page: (8,9) 5
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 5.017442 translate
90 rotate
0.976292 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 420.944882 0 rlineto 0 609.448819 rlineto -420.944882 0 rlineto
 closepath}put initclip
/PStoPSenablepage false def
PStoPSxform concat
TeXDict begin 8 7 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -136
-446 a
SDict begin H.S end
 -136 -446 a 0 TeXcolorgray 0 TeXcolorgray -136
-446 a
SDict begin H.R end
 -136 -446 a -136 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.8) cvn /DEST pdfmark end
 -136 -446 a 0 TeXcolorgray
-128 -331 a Ff(8)p -128 -294 2445 4 v 0 TeXcolorgray
0 TeXcolorgray -128 -36 a Fc(HOMILI)p 0 TeXcolorgray
-128 22 a
SDict begin H.S end
 -128 22 a -128 22 a
SDict begin 13.6 H.A end
 -128 22 a -128 22 a
SDict begin [/View [/XYZ H.V]/Dest (section*.10) cvn /DEST pdfmark
end
 -128
22 a 0 TeXcolorgray 164 x Fc(Sy)m(ahadat)38 b(\(Aku)e(P)m(erca)m(y)m
(a\))p 0 TeXcolorgray -128 270 a
SDict begin H.S end
 -128 270 a -128 270
a
SDict begin 13.6 H.A end
 -128 270 a -128 270 a
SDict begin [/View [/XYZ H.V]/Dest (section*.11) cvn /DEST pdfmark
end
 -128 270 a 0 TeXcolorgray 138
x Fc(DO)m(A)h(UMA)-9 b(T)p 0 TeXcolorgray -128 467 a
SDict begin H.S end

-128 467 a -128 467 a
SDict begin 13.6 H.A end
 -128 467 a -128 467 a
SDict begin [/View [/XYZ H.V]/Dest (section*.12) cvn /DEST pdfmark
end
 -128 467
a 0 TeXcolorgray -4 627 a Ff(I:)p 0 TeXcolorgray 46 w(Allah)43
b(Bapa,)j(melalui)d(PutraMu,)i(Y)-8 b(esus)42 b(Kristus,)j(Engk)-5
b(au)100 740 y(mengundang)41 b(k)-5 b(ami)43 b(datang)h(k)m(epadaMu)f
(agar)g(k)-5 b(ami)43 b(mem-)100 853 y(p)s(eroleh)32
b(k)m(elegaan,)k(k)m(etenangan)e(dan)e(k)m(eringanan)h(atas)h(b)s(eb-)
100 966 y(an)d(hidup.)42 b(Kami)32 b(mohon,)f(semoga)i(Engk)-5
b(au)31 b(mendengark)-5 b(an)100 1079 y(doa-doa)31 b(y)m(ang)g(k)-5
b(ami)31 b(panjatk)-5 b(an)30 b(k)m(e)h(hadiratMu:)p
0 TeXcolorgray -33 1256 a(P:)p 0 TeXcolorgray 46 w(Bagi)h(gereja:)100
1416 y(T)-8 b(uhan)29 b(Allah)h(k)-5 b(ami,)31 b(Engk)-5
b(au)29 b(telah)i(menghimpun)d(k)-5 b(ami)30 b(da-)100
1529 y(lam)37 b(Gereja)g(dan)g(mengudusk)-5 b(an)35 b(k)-5
b(ami)37 b(menjadi)f(umat)h(pili-)100 1642 y(hanMu.)65
b(Semoga)39 b(Gereja)h(tetap)g(b)s(erani)e(dan)g(tekun)g(mem-)100
1755 y(b)s(erik)-5 b(an)26 b(k)m(esaksian)i(ten)m(tang)h(k)m
(ehadiranMu)e(di)g(tengah)h(dunia)100 1867 y(zaman)j(ini.)100
2028 y(Kami)f(mohon)p 0 TeXcolorgray -39 2205 a(U:)p
0 TeXcolorgray 46 w(Kabulk)-5 b(anlah)30 b(doa)g(k)-5
b(ami)31 b(y)m(a)g(T)-8 b(uhan)p 0 TeXcolorgray -33 2382
a(P:)p 0 TeXcolorgray 46 w(Bagi)44 b(para)f(Uskup,)i(Imam,)h(Diak)m
(on,)i(dan)42 b(p)s(ela)m(y)m(an)i(Gereja)100 2494 y(lainn)m(y)m(a:)100
2655 y(Semoga)f(para)g(Uskup,)h(Imam,)i(Diak)m(on,)h(dan)42
b(p)s(ela)m(y)m(an)h(Ge-)100 2767 y(reja)e(lainn)m(y)m(a,)j(selalu)e
(setia)g(mengha)m(y)m(ati)g(apa)f(y)m(ang)h(merek)-5
b(a)100 2880 y(w)m(artak)g(an)31 b(dengan)f(k)m(esaksian)i(hidup)c
(merek)-5 b(a.)100 3041 y(Kami)30 b(mohon)p 0 TeXcolorgray
-39 3218 a(U:)p 0 TeXcolorgray 46 w(Kabulk)-5 b(anlah)30
b(doa)g(k)-5 b(ami)31 b(y)m(a)g(T)-8 b(uhan)p 0 TeXcolorgray
-33 3395 a(P:)p 0 TeXcolorgray 46 w(Bagi)32 b(kita)f(sem)m(ua)g(y)m
(ang)g(hadir)e(di)i(sini:)100 3555 y(Allah,)25 b(Bapa)g(k)-5
b(ami,)25 b(k)-5 b(ami)24 b(b)s(ersyukur)d(k)m(epadaMu)j(k)-5
b(arena)24 b(Y)-8 b(e-)100 3668 y(sus)36 b(Kristus)g(PutraMu)h(telah)h
(b)s(erk)m(enan)e(men)m(y)m(atak)-5 b(an)39 b(Eng-)100
3780 y(k)-5 b(au)36 b(k)m(epada)i(k)-5 b(ami.)60 b(Semoga)38
b(Sab)s(daMu)e(kuat)h(b)s(erak)-5 b(ar)36 b(dan)100 3893
y(b)s(ertum)m(buh)31 b(subur)g(di)i(dalam)g(hati)h(k)-5
b(ami,)35 b(serta)f(mendorong)100 4006 y(k)-5 b(ami)30
b(un)m(tuk)g(hidup)f(damai)h(dan)g(saling)h(mengampuni.)p
0 TeXcolorgray -128 4153 2445 5 v -128 4266 a Fb(Pesta)i(Nama)p
0 TeXcolorgray eop end
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 426.017442 translate
90 rotate
0.976292 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 420.944882 0 rlineto 0 609.448819 rlineto -420.944882 0 rlineto
 closepath}put initclip
PStoPSxform concat
TeXDict begin 5 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -18
-446 a
SDict begin H.S end
 -18 -446 a 0 TeXcolorgray 0 TeXcolorgray -18 -446
a
SDict begin H.R end
 -18 -446 a -18 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 -18 -446 a 0 TeXcolorgray 2390
-331 a Ff(5)p -9 -294 2445 4 v 0 TeXcolorgray 218 -36
a(n)m(y)m(a)30 b(itu)g(dan)f(men)m(yuruh)f(menahan)h(P)m(etrus.)41
b(W)-8 b(aktu)31 b(itu)f(hari)218 77 y(ra)m(y)m(a)35
b(Roti)h(Tidak)e(Beragi.)53 b(Setelah)35 b(P)m(etrus)g(ditangk)-5
b(ap,)36 b(He-)218 190 y(ro)s(des)31 b(men)m(yuruh)g(memenjarak)-5
b(ann)m(y)m(a)33 b(di)f(ba)m(w)m(ah)g(p)s(enjagaan)218
302 y(empat)h(regu,)h(masing-masing)f(terdiri)g(dari)g(empat)g(pra)5
b(jurit.)218 415 y(Maksudn)m(y)m(a)27 b(ialah,)h(supa)m(y)m(a)f
(sehabis)f(P)m(ask)-5 b(ah)27 b(ia)g(menghadap-)218 528
y(k)-5 b(ann)m(y)m(a)31 b(k)m(e)g(depan)f(orang)h(ban)m(y)m(ak.)218
688 y(Demikianlah)46 b(P)m(etrus)e(ditahan)g(di)h(dalam)g(p)s(enjara.)
82 b(T)-8 b(eta-)218 801 y(pi)43 b(jemaat)i(dengan)e(tekun)g(mendoak)-5
b(ann)m(y)m(a)44 b(k)m(epada)h(Allah.)218 914 y(P)m(ada)c(malam)f(seb)s
(elum)f(Hero)s(des)h(hendak)g(menghadapk)-5 b(an-)218
1027 y(n)m(y)m(a)43 b(k)m(epada)f(orang)h(ban)m(y)m(ak,)j(P)m(etrus)c
(tidur)f(di)h(an)m(tara)h(dua)218 1140 y(orang)d(pra)5
b(jurit,)41 b(terb)s(elenggu)f(dengan)g(dua)f(ran)m(tai.)70
b(Selain)218 1253 y(itu)30 b(pra)5 b(jurit-pra)g(jurit)29
b(p)s(enga)m(w)m(al)j(sedang)f(b)s(erk)-5 b(a)m(w)m(al)31
b(di)f(m)m(uk)-5 b(a)218 1366 y(pin)m(tu.)218 1526 y(Tiba-tiba)37
b(b)s(erdirilah)e(seorang)i(malaik)-5 b(at)38 b(T)-8
b(uhan)35 b(dek)-5 b(at)37 b(P)m(e-)218 1639 y(trus)46
b(dan)f(caha)m(y)m(a)k(b)s(ersinar)c(dalam)i(ruang)f(itu.)89
b(Malaik)-5 b(at)218 1752 y(itu)28 b(menepuk)g(P)m(etrus)g(un)m(tuk)g
(mem)m(bangunk)-5 b(ann)m(y)m(a,)29 b(k)-5 b(atan)m(y)m(a:)218
1865 y("Bangunlah)36 b(segera!")i(Mak)-5 b(a)37 b(gugurlah)e(ran)m(tai)
i(itu)f(dari)f(ta-)218 1978 y(ngan)21 b(P)m(etrus.)38
b(Lalu)21 b(k)-5 b(ata)22 b(malaik)-5 b(at)23 b(itu)e(k)m(epadan)m(y)m
(a:)38 b("Ik)-5 b(atlah)218 2091 y(pinggangm)m(u)31 b(dan)f(k)m(enak)-5
b(anlah)32 b(sepatum)m(u!")f(Iapun)f(b)s(erbuat)218 2204
y(demikian.)65 b(Lalu)38 b(malaik)-5 b(at)40 b(itu)f(b)s(erk)-5
b(ata)38 b(k)m(epadan)m(y)m(a:)59 b("Ke-)218 2316 y(nak)-5
b(anlah)32 b(jubahm)m(u)f(dan)h(ikutlah)h(aku!")g(Lalu)f(ia)h
(mengikuti)218 2429 y(malaik)-5 b(at)33 b(itu)f(k)m(e)g(luar)g(dan)f
(ia)h(tidak)g(tah)m(u,)h(bah)m(w)m(a)f(apa)g(y)m(ang)218
2542 y(dilakuk)-5 b(an)39 b(malaik)-5 b(at)42 b(itu)e(sungguh-sungguh)d
(terjadi,)43 b(sang-)218 2655 y(k)-5 b(an)m(y)m(a)31
b(ia)g(melihat)h(suatu)e(p)s(englihatan.)218 2815 y(Setelah)f(merek)-5
b(a)29 b(melalui)h(tempat)f(k)-5 b(a)m(w)m(al)30 b(p)s(ertama)f(dan)f
(tem-)218 2928 y(pat)21 b(k)-5 b(a)m(w)m(al)22 b(k)m(edua,)h(sampailah)
e(merek)-5 b(a)21 b(k)m(e)g(pin)m(tu)f(gerbang)h(b)s(esi)218
3041 y(y)m(ang)36 b(men)m(uju)f(k)m(e)i(k)m(ota.)58 b(Pin)m(tu)36
b(itu)g(terbuk)-5 b(a)35 b(dengan)h(sendi-)218 3154 y(rin)m(y)m(a)42
b(bagi)g(merek)-5 b(a.)75 b(Sesudah)40 b(tiba)i(di)g(luar,)i(merek)-5
b(a)42 b(b)s(er-)218 3267 y(jalan)34 b(sampai)g(k)m(e)h(ujung)e(jalan,)
j(dan)d(tiba-tiba)i(malaik)-5 b(at)36 b(itu)218 3380
y(meninggalk)-5 b(an)35 b(dia.)54 b(Dan)35 b(setelah)h(sadar)e(ak)-5
b(an)35 b(dirin)m(y)m(a,)h(P)m(e-)218 3493 y(trus)23
b(b)s(erk)-5 b(ata:)38 b("Sek)-5 b(arang)25 b(tah)m(ulah)f(aku)h(b)s
(enar-b)s(enar)d(bah)m(w)m(a)218 3606 y(T)-8 b(uhan)35
b(telah)j(men)m(yuruh)c(malaik)-5 b(at-Ny)m(a)40 b(dan)c(men)m(y)m
(elamat-)218 3719 y(k)-5 b(an)44 b(aku)f(dari)h(tangan)h(Hero)s(des)f
(dan)f(dari)h(segala)h(sesuatu)218 3832 y(y)m(ang)31
b(diharapk)-5 b(an)29 b(orang)i(Y)-8 b(ah)m(udi.")218
3992 y(Demikianlah)31 b(sab)s(da)f(T)-8 b(uhan)p 0 TeXcolorgray
-9 4153 2445 5 v 1208 4266 a Fb(Lingkungan)33 b(St)g(Petrus)f(Maguwo)p
0 TeXcolorgray eop end
PStoPSsaved restore
%%Page: (10,11) 6
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 5.017442 translate
90 rotate
0.976292 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 420.944882 0 rlineto 0 609.448819 rlineto -420.944882 0 rlineto
 closepath}put initclip
/PStoPSenablepage false def
PStoPSxform concat
TeXDict begin 6 5 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -136
-446 a
SDict begin H.S end
 -136 -446 a 0 TeXcolorgray 0 TeXcolorgray -136
-446 a
SDict begin H.R end
 -136 -446 a -136 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.6) cvn /DEST pdfmark end
 -136 -446 a 0 TeXcolorgray
-128 -331 a Ff(6)p -128 -294 2445 4 v 0 TeXcolorgray
0 TeXcolorgray -39 -36 a(U:)p 0 TeXcolorgray 46 w(Syukur)28
b(k)m(epada)j(Allah)-128 269 y Fd(Mazmur)37 b(T)-8 b(anggap)j(an)p
0 TeXcolorgray -128 599 a Fc(BA)m(CAAN)37 b(KEDUA)p 0
TeXcolorgray -128 771 a
SDict begin H.S end
 -128 771 a -128 771 a
SDict begin 13.6 H.A end
 -128 771
a -128 771 a
SDict begin [/View [/XYZ H.V]/Dest (section*.8) cvn /DEST pdfmark end
 -128 771 a 0 TeXcolorgray -33 931 a Ff(P:)p
0 TeXcolorgray 46 w(P)m(em)m(bacaan)j(dari)f(Surat)f(k)m(edua)h(Rasul)f
(P)m(aulus)h(k)m(epada)g(Ti-)100 1044 y(motius)30 b(\(4:)42
b(6-8,17-18\))100 1204 y(Saudara-saudara,)24 b(mengenai)f(diriku,)h
(darahku)e(sudah)g(m)m(ulai)100 1317 y(dicurahk)-5 b(an)39
b(sebagai)i(p)s(ersem)m(bahan)e(dan)h(saat)h(k)m(ematianku)100
1430 y(sudah)33 b(dek)-5 b(at.)53 b(Aku)34 b(telah)i(mengakhiri)e(p)s
(ertandingan)f(y)m(ang)100 1543 y(baik,)f(aku)f(telah)h(mencapai)g
(garis)g(akhir)f(dan)g(aku)h(telah)g(me-)100 1656 y(melihara)f(iman.)
100 1816 y(Sek)-5 b(arang)26 b(telah)g(tersedia)g(bagiku)g(mahk)m(ota)h
(k)m(eb)s(enaran)e(y)m(ang)100 1929 y(ak)-5 b(an)42 b(dik)-5
b(aruniak)g(an)42 b(k)m(epadaku)g(oleh)g(T)-8 b(uhan,)45
b(Hakim)d(y)m(ang)100 2042 y(adil,)24 b(pada)d(hari-Ny)m(a;)26
b(tetapi)d(buk)-5 b(an)20 b(han)m(y)m(a)i(k)m(epadaku,)i(mela-)100
2154 y(ink)-5 b(an)20 b(juga)g(k)m(epada)h(sem)m(ua)g(orang)f(y)m(ang)h
(merinduk)-5 b(an)19 b(k)m(edatangan-)100 2267 y(Ny)m(a.)100
2427 y(T)-8 b(etapi)35 b(T)-8 b(uhan)32 b(telah)j(mendampingi)e(aku)h
(dan)f(menguatk)-5 b(an)100 2540 y(aku,)31 b(supa)m(y)m(a)g(dengan)f(p)
s(eran)m(taraanku)h(Injil)f(dib)s(eritak)-5 b(an)30 b(de-)100
2653 y(ngan)20 b(sep)s(en)m(uhn)m(y)m(a)h(dan)f(sem)m(ua)h(orang)h(buk)
-5 b(an)19 b(Y)-8 b(ah)m(udi)21 b(mende-)100 2766 y(ngark)-5
b(ann)m(y)m(a.)50 b(Dengan)35 b(demikian)e(aku)h(lepas)f(dari)h(m)m
(ulut)f(si-)100 2879 y(nga.)40 b(Dan)28 b(T)-8 b(uhan)26
b(ak)-5 b(an)28 b(melepask)-5 b(an)28 b(aku)g(dari)f(setiap)i(usaha)100
2992 y(y)m(ang)g(jahat.)40 b(Dia)29 b(ak)-5 b(an)29 b(men)m(y)m
(elamatk)-5 b(an)30 b(aku,)e(sehingga)h(aku)100 3105
y(masuk)40 b(k)m(e)i(dalam)g(Kera)5 b(jaan-Ny)m(a)43
b(di)d(sorga.)74 b(Bagi-Ny)m(alah)100 3218 y(k)m(em)m(uliaan)32
b(selama-laman)m(y)m(a!)43 b(Amin.)100 3378 y(Demikianlah)31
b(sab)s(da)f(T)-8 b(uhan)p 0 TeXcolorgray -39 3683 a(U:)p
0 TeXcolorgray 46 w(Syukur)28 b(k)m(epada)j(Allah)-128
3989 y Fd(Bait)38 b(p)-5 b(engantar)38 b(Injil)p 0 TeXcolorgray
-128 4153 2445 5 v -128 4266 a Fb(Pesta)33 b(Nama)p 0
TeXcolorgray eop end
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 426.017442 translate
90 rotate
0.976292 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 420.944882 0 rlineto 0 609.448819 rlineto -420.944882 0 rlineto
 closepath}put initclip
PStoPSxform concat
TeXDict begin 7 6 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -18
-446 a
SDict begin H.S end
 -18 -446 a 0 TeXcolorgray 0 TeXcolorgray -18 -446
a
SDict begin H.R end
 -18 -446 a -18 -446 a
SDict begin [/View [/XYZ H.V]/Dest (page.7) cvn /DEST pdfmark end
 -18 -446 a 0 TeXcolorgray 2390
-331 a Ff(7)p -9 -294 2445 4 v 0 TeXcolorgray 0 TeXcolorgray
-9 -36 a Fc(Bacaan)37 b(Injil)p 0 TeXcolorgray -9 161
a
SDict begin H.S end
 -9 161 a -9 161 a
SDict begin 13.6 H.A end
 -9 161 a -9 161 a
SDict begin [/View [/XYZ H.V]/Dest (section*.9) cvn /DEST pdfmark end
 -9 161 a 0 TeXcolorgray
114 302 a Ff(I:)p 0 TeXcolorgray 46 w(T)-8 b(uhan)29
b(sertam)m(u)p 0 TeXcolorgray 79 614 a(U:)p 0 TeXcolorgray
46 w(Dan)i(sertam)m(u)f(juga)p 0 TeXcolorgray 114 926
a(I:)p 0 TeXcolorgray 46 w(Inilah)g(Injil)g(Y)-8 b(esus)30
b(Kristus)g(men)m(urut)f(Matius)i(\(16:13-19\))p 0 TeXcolorgray
79 1238 a(U:)p 0 TeXcolorgray 46 w(Dim)m(uliak)-5 b(anlah)32
b(T)-8 b(uhan)p 0 TeXcolorgray 114 1550 a(I:)p 0 TeXcolorgray
46 w(Setelah)39 b(Y)-8 b(esus)38 b(tiba)h(di)f(daerah)g(Kaisarea)i
(Filipi,)h(Ia)d(b)s(erta-)218 1663 y(n)m(y)m(a)46 b(k)m(epada)g(m)m
(urid-m)m(urid-Ny)m(a:)70 b("Kata)46 b(orang,)k(siapak)-5
b(ah)218 1776 y(Anak)32 b(Man)m(usia)g(itu?")g(Ja)m(w)m(ab)h(merek)-5
b(a:)44 b("Ada)32 b(y)m(ang)h(menga-)218 1889 y(tak)-5
b(an:)44 b(Y)-8 b(ohanes)33 b(P)m(em)m(baptis,)g(ada)f(juga)g(y)m(ang)h
(mengatak)-5 b(an:)218 2001 y(Elia)36 b(dan)f(ada)h(pula)f(y)m(ang)h
(mengatak)-5 b(an:)53 b(Y)-8 b(eremia)37 b(atau)f(sa-)218
2114 y(lah)24 b(seorang)h(dari)f(para)g(nabi.")h(Lalu)f(Y)-8
b(esus)25 b(b)s(ertan)m(y)m(a)g(k)m(epada)218 2227 y(merek)-5
b(a:)59 b("T)-8 b(etapi)40 b(apa)g(k)-5 b(atam)m(u,)42
b(siapak)-5 b(ah)40 b(Aku)f(ini?")g(Ma-)218 2340 y(k)-5
b(a)35 b(ja)m(w)m(ab)h(Simon)f(P)m(etrus:)50 b("Engk)-5
b(au)35 b(adalah)h(Mesias,)h(Anak)218 2453 y(Allah)28
b(y)m(ang)h(hidup!")d(Kata)j(Y)-8 b(esus)28 b(k)m(epadan)m(y)m(a:)41
b("Berbahagi-)218 2566 y(alah)23 b(engk)-5 b(au)23 b(Simon)f(bin)g(Y)-8
b(un)m(us)22 b(sebab)g(buk)-5 b(an)22 b(man)m(usia)h(y)m(ang)218
2679 y(men)m(y)m(atak)-5 b(an)32 b(itu)f(k)m(epadam)m(u,)g(melaink)-5
b(an)31 b(Bapa-Ku)g(y)m(ang)h(di)218 2792 y(sorga.)218
2952 y(Dan)f(Akupun)d(b)s(erk)-5 b(ata)31 b(k)m(epadam)m(u:)41
b(Engk)-5 b(au)30 b(adalah)h(P)m(etrus)218 3065 y(dan)21
b(di)g(atas)h(batu)f(k)-5 b(arang)22 b(ini)f(Aku)g(ak)-5
b(an)21 b(mendirik)-5 b(an)21 b(jemaat-)218 3178 y(Ku)43
b(dan)h(alam)h(maut)f(tidak)g(ak)-5 b(an)45 b(menguasain)m(y)m(a.)83
b(Kepa-)218 3291 y(dam)m(u)29 b(ak)-5 b(an)31 b(Kub)s(erik)-5
b(an)28 b(kunci)h(Kera)5 b(jaan)31 b(Sorga.)41 b(Apa)30
b(y)m(ang)218 3404 y(k)-5 b(auik)g(at)33 b(di)g(dunia)f(ini)h(ak)-5
b(an)33 b(terik)-5 b(at)34 b(di)f(sorga)g(dan)f(apa)i(y)m(ang)218
3517 y(k)-5 b(aulepask)g(an)30 b(di)g(dunia)g(ini)g(ak)-5
b(an)31 b(terlepas)g(di)f(sorga.")218 3677 y(Demikianlah)h(Injil)f(T)-8
b(uhan)p 0 TeXcolorgray 79 3989 a(U:)p 0 TeXcolorgray
46 w(T)g(erpujilah)29 b(Kristus)p 0 TeXcolorgray -9 4153
2445 5 v 1208 4266 a Fb(Lingkungan)k(St)g(Petrus)f(Maguwo)p
0 TeXcolorgray eop end
PStoPSsaved restore
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
